{"version":3,"sources":["reportWebVitals.js","app/utils/validator.js","app/components/common/form/textField.jsx","app/components/common/form/selectField.jsx","app/components/common/form/radioField.jsx","app/components/common/form/multiSelectField.jsx","app/components/common/backButton.jsx","app/services/localStorage.service.js","app/services/auth.service.js","app/services/http.service.js","app/services/quality.service.js","app/store/qualities.js","app/services/profession.service.js","app/store/professions.js","app/services/user.service.js","app/utils/generateAuthError.js","app/utils/history.js","app/utils/randomInt.js","app/store/users.js","app/components/page/editUserPage/index.js","app/components/page/editUserPage/editUserPage.jsx","app/components/ui/userCard.jsx","app/components/ui/qualities/quality.jsx","app/components/ui/qualities/index.js","app/components/ui/qualities/qualitiesList.jsx","app/components/ui/qualitiesCard.jsx","app/components/ui/meetingsCard.jsx","app/utils/displayDate.js","app/components/common/comments/comment.jsx","app/components/common/comments/commentsList.jsx","app/components/common/form/textAreaField.jsx","app/components/common/comments/addCommentForm.jsx","app/components/common/comments/index.js","app/services/comment.service.js","app/store/comments.js","app/components/ui/comments.jsx","app/hooks/useComments.jsx","app/components/page/userPage/index.js","app/components/page/userPage/userPage.jsx","app/components/common/pagination.jsx","app/components/common/groupList.jsx","app/components/ui/searchStatus.jsx","app/components/common/bookmark.jsx","app/components/common/table/tableBody.jsx","app/components/common/table/tableHeader.jsx","app/components/common/table/index.js","app/components/common/table/table.jsx","app/components/ui/profession.jsx","app/components/ui/usersTable.jsx","app/components/page/usersListPage/index.js","app/components/page/usersListPage/usersListPage.jsx","app/utils/paginate.js","app/components/ui/hoc/usersLoader.jsx","app/layouts/users.jsx","app/components/common/form/checkBoxField.jsx","app/components/ui/loginForm.jsx","app/components/ui/registerForm.jsx","app/layouts/login.jsx","app/utils/mockData.js","app/layouts/main.jsx","app/components/ui/navProfile.jsx","app/components/ui/navBar.jsx","app/layouts/logOut.jsx","app/components/common/protectedRoute.jsx","app/components/ui/hoc/appLoader.jsx","app/App.js","app/store/createStore.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","validator","data","config","errors","validate","validateMethod","statusValidate","trim","test","length","value","message","fieldName","error","TextField","label","type","name","onChange","useState","showPassword","setShowPassword","className","htmlFor","id","target","onClick","prevState","defaultProps","SelectField","defaultOption","options","optionsArray","Array","isArray","Object","values","disabled","map","option","RadioField","handleChange","checked","MultiSelectField","defaultValue","isMulti","closeMenuOnSelect","classNamePrefix","BackHistoryButton","history","useHistory","goBack","TOKEN_KEY","REFRESH_KEY","EXPIRES_KEY","USERID_KEY","localStorageService","setTokens","refreshToken","expiresIn","localId","idToken","expiresData","Date","getTime","localStorage","setItem","getAccessToken","getItem","getRefreshToken","getExpiresDate","getUserId","removeAuthData","removeItem","httpAuth","axios","create","baseURL","params","key","process","authService","register","a","email","password","post","returnSecureToken","logIn","refresh","grant_type","refresh_token","http","configFile","apiEndpoint","interceptors","request","use","isFireBase","containSlash","url","slice","expiresDate","now","id_token","expires_in","user_id","accessToken","auth","Promise","reject","response","res","content","_id","keys","status","console","log","toast","httpService","get","put","delete","patch","qualityService","fetchAll","qualitiesSlice","createSlice","initialState","entities","isLoading","lastFetch","reducers","qualitiesRequested","state","qualitiesReceved","action","payload","qualitiesRequestFiled","actions","qualitiesReducer","reducer","loadQualitiesList","dispatch","getState","qualities","date","professionService","professionsSlice","professionsRequested","professionsReceved","professionsRequestFiled","professionsReducer","getProfessionsLoadingStatus","professions","userEndpoint","userService","getCurrentUser","update","generateAuthError","createBrowserHistory","randomInt","min","max","Math","floor","random","userId","isLogedIn","dataLoaded","usersSlice","usersRequested","usersReceved","usersRequestFiled","authRequestSuccess","authRequestFailed","userCreated","push","userUpdateSuccessed","findIndex","u","userLoggedOut","authRequested","usersReducer","createAction","userCreateRequested","createUserFailed","userUpdateFailed","userUpdateRequested","createUser","loadUsersList","getUserById","users","find","user","EditUserPage","useDispatch","currentUser","useSelector","professionsLoading","qualitiesLoading","setIsLoading","setData","setErrors","professionsList","p","qualitiesList","q","transformData","qualitiesIds","qualitiesArray","qualId","quality","getQualitiesListByIds","qual","useEffect","validatorConfig","isRequired","isEmail","isValid","onSubmit","e","preventDefault","profession","sex","UserCard","currentUserId","location","pathname","src","toString","substring","width","role","rate","Quality","color","Qualities","newQualitiesArray","QualitiesCard","MeetingsCard","displayDate","parseInt","dateNow","getFullYear","getDate","getHours","minutesDif","getMinutes","toLocaleString","month","getMonth","Comment","created","created_at","onRemove","image","alt","height","CommentsList","comments","comment","TextAreaField","AddCommentForm","commentEndpoint","commentService","createComment","getComments","pageId","orderBy","equalTo","deleteComments","commentId","commentsSlice","isDeleted","commentsRequested","commentsReceved","commentsRequestFiled","commentCreated","commentDeleted","filter","c","commentsReducer","addCommentRequested","deleteCommentRequested","Comments","useParams","loadCommentsList","sortedComments","nanoid","removeComment","CommentsContext","React","createContext","CommentsnProvider","children","setLoading","setComments","setError","errorCatcher","Provider","UserPage","completedMeetings","Pagination","itemsCount","pageSize","onPageChange","currentPage","pageCount","ceil","pages","_","range","page","GroupList","items","valueProperty","contentProperty","onItemSelect","selectedItem","item","SearchStatus","number","lastOne","Number","indexOf","renderPhrase","BookMark","rest","TableBody","columns","renderContent","column","component","path","TableHeader","onSort","selectedSort","rendeSortArrow","currentPath","order","undefined","scope","Table","Profession","prof","getProfession","UserTable","onToggleBookMark","to","bookmark","UsersListPage","setCurrentPage","searchQuery","setSearchQuery","selectedProf","setSelectedProf","sortBy","setSortBy","filteredUsers","toLowerCase","JSON","stringify","count","usersCrop","pageNumber","startIndex","splice","paginate","placeholder","onDelete","newArray","pageIndex","UsersLoader","dataStatus","Users","edit","CheckBoxField","LoginForm","stayOn","loginError","redirect","from","code","errorMessage","login","RegisterForm","licence","isCapitalSymbol","isContainDigit","newData","signUp","Login","formType","setFormType","toggleFormType","useMockData","statusConsts","setStatus","progress","setProgress","setCount","summaryCount","incrementCount","newProgress","updateProgress","initialize","Main","NavProfile","isOpen","setOpen","NavBar","isLoggedIn","aria-current","LogOut","ProtectedRoute","Component","render","props","AppLoader","usersStatus","App","exact","rootReducer","combineReducers","store","configureStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6743f73.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","export function validator(data, config) {\n    const errors = {};\n    function validate(validateMethod, data, config) {\n        let statusValidate;\n        switch (validateMethod) {\n            case \"isRequired\": {\n                if (typeof data === \"boolean\") {\n                    statusValidate = !data;\n                } else {\n                    statusValidate = data.trim() === \"\";\n                }\n                break;\n            }\n            case \"isEmail\": {\n                const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\n                statusValidate = !emailRegExp.test(data);\n                break;\n            }\n            case \"isCapitalSymbol\": {\n                const capitalRegExp = /[A-Z]+/g;\n                statusValidate = !capitalRegExp.test(data);\n                break;\n            }\n            case \"isContainDigit\": {\n                const digitRegExp = /\\d+/g;\n                statusValidate = !digitRegExp.test(data);\n                break;\n            }\n            case \"min\": {\n                statusValidate = data.length < config.value;\n                break;\n            }\n            default:\n                break;\n        }\n        if (statusValidate) return config.message;\n    }\n    for (const fieldName in data) {\n        for (const validateMethod in config[fieldName]) {\n            const error = validate(\n                validateMethod,\n                data[fieldName],\n                config[fieldName][validateMethod]\n            );\n            if (error && !errors[fieldName]) {\n                errors[fieldName] = error;\n            }\n        }\n    }\n    return errors;\n}\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextField = ({ label, type, name, value, onChange, error }) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\n    };\n    const toggleShowPassword = () => {\n        setShowPassword((prevState) => !prevState);\n    };\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name}>{label}</label>\n            <div className=\"input-group has-validation\">\n                <input\n                    type={showPassword ? \"text\" : type}\n                    id={name}\n                    name={name}\n                    value={value}\n                    onChange={handleChange}\n                    className={getInputClasses()}\n                />\n                {type === \"password\" && (\n                    <button\n                        className=\"btn btn-outline-secondary\"\n                        type=\"button\"\n                        onClick={toggleShowPassword}\n                    >\n                        <i\n                            className={\n                                \"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")\n                            }\n                        ></i>\n                    </button>\n                )}\n                {error && <div className=\"invalid-feedback\">{error}</div>}\n            </div>\n        </div>\n    );\n};\nTextField.defaultProps = {\n    type: \"text\"\n};\nTextField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string\n};\n\nexport default TextField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SelectField = ({\n    label,\n    value,\n    onChange,\n    defaultOption,\n    options,\n    error,\n    name\n}) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-select\" + (error ? \" is-invalid\" : \"\");\n    };\n\n    const optionsArray =\n        !Array.isArray(options) && typeof options === \"object\"\n            ? Object.values(options)\n            : options;\n\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name} className=\"form-label\">\n                {label}\n            </label>\n            <select\n                className={getInputClasses()}\n                id={name}\n                name={name}\n                value={value}\n                onChange={handleChange}\n            >\n                <option disabled value=\"\">\n                    {defaultOption}\n                </option>\n                {optionsArray.length > 0 &&\n                    optionsArray.map((option) => (\n                        <option value={option.value} key={option.value}>\n                            {option.label}\n                        </option>\n                    ))}\n            </select>\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\n\nSelectField.propTypes = {\n    defaultOption: PropTypes.string,\n    label: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string,\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    name: PropTypes.string\n};\n\nexport default SelectField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst RadioField = ({ options, name, onChange, value, label }) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    return (\n        <div className=\"mb-4\">\n            <label className=\"form-label\">{label}</label>\n            <div>\n                {options.map((option) => (\n                    <div\n                        key={option.name + \"_\" + option.value}\n                        className=\"form-check form-check-inline\"\n                    >\n                        <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name={name}\n                            id={option.name + \"_\" + option.value}\n                            checked={option.value === value}\n                            value={option.value}\n                            onChange={handleChange}\n                        />\n                        <label\n                            className=\"form-check-label\"\n                            htmlFor={option.name + \"_\" + option.value}\n                        >\n                            {option.name}\n                        </label>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nRadioField.propTypes = {\n    options: PropTypes.array,\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n    label: PropTypes.string\n};\n\nexport default RadioField;\n","import React from \"react\";\nimport Select from \"react-select\";\nimport PropTypes from \"prop-types\";\n\nconst MultiSelectField = ({ options, onChange, name, label, defaultValue }) => {\n    const optionsArray =\n        !Array.isArray(options) && typeof options === \"object\"\n            ? Object.values(options)\n            : options;\n\n    const handleChange = (value) => {\n        onChange({ name: name, value });\n    };\n    return (\n        <div className=\"mb-4\">\n            <label className=\"form-label\">{label}</label>\n            <Select\n                isMulti\n                closeMenuOnSelect={false}\n                defaultValue={defaultValue}\n                options={optionsArray}\n                className=\"basic-multi-select\"\n                classNamePrefix=\"select\"\n                onChange={handleChange}\n                name={name}\n            />\n        </div>\n    );\n};\nMultiSelectField.propTypes = {\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n    label: PropTypes.string,\n    defaultValue: PropTypes.array\n};\n\nexport default MultiSelectField;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nconst BackHistoryButton = () => {\n    const history = useHistory();\n    return (\n        <button className=\"btn btn-primary\" onClick={() => history.goBack()}>\n            <i className=\"bi bi-caret-left\"></i>\n            Назад\n        </button>\n    );\n};\n\nexport default BackHistoryButton;\n","\nconst TOKEN_KEY = \"jwt-token\";\nconst REFRESH_KEY = \"jwt-refresh-token\";\nconst EXPIRES_KEY = \"jwt-expires\";\nconst USERID_KEY = \"user-local-id\";\n\nexport function setTokens({ refreshToken, expiresIn = 3600, localId, idToken }) {\n        const expiresData = new Date().getTime() + expiresIn * 1000;\n        localStorage.setItem(USERID_KEY, localId);\n        localStorage.setItem(TOKEN_KEY, idToken);\n        localStorage.setItem(REFRESH_KEY, refreshToken);\n        localStorage.setItem(EXPIRES_KEY, expiresData);\n    }\nexport function getAccessToken() {\n   return localStorage.getItem(TOKEN_KEY);\n}\nexport function getRefreshToken() {\n    return localStorage.getItem(REFRESH_KEY);\n}\nexport function getExpiresDate() {\n    return localStorage.getItem(EXPIRES_KEY);\n}\nexport function getUserId() {\n    return localStorage.getItem(USERID_KEY);\n}\nexport function removeAuthData() {\n    localStorage.removeItem(USERID_KEY);\n        localStorage.removeItem(TOKEN_KEY);\n        localStorage.removeItem(REFRESH_KEY);\n        localStorage.removeItem(EXPIRES_KEY);\n}\n\n    const localStorageService = {\n        setTokens,\n        getAccessToken,\n        getRefreshToken,\n        getExpiresDate,\n        getUserId,\n        removeAuthData\n    };\n\n    export default localStorageService;\n","import axios from \"axios\";\nimport localStorageService from \"./localStorage.service\";\n\nconst httpAuth = axios.create({\n    baseURL: \"https://identitytoolkit.googleapis.com/v1/\",\n    params: {\n        key: process.env.REACT_APP_FIREBASE_KEY\n    }\n});\n\nconst authService = {\n    register: async ({ email, password }) => {\n        const { data } = await httpAuth.post(`accounts:signUp`, {\n             email,\n              password,\n               returnSecureToken: true\n             });\n             return data;\n    },\n    logIn: async ({ email, password }) => {\n        const { data } = await httpAuth.post(\n            `accounts:signInWithPassword`,\n             {\n                email,\n                 password,\n                  returnSecureToken: true\n});\n        return data;\n    },\n    refresh: async () => {\n        const { data } = await httpAuth.post(\"token\", {\n                        grant_type: \"refresh_token\",\n                        refresh_token: localStorageService.getRefreshToken()\n                    });\n                     return data;\n    }\n\n};\n\nexport default authService;\n","import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport configFile from \"../config.json\";\nimport authService from \"./auth.service\";\nimport localStorageService from \"./localStorage.service\";\n\nconst http = axios.create({\n    baseURL: configFile.apiEndpoint\n});\n\nhttp.interceptors.request.use(\n    async function (config) {\n        if (configFile.isFireBase) {\n            const containSlash = /\\/$/gi.test(config.url);\n            config.url =\n                (containSlash ? config.url.slice(0, -1) : config.url) + \".json\";\n                const expiresDate = localStorageService.getExpiresDate();\n                const refreshToken = localStorageService.getRefreshToken();\n                if (refreshToken && expiresDate < Date.now()) {\n                    const data = await authService.refresh();\n\n                    localStorageService.setTokens({\n                        refreshToken: data.refresh_token,\n                         idToken: data.id_token,\n                          expiresIn: data.expires_in,\n                           localId: data.user_id\n                         });\n                }\n                const accessToken = localStorageService.getAccessToken();\n                if (accessToken) {\n                    config.params = { ...config.params, auth: accessToken };\n                }\n        }\n        return config;\n    },\n    function (error) {\n        return Promise.reject(error);\n    }\n);\nfunction transformData(data) {\n    return data && !data._id\n        ? Object.keys(data).map((key) => ({\n              ...data[key]\n          }))\n        : data;\n}\nhttp.interceptors.response.use(\n    (res) => {\n        if (configFile.isFireBase) {\n            res.data = { content: transformData(res.data) };\n        }\n        return res;\n    },\n    function (error) {\n        const expectedErrors =\n            error.response &&\n            error.response.status >= 400 &&\n            error.response.status < 500;\n\n        if (!expectedErrors) {\n            console.log(error);\n            toast.error(\"Something was wrong. Try it later\");\n        }\n        return Promise.reject(error);\n    }\n);\nconst httpService = {\n    get: http.get,\n    post: http.post,\n    put: http.put,\n    delete: http.delete,\n    patch: http.patch\n};\nexport default httpService;\n","import httpService from \"./http.service\";\nconst qualityEndpoint = \"quality/\";\n\nconst qualityService = {\n    fetchAll: async () => {\n        const { data } = await httpService.get(qualityEndpoint);\n        return data;\n    }\n};\nexport default qualityService;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport qualityService from \"../services/quality.service\";\n\n  const qualitiesSlice = createSlice({\n    name: \"qualities\",\n    initialState: {\n        entities: null,\n        isLoading: true,\n        error: null,\n        lastFetch: null\n    },\n    reducers: {\n        qualitiesRequested: (state) => {\n            state.isLoading = true;\n        },\n        qualitiesReceved: (state, action) => {\n            state.entities = action.payload;\n            state.lastFetch = Date.now();\n            state.isLoading = false;\n        },\n        qualitiesRequestFiled: (state, action) => {\n            state.error = action.payload;\n            state.isLoading = false;\n        }\n    }\n});\n\nconst { actions, reducer: qualitiesReducer } = qualitiesSlice;\nconst { qualitiesRequested, qualitiesReceved, qualitiesRequestFiled } = actions;\n\nexport function isOutdated(date) {\n    if (Date.now() - date > 10 * 60 * 1000) {\n        return true;\n    }\n    return false;\n}\n\nexport const loadQualitiesList = () => async (dispatch, getState) => {\n    const { lastFetch } = getState().qualities;\n    if (isOutdated(lastFetch)) {\ndispatch(qualitiesRequested());\n        try {\n           const { content } = await qualityService.fetchAll();\n           dispatch(qualitiesReceved(content));\n        } catch (error) {\n            dispatch(qualitiesRequestFiled(error.message));\n        }\n    }\n};\n\nexport const getQualities = () => (state) => state.qualities.entities;\n\nexport const getQualitiesLoadingStatus = () => (state) => state.qualities.isLoading;\nexport const getQualitiesByIds = (qualitiesIds) => (state) => {\n if (state.qualities.entities) {\n    const newQualitiesArray = [];\n    for (const qualId of qualitiesIds) {\n        for (const quality of state.qualities.entities) {\n            if (quality._id === qualId) {\n                newQualitiesArray.push(quality);\n                break;\n            }\n        }\n    }\n    return newQualitiesArray;\n }\n};\n\nexport default qualitiesReducer;\n","import httpService from \"./http.service\";\n\nconst professionEndpoint = \"profession/\";\n\nconst professionService = {\n    get: async () => {\n        const { data } = await httpService.get(professionEndpoint);\n        return data;\n    }\n};\nexport default professionService;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport professionService from \"../services/profession.service\";\n\nconst professionsSlice = createSlice({\n    name: \"professions\",\n    initialState: {\n        entities: null,\n        isLoading: true,\n        error: null,\n        lastFetch: null\n    },\n    reducers: {\n        professionsRequested: (state) => {\n            state.isLoading = true;\n        },\n         professionsReceved: (state, action) => {\n            state.entities = action.payload;\n            state.lastFetch = Date.now();\n            state.isLoading = false;\n        },\n        professionsRequestFiled: (state, action) => {\n            state.error = action.payload;\n            state.isLoading = false;\n        }\n\n    }\n});\n\nconst { actions, reducer: professionsReducer } = professionsSlice;\nconst { professionsRequested, professionsReceved, professionsRequestFiled } = actions;\n\nexport function isOutdated(date) {\n    if (Date.now() - date > 10 * 60 * 1000) {\n        return true;\n    }\n    return false;\n}\n\nexport const loadProfessionsList = () => async (dispatch, getState) => {\n    const { lastFetch } = getState().qualities;\n    if (isOutdated(lastFetch)) {\ndispatch(professionsRequested());\n        try {\n           const { content } = await professionService.get();\n           dispatch(professionsReceved(content));\n        } catch (error) {\n            dispatch(professionsRequestFiled(error.message));\n        }\n    }\n};\n\nexport const getProfessions = () => (state) => state.professions.entities;\nexport const getProfessionsLoadingStatus = () => (state) => state.professions.isLoading;\n\n// export const getProfessionsByIds = (professionsIds) => (state) => {\n//  if (state.professions.entities) {\n//     const newProfessionsArray = [];\n//     for (const profId of professionsIds) {\n//         for (const profession of state.professions.entities) {\n//             if (profession._id === profId) {\n//                 newProfessionsArray.push(profession);\n//                 break;\n//             }\n//         }\n//     }\n//     return newProfessionsArray;\n//  }\n// };\n\n export const getProfession = (id) => (state) => {\n        return state.professions.entities.find((p) => p._id === id);\n    };\n\nexport default professionsReducer;\n","import httpService from \"./http.service\";\nimport localStorageService from \"./localStorage.service\";\n\nconst userEndpoint = \"user/\";\n\nconst userService = {\n    get: async () => {\n        const { data } = await httpService.get(userEndpoint);\n        return data;\n    },\n    create: async (payload) => {\n        const { data } = await httpService.put(\n            userEndpoint + payload._id,\n             payload\n             );\n        return data;\n    },\n    getCurrentUser: async () => {\n        const { data } = await httpService.get(\n            userEndpoint + localStorageService.getUserId()\n        );\n        return data;\n    },\n    update: async (payload) => {\n        const { data } = await httpService.patch(userEndpoint + localStorageService.getUserId(), payload);\n        return data;\n    }\n};\nexport default userService;\n","function generateAuthError(message) {\n switch (message) {\n     case \"INVALID_PASSWORD\": return \"Неверно введены email или пароль\";\n    case \"EMAIL_EXISTS\": return \"Пользователь с таким email уже существует\";\n                        default:\n                            return \"Слишком много попыток вхождения, попробуйте позже\";\n                    }\n}\n\nexport default generateAuthError;\n","import { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\nexport default history;\n"," export function randomInt(min, max) {\n        return Math.floor(Math.random() * (max - min + 1) + min);\n      }\n","import { createAction, createSlice } from \"@reduxjs/toolkit\";\nimport authService from \"../services/auth.service\";\nimport localStorageService from \"../services/localStorage.service\";\nimport userService from \"../services/user.service\";\nimport generateAuthError from \"../utils/generateAuthError\";\nimport history from \"../utils/history\";\nimport { randomInt } from \"../utils/randomInt\";\n\nconst initialState = localStorageService.getAccessToken()\n? {\n entities: null,\n        isLoading: true,\n        error: null,\n        auth: { userId: localStorageService.getUserId() },\n        isLogedIn: true,\n        dataLoaded: false\n}\n: {\n entities: null,\n        isLoading: false,\n        error: null,\n        auth: null,\n        isLogedIn: false,\n        dataLoaded: false\n};\n\nconst usersSlice = createSlice({\n    name: \"users\",\n    initialState,\n    reducers: {\n         usersRequested: (state) => {\n            state.isLoading = true;\n        },\n        usersReceved: (state, action) => {\n            state.entities = action.payload;\n            state.dataLoaded = true;\n            state.isLoading = false;\n        },\n        usersRequestFiled: (state, action) => {\n            state.error = action.payload;\n            state.isLoading = false;\n        },\n        authRequestSuccess: (state, action) => {\n            state.auth = action.payload;\n            state.isLogedIn = true;\n        },\n        authRequestFailed: (state, action) => {\n            state.error = action.payload;\n        },\n        userCreated: (state, action) => {\n            if (!Array.isArray(state.entities)) {\n                state.entities = [];\n            }\n            state.entities.push(action.payload);\n        },\n        userUpdateSuccessed: (state, action) => {\n            state.entities[state.entities.findIndex(u => u._id === action.payload._id)] = action.payload;\n        },\n        userLoggedOut: (state) => {\n            state.entities = null;\n            state.auth = null;\n            state.isLogedIn = false;\n            state.dataLoaded = false;\n        },\n        authRequested: (state) => {\n            state.error = null;\n        }\n    }\n});\n\nconst { actions, reducer: usersReducer } = usersSlice;\nconst {\n    usersRequested,\n     usersReceved,\n      usersRequestFiled,\n       authRequestSuccess,\n        authRequestFailed,\n        userCreated,\n        userUpdateSuccessed,\n        userLoggedOut\n} = actions;\nconst authRequested = createAction(\"users/authRequested\");\nconst userCreateRequested = createAction(\"users/userCreateRequested\");\nconst createUserFailed = createAction(\"users/createUserFailed\");\nconst userUpdateFailed = createAction(\"user/userUpdateFailed\");\nconst userUpdateRequested = createAction(\"user/userUpdateRequested\");\n\nexport const login = ({ payload, redirect }) => async (dispatch) => {\n    const { password, email } = payload;\n    dispatch(authRequested());\n    try {\n        const data = await authService.logIn({ email, password });\n        dispatch(authRequestSuccess({ userId: data.localId }));\n         localStorageService.setTokens(data);\n        history.push(redirect);\n    } catch (error) {\n        const { code, message } = error.response.data.error;\n        if (code === 400) {\n            const errorMessage = generateAuthError(message);\n             dispatch(authRequestFailed(errorMessage));\n        } else {\n             dispatch(authRequestFailed(error.message));\n        }\n    }\n};\n\nexport const signUp = ({ email, password, ...rest }) => async (dispatch) => {\n    dispatch(authRequested());\n    try {\n    const data = await authService.register({ email, password });\n    localStorageService.setTokens(data);\n    dispatch(authRequestSuccess({ userId: data.localId }));\n    dispatch(createUser({\n _id: data.localId,\n         email,\n          rate: randomInt(1, 5),\n           completedMeetings: randomInt(0, 200),\n           image: `https://avatars.dicebear.com/api/avataaars/${(\n                                    Math.random() + 1\n                                )\n                                    .toString(36)\n                                    .substring(7)}.svg`,\n            ...rest\n}));\n} catch (error) {\n    dispatch(authRequestFailed(error.message));\n}\n};\n\nexport const logOut = () => (dispatch) => {\nlocalStorageService.removeAuthData();\ndispatch(userLoggedOut());\nhistory.push(\"/\");\n};\n\nfunction createUser(payload) {\nreturn async function (dispatch) {\n    dispatch(userCreateRequested());\n    try {\n        const { content } = await userService.create(payload);\n   dispatch(userCreated(content));\n   history.push(\"/users\");\n    } catch (error) {\n        dispatch(createUserFailed(error.message));\n    }\n};\n}\nexport const updateUserData = (payload) => async (dispatch) => {\n    dispatch(userUpdateRequested());\n    try {\n    const { content } = await userService.update(payload);\n    dispatch(userUpdateSuccessed(content));\n    history.push(`/users/${content._id}`);\n} catch (error) {\n    dispatch(userUpdateFailed(error.message));\n}\n};\n\nexport const loadUsersList = () => async (dispatch) => {\n    dispatch(usersRequested());\n        try {\n           const { content } = await userService.get();\n           dispatch(usersReceved(content));\n        } catch (error) {\n            dispatch(usersRequestFiled(error.message));\n        }\n};\n\nexport const getUsersList = () => (state) => {\n    return state.users.entities;\n};\nexport const getCurrentUserData = () => (state) => {\n  return state.users.entities\n? state.users.entities.find((u) => u._id === state.users.auth.userId)\n: null;\n};\n\nexport const getUserById = (userId) => (state) => {\n        if (state.users.entities) {\n            return state.users.entities.find((user) => user._id === userId);\n        }\n    };\nexport const getIsLogedIn = () => (state) => state.users.isLogedIn;\nexport const getDataStatus = () => (state) => state.users.dataLoaded;\nexport const getCurrentUserId = () => (state) => state.users.auth.userId;\nexport const getUsersIsLoadingStatus = () => (state) => state.users.isLoading;\nexport const getAuthErrors = () => (state) => {\nreturn state.users.error;\n};\n\nexport default usersReducer;\n","import EditUserPage from \"./editUserPage\";\nexport default EditUserPage;\n","import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../../utils/validator\";\nimport TextField from \"../../common/form/textField\";\nimport SelectField from \"../../common/form/selectField\";\nimport RadioField from \"../../common/form/radioField\";\nimport MultiSelectField from \"../../common/form/multiSelectField\";\nimport BackHistoryButton from \"../../common/backButton\";\nimport { getQualities, getQualitiesLoadingStatus } from \"../../../store/qualities\";\nimport { getProfessions, getProfessionsLoadingStatus } from \"../../../store/professions\";\nimport { getCurrentUserData, updateUserData } from \"../../../store/users\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst EditUserPage = () => {\n    const dispatch = useDispatch();\n    const currentUser = useSelector(getCurrentUserData());\n     const professionsLoading = useSelector(getProfessionsLoadingStatus());\n    const professions = useSelector(getProfessions());\n    const qualities = useSelector(getQualities());\n    const qualitiesLoading = useSelector(getQualitiesLoadingStatus());\n    const [isLoading, setIsLoading] = useState(true);\n    const [data, setData] = useState();\n    const [errors, setErrors] = useState({});\n    const professionsList = professions.map(p => ({ label: p.name, value: p._id }));\n      const qualitiesList = qualities.map(q => ({ label: q.name, value: q._id }));\n\n    // const getProfessionById = () => {\n    //     // for (const prof of professions) {\n    //     //     if (prof.value === id) {\n    //     //         return { _id: prof.value, name: prof.label };\n    //     //     }\n    //     // }\n    //     const profession = getProfession(currentUser.profession);\n    //     return profession.name;\n    // };\n    // console.log(getProfessionById());\n    // const getQualities = () => {\n    //     // const qualitiesArray = [];\n    //     // for (const elem of elements) {\n    //     //     for (const quality in qualities) {\n    //     //         if (elem.value === qualities[quality].value) {\n    //     //             qualitiesArray.push({\n    //     //                 _id: qualities[quality].value,\n    //     //                 name: qualities[quality].label,\n    //     //                 color: qualities[quality].color\n    //     //             });\n    //     //         }\n    //     //     }\n    //     // }\n    //     // return qualitiesArray;\n    //     return quality = getQuality(currentUser.qualities.toString());\n    // };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValidate = validate();\n        if (!isValidate) return;\n        dispatch(updateUserData({ ...data, qualities: data.qualities.map((qual) => qual.value) }));\n    };\n    function getQualitiesListByIds(qualitiesIds) {\n        const qualitiesArray = [];\n        for (const qualId of qualitiesIds) {\n            for (const quality of qualities) {\n                if (quality._id === qualId) {\n                    qualitiesArray.push(quality);\n                    break;\n                }\n            }\n        }\n         return qualitiesArray;\n    }\n\n    const transformData = (data) => {\n      return getQualitiesListByIds(data).map((qual) => ({ label: qual.name, value: qual._id }));\n    };\n    useEffect(() => {\n        if (!professionsLoading && !qualitiesLoading && currentUser && !data) {\n            setData({\n                ...currentUser,\n                qualities: transformData(currentUser.qualities)\n\n            });\n        }\n    }, [professionsLoading, qualitiesLoading, currentUser, data]);\n    useEffect(() => {\n if (data && isLoading) {\n        setIsLoading(false);\n    }\n}, [data]);\n\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n        name: {\n            isRequired: {\n                message: \"Введите ваше имя\"\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n    return (\n        <div className=\"container mt-5\">\n            <BackHistoryButton />\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\n                    {!isLoading && Object.keys(professions).length > 0 ? (\n                        <form onSubmit={handleSubmit}>\n                            <TextField\n                                label=\"Имя\"\n                                name=\"name\"\n                                value={data.name}\n                                onChange={handleChange}\n                                error={errors.name}\n                            />\n                            <TextField\n                                label=\"Электронная почта\"\n                                name=\"email\"\n                                value={data.email}\n                                onChange={handleChange}\n                                error={errors.email}\n                            />\n                            <SelectField\n                                label=\"Выбери свою профессию\"\n                                defaultOption=\"Choose...\"\n                                options={professionsList}\n                                name=\"profession\"\n                                onChange={handleChange}\n                                value={data.profession}\n                                error={errors.profession}\n                            />\n                            <RadioField\n                                options={[\n                                    { name: \"Male\", value: \"male\" },\n                                    { name: \"Female\", value: \"female\" },\n                                    { name: \"Other\", value: \"other\" }\n                                ]}\n                                value={data.sex}\n                                name=\"sex\"\n                                onChange={handleChange}\n                                label=\"Выберите ваш пол\"\n                            />\n                            <MultiSelectField\n                                defaultValue={data.qualities}\n                                options={qualitiesList}\n                                onChange={handleChange}\n                                name=\"qualities\"\n                                label=\"Выберите ваши качества\"\n                            />\n                            <button\n                                type=\"submit\"\n                                disabled={!isValid}\n                                className=\"btn btn-primary w-100 mx-auto\"\n                            >\n                                Обновить\n                            </button>\n                        </form>\n                    ) : (\n                        \"Loading...\"\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default EditUserPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { getCurrentUserId } from \"../../store/users\";\n\nconst UserCard = ({ user }) => {\n    const history = useHistory();\n    const currentUserId = useSelector(getCurrentUserId());\n    const handleClick = () => {\n        history.push(history.location.pathname + \"/edit\");\n    };\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-body\">\n               {currentUserId === user._id && <button\n                    className=\"position-absolute top-0 end-0 btn btn-light btn-sm\"\n                    onClick={handleClick}\n                >\n                    <i className=\"bi bi-gear\"></i>\n                </button>}\n                <div className=\"d-flex flex-column align-items-center text-center position-relative\">\n                    <img\n                        src={`https://avatars.dicebear.com/api/avataaars/${(\n                            Math.random() + 1\n                        )\n                            .toString(36)\n                            .substring(7)}.svg`}\n                        className=\"rounded-circle\"\n                        width=\"150\"\n                    />\n                    <div className=\"mt-3\">\n                        <h4>{user.name}</h4>\n                        <p className=\"text-secondary mb-1\">\n                            {user.profession.name}\n                        </p>\n                        <div className=\"text-muted\">\n                            <i\n                                className=\"bi bi-caret-down-fill text-primary\"\n                                role=\"button\"\n                            ></i>\n                            <i\n                                className=\"bi bi-caret-up text-secondary\"\n                                role=\"button\"\n                            ></i>\n                            <span className=\"ms-2\">{user.rate}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\nUserCard.propTypes = {\n    user: PropTypes.object\n};\n\nexport default UserCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst Quality = ({ _id, color, name }) => {\n    return (\n        <span className={\"badge m-1 bg-\" + color} key={_id}>\n            {name}\n        </span>\n    );\n};\nQuality.propTypes = {\n    _id: PropTypes.string,\n    color: PropTypes.string,\n    name: PropTypes.string\n};\n\nexport default Quality;\n","import Qualities from \"./qualitiesList\";\nexport default Qualities;\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Quality from \"./quality\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getQualitiesByIds, getQualitiesLoadingStatus, loadQualitiesList } from \"../../../store/qualities\";\n\nconst QualitiesList = ({ qualities }) => {\n    const dispatch = useDispatch();\n     const isLoading = useSelector(getQualitiesLoadingStatus());\n    if (isLoading) return \"Loading...\";\n    const qualitiesList = useSelector(getQualitiesByIds(qualities));\n    useEffect(() => {\n        dispatch(loadQualitiesList());\n    }, []);\n    return (\n        <>\n            {qualitiesList.map((qual) => (\n                <Quality key={qual._id} {...qual} />\n            ))}\n        </>\n    );\n};\n\nQualitiesList.propTypes = {\n    qualities: PropTypes.array\n};\n\nexport default QualitiesList;\n","import React from \"react\";\nimport Qualities from \"./qualities\";\nimport PropTypes from \"prop-types\";\n\nconst QualitiesCard = ({ data }) => {\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-body d-flex flex-column justify-content-center text-center\">\n                <h5 className=\"card-title\">\n                    <span>Qualities</span>\n                </h5>\n                <p className=\"card-text\">\n                    <Qualities qualities={data} />\n                </p>\n            </div>\n        </div>\n    );\n};\nQualitiesCard.propTypes = {\n    data: PropTypes.array\n};\n\nexport default QualitiesCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst MeetingsCard = ({ value }) => {\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-body d-flex flex-column justify-content-center text-center\">\n                <h5 className=\"card-title\">\n                    <span>Completed meetings</span>\n                </h5>\n\n                <h1 className=\"display-1\">{value}</h1>\n            </div>\n        </div>\n    );\n};\nMeetingsCard.propTypes = {\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\n\nexport default MeetingsCard;\n","export function displayDate(data) {\n    const date = new Date(parseInt(data));\n    const dateNow = new Date();\n    const yearDif = dateNow.getFullYear() - date.getFullYear();\n    if (yearDif === 0) {\n        const dayDif = dateNow.getDate() - date.getDate();\n        if (dayDif === 0) {\n            const hourDif = dateNow.getHours() - date.getHours();\n            if (hourDif === 0) {\n                const minutesDif = dateNow.getMinutes() - date.getMinutes();\n\n                if (minutesDif >= 0 && minutesDif < 5) return \"1 минуту назад\";\n                if (minutesDif >= 5 && minutesDif < 10) return \"5 минут назад\";\n                if (minutesDif >= 10 && minutesDif < 30) {\n                    return \"10 минут назад\";\n                }\n                return \"30 минут назад\";\n            }\n            return `${date.getHours()}:${date.getMinutes()}`;\n        }\n\n        return `${date.getDate()} ${date.toLocaleString(\"default\", {\n            month: \"long\"\n        })}`;\n    }\n    return (\n        date.getFullYear() + \".\" + (date.getMonth() + 1) + \"_\" + date.getDate()\n    );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { displayDate } from \"../../../utils/displayDate\";\nimport { useSelector } from \"react-redux\";\nimport { getCurrentUserId, getUserById } from \"../../../store/users\";\n\nconst Comment = ({\n    content,\n    created_at: created,\n    _id: id,\n    userId,\n    onRemove\n}) => {\n    const user = useSelector(getUserById(userId));\n    const currentUserId = useSelector(getCurrentUserId());\n\n    return (\n        <div className=\"bg-light card-body  mb-3\">\n            <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"d-flex flex-start \">\n                            <img\n                                src={user.image}\n                                className=\"rounded-circle shadow-1-strong me-3\"\n                                alt=\"avatar\"\n                                width=\"65\"\n                                height=\"65\"\n                            />\n                            <div className=\"flex-grow-1 flex-shrink-1\">\n                                <div className=\"mb-4\">\n                                    <div className=\"d-flex justify-content-between align-items-center\">\n                                        <p className=\"mb-1 \">\n                                            {user && user.name}{\" \"}\n                                            <span className=\"small\">\n                                                - {displayDate(created)}\n                                            </span>\n                                        </p>\n                                        {currentUserId === userId &&\n                                        <button\n                                            className=\"btn btn-sm text-primary d-flex align-items-center\"\n                                            onClick={() => onRemove(id)}\n                                        >\n                                            <i className=\"bi bi-x-lg\"></i>\n                                        </button>}\n                                    </div>\n                                    <p className=\"small mb-0\">{content}</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n            </div>\n        </div>\n    );\n};\nComment.propTypes = {\n    content: PropTypes.string,\n    edited_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    created_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    userId: PropTypes.string,\n    onRemove: PropTypes.func,\n    _id: PropTypes.string\n};\n\nexport default Comment;\n","import React from \"react\";\nimport Comment from \"./comment\";\nimport PropTypes from \"prop-types\";\n\nconst CommentsList = ({ comments, onRemove }) => {\n    return comments.map((comment) => (\n        <Comment key={comment._id} {...comment} onRemove={onRemove} />\n    ));\n};\nCommentsList.propTypes = {\n    comment: PropTypes.array,\n    onRemove: PropTypes.func\n};\n\nexport default CommentsList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextAreaField = ({ label, name, value, onChange, error }) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\n    };\n\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name}> {label}</label>\n            <div className=\"input-group has-validation\">\n                <textarea\n                    id={name}\n                    name={name}\n                    value={value}\n                    onChange={handleChange}\n                    className={getInputClasses()}\n                />\n\n                {error && <div className=\"invalid-feedback \">{error}</div>}\n            </div>\n        </div>\n    );\n};\nTextAreaField.defaultProps = {\n    type: \"text\"\n};\nTextAreaField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string\n};\n\nexport default TextAreaField;\n","import React, { useState } from \"react\";\nimport TextAreaField from \"../form/textAreaField\";\nimport { validator } from \"../../../utils/validator\";\nimport PropTypes from \"prop-types\";\n\nconst AddCommentForm = ({ onSubmit }) => {\n    const [data, setData] = useState({});\n    const [errors, setErrors] = useState({});\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfig = {\n\n        content: {\n            isRequired: {\n                message: \"Сообщение не может быть пустым\"\n            }\n        }\n    };\n\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n\n    const clearForm = () => {\n        setData({});\n        setErrors({});\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        onSubmit(data);\n        clearForm();\n    };\n\n    return (\n        <div>\n            <h2>New comment</h2>\n            <form onSubmit={handleSubmit}>\n\n                <TextAreaField\n                    value={data.content || \"\"}\n                    onChange={handleChange}\n                    name=\"content\"\n                    label=\"Сообщение\"\n                    error={errors.content}\n                />\n                <div className=\"d-flex justify-content-end\">\n                    <button className=\"btn btn-primary\">Опубликовать</button>\n                </div>\n            </form>\n        </div>\n    );\n};\nAddCommentForm.propTypes = {\n    onSubmit: PropTypes.func\n};\n\nexport default AddCommentForm;\n","import CommentsList from \"./commentsList\";\nimport AddCommentForm from \"./addCommentForm\";\nexport default CommentsList;\nexport { AddCommentForm };\n","import httpService from \"./http.service\";\nconst commentEndpoint = \"comment/\";\n\nconst commentService = {\n    createComment: async (payload) => {\n        const { data } = await httpService.put(commentEndpoint + payload._id, payload);\n        return data;\n    },\n    getComments: async (pageId) => {\n        const { data } = await httpService.get(commentEndpoint, {\n            params: {\n                orderBy: '\"pageId\"',\n                equalTo: `\"${pageId}\"`\n            }\n        });\n        return data;\n    },\n    deleteComments: async (commentId) => {\n       const { data } = await httpService.delete(commentEndpoint + commentId);\n       return data;\n    }\n};\nexport default commentService;\n","import { createAction, createSlice } from \"@reduxjs/toolkit\";\nimport commentService from \"../services/comment.service\";\nimport { getCurrentUserId } from \"./users\";\nimport { nanoid } from \"nanoid\";\n\nconst commentsSlice = createSlice({\n    name: \"comments\",\n    initialState: {\n        entities: null,\n        isLoading: true,\n        isDeleted: false,\n        error: null\n    },\n    reducers: {\n        commentsRequested: (state) => {\n            state.isLoading = true;\n        },\n         commentsReceved: (state, action) => {\n            state.entities = action.payload;\n            state.isLoading = false;\n        },\n        commentsRequestFiled: (state, action) => {\n            state.error = action.payload;\n            state.isLoading = false;\n        },\n        commentCreated: (state, action) => {\n            state.entities.push(action.payload);\n        },\n        commentDeleted: (state, action) => {\n            state.entities = state.entities.filter(\n                (c) => c._id !== action.payload\n            );\n        }\n\n    }\n});\n\nconst { actions, reducer: commentsReducer } = commentsSlice;\nconst {\n commentsRequested,\n     commentsReceved,\n      commentsRequestFiled,\n    commentCreated,\n    commentDeleted\n } = actions;\n\nconst addCommentRequested = createAction(\"commnets/addCommentRequested\");\nconst deleteCommentRequested = createAction(\"comments/deleteCommentRequested\");\n\nexport const loadCommentsList = (userId) => async (dispatch) => {\ndispatch(commentsRequested());\n        try {\n           const { content } = await commentService.getComments(userId);\n           dispatch(commentsReceved(content));\n        } catch (error) {\n            dispatch(commentsRequestFiled(error.message));\n        }\n    };\n\nexport const removeComment = (id) => async (dispatch, state) => {\n    dispatch(deleteCommentRequested());\n    try {\n        const { content } = await commentService.deleteComments(id);\n        if (content === null) {\n             dispatch(commentDeleted(id));\n        };\n    } catch (error) {\n         dispatch(commentsRequestFiled(error.message));\n    }\n};\n\nexport const createComment = (payload) => async (dispatch, getState) => {\n   dispatch(addCommentRequested(payload));\n   const comment = {\n            ...payload,\n            _id: nanoid(),\n            created_at: Date.now(),\n            userId: getCurrentUserId()(getState())\n\n        };\n    try {\n         const { content } = await commentService.createComment(comment);\n        dispatch(commentCreated(content));\n    } catch (error) {\n        dispatch(commentsRequestFiled(error.message));\n    }\n};\n\nexport const getComments = () => (state) => state.comments.entities;\nexport const getCommentsLoadingStatus = () => (state) => state.comments.isLoading;\nexport default commentsReducer;\n","import { orderBy } from \"lodash\";\nimport React, { useEffect } from \"react\";\nimport CommentsList, { AddCommentForm } from \"../common/comments\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createComment, getComments, getCommentsLoadingStatus, loadCommentsList, removeComment } from \"../../store/comments\";\nimport { useParams } from \"react-router-dom\";\n\nconst Comments = () => {\n    const { userId } = useParams();\n    const dispatch = useDispatch();\n    const comments = useSelector(getComments());\n useEffect(() => { dispatch(loadCommentsList(userId)); }, [userId]);\n    const isLoading = useSelector(getCommentsLoadingStatus());\n\n    const handleSubmit = (data) => {\n        dispatch(createComment({ ...data, pageId: userId }));\n    };\n    const handleRemoveComment = (id) => {\n        dispatch(removeComment(id));\n    };\n    const sortedComments = orderBy(comments, [\"created_at\"], [\"desc\"]);\n    return (\n        <>\n            <div className=\"card mb-2\">\n                {\" \"}\n                <div className=\"card-body \">\n                    <AddCommentForm onSubmit={handleSubmit} />\n                </div>\n            </div>\n            {sortedComments.length > 0 && (\n                <div className=\"card mb-3\">\n                    <div className=\"card-body \">\n                        <h2>Comments</h2>\n                        <hr />\n                        {!isLoading ? <CommentsList\n                            comments={sortedComments}\n                            onRemove={handleRemoveComment}\n                        /> : \"Loading...\"}\n\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default Comments;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useParams } from \"react-router-dom\";\nimport { nanoid } from \"nanoid\";\nimport commentService from \"../services/comment.service\";\nimport { toast } from \"react-toastify\";\nimport { useSelector } from \"react-redux\";\nimport { getCurrentUserId } from \"../store/users\";\n\nconst CommentsContext = React.createContext();\n\nexport const useComments = () => {\n    return useContext(CommentsContext);\n};\n\nexport const CommentsnProvider = ({ children }) => {\n    const [isLoading, setLoading] = useState(true);\n    const [comments, setComments] = useState([]);\n    const { userId } = useParams();\n    const currentUserId = useSelector(getCurrentUserId());\n    const [error, setError] = useState(null);\n    useEffect(() => {\n        getComments();\n    }, [userId]);\n      useEffect(() => {\n        if (error !== null) {\n            toast(error);\n            setError(null);\n        }\n    }, [error]);\n     function errorCatcher(error) {\n        const { message } = error.response.data;\n        setError(message);\n    }\n\n    async function createComment(data) {\n        const comment = {\n            ...data,\n            _id: nanoid(),\n            pageId: userId,\n            created_at: Date.now(),\n            userId: currentUserId\n\n        };\n        try {\n            const { content } = await commentService.createComment(comment);\n            setComments((prevState) => [...prevState, content]);\n        } catch (error) {\n            errorCatcher(error);\n        }\n    }\n    async function removeComment(id) {\n        try {\n            const { content } = await commentService.deleteComments(id);\n            if (content === null) {\n                setComments((prevState) => prevState.filter((c) => c._id !== id));\n            }\n        } catch (error) {\n            errorCatcher(error);\n        }\n    }\n\n    async function getComments() {\n        try {\n            const { content } = await commentService.getComments(userId);\n            setComments(content);\n        } catch (error) {\n              errorCatcher(error);\n        } finally {\n            setLoading(false);\n        }\n    }\n    return (\n        <CommentsContext.Provider\n            value={{ comments, createComment, isLoading, getComments, removeComment }}\n        >\n            {children}\n        </CommentsContext.Provider>\n    );\n};\n\nCommentsnProvider.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n","import UserPage from \"./userPage\";\nexport default UserPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport UserCard from \"../../ui/userCard\";\nimport QualitiesCard from \"../../ui/qualitiesCard\";\nimport MeetingsCard from \"../../ui/meetingsCard\";\nimport Comments from \"../../ui/comments\";\nimport { CommentsnProvider } from \"../../../hooks/useComments\";\nimport { useSelector } from \"react-redux\";\nimport { getUserById } from \"../../../store/users\";\n\nconst UserPage = ({ userId }) => {\n   const user = useSelector(getUserById(userId));\n    if (user) {\n        return (\n            <div className=\"container\">\n                <div className=\"row gutters-sm\">\n                    <div className=\"col-md-4 mb-3\">\n                        <UserCard user={user} />\n                        <QualitiesCard data={user.qualities} />\n                        <MeetingsCard value={user.completedMeetings} />\n                    </div>\n                    <div className=\"col-md-8\">\n                        <CommentsnProvider>\n                            <Comments />\n                        </CommentsnProvider>\n\n                    </div>\n                </div>\n            </div>\n        );\n    } else {\n        return <h1>Loading</h1>;\n    }\n};\n\nUserPage.propTypes = {\n    userId: PropTypes.string.isRequired\n};\n\nexport default UserPage;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\n    const pageCount = Math.ceil(itemsCount / pageSize);\n    if (pageCount === 1) return null;\n    const pages = _.range(1, pageCount + 1);\n    return (\n        <nav>\n            <ul className=\"pagination\">\n                {pages.map((page) => (\n                    <li\n                        className={\n                            \"page-item\" +\n                            (page === currentPage ? \" active\" : \"\")\n                        }\n                        key={\"page_\" + page}\n                    >\n                        <button\n                            className=\"page-link\"\n                            onClick={() => onPageChange(page)}\n                        >\n                            {page}\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    );\n};\nPagination.propTypes = {\n    itemsCount: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired,\n    currentPage: PropTypes.number.isRequired\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst GroupList = ({\n    items,\n    valueProperty,\n    contentProperty,\n    onItemSelect,\n    selectedItem\n}) => {\n    if (!Array.isArray(items)) {\n        return (\n            <ul className=\"list-group\">\n                {Object.keys(items).map((item) => (\n                    <li\n                        key={items[item][valueProperty]}\n                        className={\n                            \"list-group-item\" +\n                            (items[item] === selectedItem ? \" active\" : \"\")\n                        }\n                        onClick={() => onItemSelect(items[item])}\n                        role=\"button\"\n                    >\n                        {items[item][contentProperty]}\n                    </li>\n                ))}\n            </ul>\n        );\n    }\n    return (\n        <ul className=\"list-group\">\n            {items.map((item) => (\n                <li\n                    key={item[valueProperty]}\n                    className={\n                        \"list-group-item\" +\n                        (item === selectedItem ? \" active\" : \"\")\n                    }\n                    onClick={() => onItemSelect(item)}\n                    role=\"button\"\n                >\n                    {item[contentProperty]}\n                </li>\n            ))}\n        </ul>\n    );\n};\nGroupList.defaultProps = {\n    valueProperty: \"_id\",\n    contentProperty: \"name\"\n};\nGroupList.propTypes = {\n    items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    valueProperty: PropTypes.string.isRequired,\n    contentProperty: PropTypes.string.isRequired,\n    onItemSelect: PropTypes.func,\n    selectedItem: PropTypes.object\n};\n\nexport default GroupList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst SearchStatus = ({ length }) => {\n    const renderPhrase = (number) => {\n        const lastOne = Number(number.toString().slice(-1));\n        if (number > 4 && number < 15) {\n            return \"человек тусанет\";\n        }\n        if (lastOne === 1) return \"человек тусанет\";\n        if ([2, 3, 4].indexOf(lastOne) >= 0) return \"человека тусанут\";\n        return \"человек тусанет\";\n    };\n    return (\n        <h2>\n            <span\n                className={\"badge \" + (length > 0 ? \"bg-primary\" : \"bg-danger\")}\n            >\n                {length > 0\n                    ? `${length + \" \" + renderPhrase(length)}   с тобой сегодня`\n                    : \"Никто с тобой не тусанет\"}\n            </span>\n        </h2>\n    );\n};\nSearchStatus.propTypes = {\n    length: PropTypes.number\n};\n\nexport default SearchStatus;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst BookMark = ({ status, ...rest }) => {\n    return (\n        <button {...rest}>\n            <i className={\"bi bi-bookmark\" + (status ? \"-heart-fill\" : \"\")}></i>\n        </button>\n    );\n};\nBookMark.propTypes = {\n    status: PropTypes.bool\n};\n\nexport default BookMark;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst TableBody = ({ data, columns }) => {\n    const renderContent = (item, column) => {\n        if (columns[column].component) {\n            const component = columns[column].component;\n            if (typeof component === \"function\") {\n                return component(item);\n            }\n            return component;\n        }\n        return _.get(item, columns[column].path);\n    };\n    return (\n        <tbody>\n            {data.map((item) => (\n                <tr key={item._id}>\n                    {Object.keys(columns).map((column) => (\n                        <td key={column}>{renderContent(item, column)}</td>\n                    ))}\n                </tr>\n            ))}\n        </tbody>\n    );\n};\n\nTableBody.propTypes = {\n    data: PropTypes.array.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableBody;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\n    const handleSort = (item) => {\n        if (selectedSort.path === item) {\n            onSort({\n                ...selectedSort,\n                order: selectedSort.order === \"asc\" ? \"desc\" : \"asc\"\n            });\n        } else {\n            onSort({ path: item, order: \"asc\" });\n        }\n    };\n    const rendeSortArrow = (selectedSort, currentPath) => {\n        if (selectedSort.path === currentPath) {\n            if (selectedSort.order === \"asc\") {\n                return <i className=\"bi bi-caret-down-fill\"></i>;\n            } else {\n                return <i className=\"bi bi-caret-up-fill\"></i>;\n            }\n        }\n        return null;\n    };\n\n    return (\n        <thead>\n            <tr>\n                {Object.keys(columns).map((column) => (\n                    <th\n                        key={column}\n                        onClick={\n                            columns[column].path\n                                ? () => handleSort(columns[column].path)\n                                : undefined\n                        }\n                        {...{ role: columns[column].path && \"button\" }}\n                        scope=\"col\"\n                    >\n                        {columns[column].name}{\" \"}\n                        {rendeSortArrow(selectedSort, columns[column].path)}\n                    </th>\n                ))}\n            </tr>\n        </thead>\n    );\n};\nTableHeader.propTypes = {\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableHeader;\n","import Table from \"./table\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\n\nexport default Table;\n\nexport { TableBody, TableHeader };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\n\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\n    return (\n        <table className=\"table\">\n            {children || (\n                <>\n                    <TableHeader {...{ onSort, selectedSort, columns }} />\n                    <TableBody {...{ columns, data }} />\n                </>\n            )}\n        </table>\n    );\n};\nTable.propTypes = {\n    onSort: PropTypes.func,\n    selectedSort: PropTypes.object,\n    columns: PropTypes.object,\n    data: PropTypes.array,\n    children: PropTypes.array\n};\n\nexport default Table;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { getProfession, getProfessionsLoadingStatus } from \"../../store/professions\";\n\nconst Profession = ({ id }) => {\n    const isLoading = useSelector(getProfessionsLoadingStatus());\n    const prof = useSelector(getProfession(id));\n    console.log(prof);\n    if (!isLoading) {\n        return <p>{prof.name}</p>;\n    } else return \"Loading...\";\n};\nProfession.propTypes = {\n    id: PropTypes.string\n};\nexport default Profession;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport BookMark from \"../common/bookmark\";\nimport Qualities from \"./qualities\";\nimport Table from \"../common/table\";\nimport { Link } from \"react-router-dom\";\nimport Profession from \"./profession\";\n\nconst UserTable = ({\n    users,\n    onSort,\n    selectedSort,\n    onToggleBookMark,\n    // onDelete,\n    ...rest\n}) => {\n    const columns = {\n        name: {\n            path: \"name\",\n            name: \"Имя\",\n            component: (user) => (\n                <Link to={`/users/${user._id}`}>{user.name}</Link>\n            )\n        },\n        qualities: {\n            name: \"Качества\",\n            component: (user) => <Qualities qualities={user.qualities} />\n        },\n        professions: {\n            name: \"Профессия\",\n            component: (user) => <Profession id={user.profession} />\n        },\n        completedMeetings: {\n            path: \"completedMeetings\",\n            name: \"Встретился, раз\"\n        },\n        rate: { path: \"rate\", name: \"Оценка\" },\n        bookmark: {\n            path: \"bookmark\",\n            name: \"Избранное\",\n            component: (user) => (\n                <BookMark\n                    status={user.bookmark}\n                    onClick={() => onToggleBookMark(user._id)}\n                />\n            )\n        }\n        // delete: {\n        //     component: (user) => (\n        //         <button\n        //             onClick={() => onDelete(user._id)}\n        //             className=\"btn btn-danger\"\n        //         >\n        //             delete\n        //         </button>\n        //     )\n        // }\n    };\n    return (\n        <Table\n            onSort={onSort}\n            selectedSort={selectedSort}\n            columns={columns}\n            data={users}\n        />\n    );\n};\n\nUserTable.propTypes = {\n    users: PropTypes.array.isRequired,\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    onToggleBookMark: PropTypes.func.isRequired\n    // onDelete: PropTypes.func.isRequired\n};\n\nexport default UserTable;\n","import UsersListPage from \"./usersListPage\";\nexport default UsersListPage;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { paginate } from \"../../../utils/paginate\";\nimport Pagination from \"../../common/pagination\";\nimport GroupList from \"../../common/groupList\";\nimport SearchStatus from \"../../ui/searchStatus\";\nimport UserTable from \"../../ui/usersTable\";\nimport _ from \"lodash\";\nimport { useSelector } from \"react-redux\";\nimport { getProfessions, getProfessionsLoadingStatus } from \"../../../store/professions\";\nimport { getCurrentUserId, getUsersList } from \"../../../store/users\";\nconst UsersListPage = () => {\n    const users = useSelector(getUsersList());\n    const currentUserId = useSelector(getCurrentUserId());\n     const professionsLoading = useSelector(getProfessionsLoadingStatus);\n    const professions = useSelector(getProfessions());\n    const [currentPage, setCurrentPage] = useState(1);\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [selectedProf, setSelectedProf] = useState();\n    const [sortBy, setSortBy] = useState({ path: \"name\", order: \"asc\" });\n    const pageSize = 8;\n\n    const handleDelete = (userId) => {\n        // setUsers(users.filter((user) => user._id !== userId));\n        console.log(userId);\n    };\n    const handleToggleBookMark = (id) => {\n        const newArray = users.map((user) => {\n            if (user._id === id) {\n                return { ...user, bookmark: !user.bookmark };\n            }\n            return user;\n        });\n        // setUsers(newArray);\n        console.log(newArray);\n    };\n\n    useEffect(() => {\n        setCurrentPage(1);\n    }, [selectedProf, searchQuery]);\n\n    const handleProfessionSelect = (item) => {\n        if (searchQuery !== \"\") setSearchQuery(\"\");\n        setSelectedProf(item);\n    };\n    const handleSearchQuery = ({ target }) => {\n        setSelectedProf(undefined);\n        setSearchQuery(target.value);\n    };\n\n    const handlePageChange = (pageIndex) => {\n        setCurrentPage(pageIndex);\n    };\n    const handleSort = (item) => {\n        setSortBy(item);\n    };\n\n    if (users) {\n            function filterUsers(data) {\n             const filteredUsers = searchQuery\n            ? data.filter(\n                  (user) =>\n                      user.name\n                          .toLowerCase()\n                          .indexOf(searchQuery.toLowerCase()) !== -1\n              )\n            : selectedProf\n            ? data.filter(\n                  (user) =>\n                      JSON.stringify(user.profession) ===\n                      JSON.stringify(selectedProf)\n              )\n            : data;\n            return filteredUsers.filter((u) => u._id !== currentUserId\n            );\n            }\n            const filteredUsers = filterUsers(users);\n\n        const count = filteredUsers.length;\n        const sortedUsers = _.orderBy(\n            filteredUsers,\n            [sortBy.path],\n            [sortBy.order]\n        );\n        const usersCrop = paginate(sortedUsers, currentPage, pageSize);\n        const clearFilter = () => {\n            setSelectedProf();\n        };\n\n        return (\n            <div className=\"d-flex\">\n                {professions && !professionsLoading && (\n                    <div className=\"d-flex flex-column flex-shrink-0 p-3\">\n                        <GroupList\n                            selectedItem={selectedProf}\n                            items={professions}\n                            onItemSelect={handleProfessionSelect}\n                        />\n                        <button\n                            className=\"btn btn-secondary mt-2\"\n                            onClick={clearFilter}\n                        >\n                            {\" \"}\n                            Очистить\n                        </button>\n                    </div>\n                )}\n                <div className=\"d-flex flex-column\">\n                    <SearchStatus length={count} />\n                    <input\n                        type=\"text\"\n                        name=\"searchQuery\"\n                        placeholder=\"Search...\"\n                        onChange={handleSearchQuery}\n                        value={searchQuery}\n                    />\n                    {count > 0 && (\n                        <UserTable\n                            users={usersCrop}\n                            onSort={handleSort}\n                            selectedSort={sortBy}\n                            onDelete={handleDelete}\n                            onToggleBookMark={handleToggleBookMark}\n                        />\n                    )}\n                    <div className=\"d-flex justify-content-center\">\n                        <Pagination\n                            itemsCount={count}\n                            pageSize={pageSize}\n                            currentPage={currentPage}\n                            onPageChange={handlePageChange}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    return \"loading...\";\n};\nUsersListPage.propTypes = {\n    users: PropTypes.array\n};\n\nexport default UsersListPage;\n","export function paginate(items, pageNumber, pageSize) {\n    const startIndex = (pageNumber - 1) * pageSize;\n    return [...items].splice(startIndex, pageSize);\n}\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getDataStatus, loadUsersList } from \"../../../store/users\";\n\nconst UsersLoader = ({ children }) => {\n    const dataStatus = useSelector(getDataStatus());\n    const dispatch = useDispatch();\n    useEffect(() => {\n         if (!dataStatus) {\n            dispatch(loadUsersList());\n        }\n    }, []);\n\n    if (!dataStatus) return \"Loading...\";\n    return children;\n};\n\nexport default UsersLoader;\n","import React from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport EditUserPage from \"../components/page/editUserPage\";\nimport UserPage from \"../components/page/userPage\";\nimport UsersListPage from \"../components/page/usersListPage\";\nimport UsersLoader from \"../components/ui/hoc/usersLoader\";\nimport { useSelector } from \"react-redux\";\nimport { getCurrentUserId } from \"../store/users\";\n\nconst Users = () => {\n    const params = useParams();\n    const { userId, edit } = params;\n    const currentUserId = useSelector(getCurrentUserId());\n\n    return (\n        <>\n        <UsersLoader>\n                {userId ? (\n                    edit ? (userId === currentUserId\n                        ? <EditUserPage /> : <Redirect to={`/users/${currentUserId}/edit`}/>\n                    ) : (\n                        <UserPage userId={userId} />\n                    )\n                ) : (\n                    <UsersListPage />\n                )}\n            </UsersLoader>\n        </>\n    );\n};\n\nexport default Users;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst CheckBoxField = ({ name, value, onChange, children, error }) => {\n    const handleChange = () => {\n        onChange({ name: name, value: !value });\n    };\n    const getInputClasses = () => {\n        return \"form-check-input\" + (error ? \" is-invalid\" : \"\");\n    };\n    return (\n        <div className=\"form-check mb-4\">\n            <input\n                className={getInputClasses()}\n                type=\"checkbox\"\n                value=\"\"\n                id={name}\n                onChange={handleChange}\n                checked={value}\n            />\n            <label className=\"form-check-label\" htmlFor={name}>\n                {children}\n            </label>\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\nCheckBoxField.propTypes = {\n    name: PropTypes.string,\n    value: PropTypes.bool,\n    onChange: PropTypes.func,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]),\n    error: PropTypes.string\n};\n\nexport default CheckBoxField;\n","import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAuthErrors, login } from \"../../store/users\";\n\nconst LoginForm = () => {\n     const history = useHistory();\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        stayOn: false\n    });\n    const loginError = useSelector(getAuthErrors());\n    const dispatch = useDispatch();\n    const [errors, setErrors] = useState({});\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n     };\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязателен для заполнения\"\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        const redirect = history.location.state ? history.location.state.from.pathname : \"/\";\n           dispatch(login({ payload: data, redirect }));\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <CheckBoxField\n                value={data.stayOn}\n                onChange={handleChange}\n                name=\"stayOn\"\n            >\n                Оставаться в системе\n            </CheckBoxField>\n            {loginError && <p className='text-danger'>{loginError}</p>}\n            <button\n                className=\"btn btn-primary w-100 mx-auto\"\n                type=\"submit\"\n                disabled={!isValid}\n            >\n                Submit\n            </button>\n        </form>\n    );\n};\n\nexport default LoginForm;\n","import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport SelectField from \"../common/form/selectField\";\nimport RadioField from \"../common/form/radioField\";\nimport MultiSelectField from \"../common/form/multiSelectField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getQualities } from \"../../store/qualities\";\nimport { getProfessions } from \"../../store/professions\";\nimport { signUp } from \"../../store/users\";\n\nconst RegisterForm = () => {\n    const dispatch = useDispatch();\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        profession: \"\",\n        sex: \"male\",\n        name: \"\",\n        qualities: [],\n        licence: false\n    });\n\n    const qualities = useSelector(getQualities());\n     const qualitiesList = qualities.map(q => ({ label: q.name, value: q._id }));\n    const professions = useSelector(getProfessions());\n     const professionsList = professions.map(p => ({ label: p.name, value: p._id }));\n    const [errors, setErrors] = useState({});\n\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n          name: {\n            isRequired: {\n                message: \"Имя обязательно для заполнения\"\n            },\n           isCapitalSymbol: {\n                message: \"Имя должно содержать хотя бы одну заглавную букву\"\n            },\n             min: {\n                message: \"Имя должно состоять минимум из 2 символовов\",\n                value: 2\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязателен для заполнения\"\n            },\n            isCapitalSymbol: {\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n            },\n            isContainDigit: {\n                message: \"Пароль должен содержать хотя бы одно число\"\n            },\n            min: {\n                message: \"Пароль должен состоять минимум из 8 символов\",\n                value: 8\n            }\n        },\n        profession: {\n            isRequired: {\n                message: \"Обязательно выберите вашу профессию\"\n            }\n        },\n        licence: {\n            isRequired: {\n                message:\n                    \"Вы не можете использовать наш сервис без подтверждения лицензионного соглашения\"\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        const newData = { ...data, qualities: data.qualities.map((q) => q.value) };\n        dispatch(signUp(newData));\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Name\"\n                name=\"name\"\n                value={data.name}\n                onChange={handleChange}\n                error={errors.name}\n            />\n            <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <SelectField\n                label=\"Выбери свою профессию\"\n                defaultOption=\"Choose...\"\n                options={professionsList}\n                name=\"profession\"\n                onChange={handleChange}\n                value={data.profession}\n                error={errors.profession}\n            />\n            <RadioField\n                options={[\n                    { name: \"Male\", value: \"male\" },\n                    { name: \"Female\", value: \"female\" },\n                    { name: \"Other\", value: \"other\" }\n                ]}\n                value={data.sex}\n                name=\"sex\"\n                onChange={handleChange}\n                label=\"Выберите ваш пол\"\n            />\n            <MultiSelectField\n                options={qualitiesList}\n                onChange={handleChange}\n                defaultValue={data.qualities}\n                name=\"qualities\"\n                label=\"Выберите ваши качества\"\n            />\n            <CheckBoxField\n                value={data.licence}\n                onChange={handleChange}\n                name=\"licence\"\n                error={errors.licence}\n            >\n                Подтвердить <a>лицензионное соглашение</a>\n            </CheckBoxField>\n            <button\n                className=\"btn btn-primary w-100 mx-auto\"\n                type=\"submit\"\n                disabled={!isValid}\n            >\n                Submit\n            </button>\n        </form>\n    );\n};\n\nexport default RegisterForm;\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport LoginForm from \"../components/ui/loginForm\";\nimport RegisterForm from \"../components/ui/registerForm\";\n\nconst Login = () => {\n    const { type } = useParams();\n    const [formType, setFormType] = useState(\n        type === \"register\" ? type : \"login\"\n    );\n    const toggleFormType = (params) => {\n        setFormType((prevState) =>\n            prevState === \"register\" ? \"login\" : \"register\"\n        );\n    };\n\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\n                    {formType === \"register\" ? (\n                        <>\n                            <h3 className=\"mb-4\">Register</h3>\n                            <RegisterForm />\n                            <p>\n                                Already have account?{\" \"}\n                                <a role=\"button\" onClick={toggleFormType}>\n                                    {\" \"}\n                                    Sign In\n                                </a>\n                            </p>\n                        </>\n                    ) : (\n                        <>\n                            <h3 className=\"mb-4\">Login</h3>\n                            <LoginForm />\n                            <p>\n                                Dont have account?{\" \"}\n                                <a role=\"button\" onClick={toggleFormType}>\n                                    {\" \"}\n                                    Sign Up\n                                </a>\n                            </p>\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n","import { useEffect, useState } from \"react\";\nimport professions from \"../mockData/professions.json\";\nimport qualities from \"../mockData/qualities.json\";\nimport users from \"../mockData/users.json\";\nimport httpService from \"../services/http.service\";\n\nconst useMockData = () => {\n    const statusConsts = {\n        idle: \"Not Started\",\n        pending: \"In Process\",\n        successed: \"Ready\",\n        error: \"Error occurred\"\n    };\n    const [error, setError] = useState(null);\n    const [status, setStatus] = useState(statusConsts.idle);\n    const [progress, setProgress] = useState(0);\n    const [count, setCount] = useState(0);\n    const summaryCount = professions.length + qualities.length + users.length;\n    const incrementCount = () => {\n        setCount((prevState) => prevState + 1);\n    };\n    const updateProgress = () => {\n        if (count !== 0 && status === statusConsts.idle) {\n            setStatus(statusConsts.pending);\n        }\n        const newProgress = Math.floor((count / summaryCount) * 100);\n        if (progress < newProgress) {\n            setProgress(() => newProgress);\n        }\n        if (newProgress === 100) {\n            setStatus(statusConsts.successed);\n        }\n    };\n\n    useEffect(() => {\n        updateProgress();\n    }, [count]);\n    async function initialize() {\n        try {\n            for (const prof of professions) {\n                await httpService.put(\"profession/\" + prof._id, prof);\n                incrementCount();\n            }\n            for (const user of users) {\n                await httpService.put(\"user/\" + user._id, user);\n                incrementCount();\n            }\n            for (const qual of qualities) {\n                await httpService.put(\"quality/\" + qual._id, qual);\n                incrementCount();\n            }\n        } catch (error) {\n            setError(error);\n            setStatus(statusConsts.error);\n        }\n    }\n\n    return { error, initialize, progress, status };\n};\n\nexport default useMockData;\n","import React from \"react\";\nimport useMockData from \"../utils/mockData\";\n\nconst Main = () => {\n    const { error, initialize, progress, status } = useMockData();\n    const handleClick = () => {\n        initialize();\n    };\n    return (\n        <div className=\"container mt-5\">\n            <h1> Main Page</h1>\n            <h3>Инициализация данных в FireBase</h3>\n            <ul>\n                <li>Status: {status}</li>\n                <li>Progress: {progress}%</li>\n                {error && <li>Error: {error}</li>}\n            </ul>\n            <button className=\"btn btn-primary\" onClick={handleClick}>\n                {\" \"}\n                Инициализировать\n            </button>\n        </div>\n    );\n};\n\nexport default Main;\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getCurrentUserData } from \"../../store/users\";\n\nconst NavProfile = () => {\n    const currentUser = useSelector(getCurrentUserData());\n    const [isOpen, setOpen] = useState(false);\n    const toggleMenu = () => {\n        setOpen(prevState => !prevState);\n    };\n    if (!currentUser) return \"Loading...\";\n    return <div className=\"dropdown\" onClick={toggleMenu}>\n        <div className=\"btn dropdown-toggle d-flex align-items-center\">\n            <div className=\"me-2\">{currentUser.name}</div>\n            <img\n                                src={currentUser.image}\n                                className=\"rounded-circle shadow-1-strong me-3\"\n                                alt=\"avatar\"\n                                width=\"65\"\n                                height=\"65\"\n                            />\n        </div>\n        <div className={\"w-100 dropdown-menu\" + (isOpen ? \" show\" : \"\")}>\n            <Link to={`users/${currentUser._id}`} className='dropdown-item'>Profile</Link>\n            <Link to=\"/logout\" className='dropdown-item'>Log Out</Link>\n        </div>\n    </div>;\n};\n\nexport default NavProfile;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getIsLogedIn } from \"../../store/users\";\nimport NavProfile from \"./navProfile\";\nconst NavBar = () => {\n    const isLoggedIn = useSelector(getIsLogedIn());\n    return (\n        <nav className=\"navbar bg-light mb-2\">\n            <div className=\"container-fluid\">\n                <ul className=\"nav\">\n            <li className=\"nav-item\">\n                <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">\n                    Main\n                </Link>\n            </li>\n            {isLoggedIn && (\n                 <li className=\"nav-item\">\n                <Link className=\"nav-link \" aria-current=\"page\" to=\"/users\">\n                    Users\n                </Link>\n            </li>\n            )}\n\n                 </ul>\n                 <div className=\"d-flex\">\n                    {isLoggedIn ? (<NavProfile/>)\n                     : (<Link className=\"nav-link \" aria-current=\"page\" to=\"/login\">\n                    Login\n                </Link>)}\n\n                 </div>\n\n            </div>\n\n        </nav>\n\n    );\n};\n\nexport default NavBar;\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { logOut } from \"../store/users\";\nconst LogOut = () => {\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(logOut());\n    }, []);\n    return (<h1>Loading</h1>);\n};\n\nexport default LogOut;\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { getIsLogedIn } from \"../../store/users\";\nconst ProtectedRoute = ({ component: Component, children, ...rest }) => {\n    const isLogedIn = useSelector(getIsLogedIn());\n\n    return (<Route {...rest} render={(props) => {\n        if (!isLogedIn) {\n           return <Redirect to={{\n pathname: \"/login\",\nstate: {\n            from: props.location\n           }\n}}/>;\n        }\n        return Component ? <Component {...props}/> : children;\n    }}/>);\n};\n\nProtectedRoute.propTypes = {\n    component: PropTypes.func,\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n    location: PropTypes.object\n};\n\nexport default ProtectedRoute;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadProfessionsList } from \"../../../store/professions\";\nimport { loadQualitiesList } from \"../../../store/qualities\";\nimport { getIsLogedIn, getUsersIsLoadingStatus, loadUsersList } from \"../../../store/users\";\n\nconst AppLoader = ({ children }) => {\n    const dispatch = useDispatch();\n    const isLogedIn = useSelector(getIsLogedIn());\n    const usersStatus = useSelector(getUsersIsLoadingStatus());\n    useEffect(() => {\n        dispatch(loadProfessionsList());\n        dispatch(loadQualitiesList());\n        if (isLogedIn) {\n            dispatch(loadUsersList());\n        }\n    }, [isLogedIn]);\n    if (usersStatus) { return \"Loading...\"; }\n    return children;\n};\n\nexport default AppLoader;\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Users from \"./layouts/users\";\nimport Login from \"./layouts/login\";\nimport Main from \"./layouts/main\";\nimport NavBar from \"./components/ui/navBar\";\nimport LogOut from \"./layouts/logOut\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport AppLoader from \"./components/ui/hoc/appLoader\";\n\nfunction App() {\n    return (\n        <div>\n            <AppLoader>\n\n            <NavBar />\n\n                    <Switch>\n                        <ProtectedRoute\n                            path=\"/users/:userId?/:edit?\"\n                            component={Users}\n                        />\n                        <Route path=\"/login/:type?\" component={Login} />\n                        <Route path='/logout' component={LogOut}/>\n                        <Route path=\"/\" exact component={Main} />\n                        <Redirect to=\"/\" />\n                    </Switch>\n\n            <ToastContainer />\n\n            </AppLoader>\n\n        </div>\n    );\n}\n\nexport default App;\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport commentsReducer from \"./comments\";\nimport professionsReducer from \"./professions\";\nimport qualitiesReducer from \"./qualities\";\nimport usersReducer from \"./users\";\n\nconst rootReducer = combineReducers({\n    qualities: qualitiesReducer,\n     professions: professionsReducer,\n      users: usersReducer,\n    comments: commentsReducer\n});\n\nexport function createStore() {\n    return configureStore({\n        reducer: rootReducer\n\n    });\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./app/App\";\nimport { Router } from \"react-router-dom\";\nimport { createStore } from \"./app/store/createStore\";\nimport { Provider } from \"react-redux\";\nimport history from \"./app/utils/history\";\n\nconst store = createStore();\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n        <Router history={history}>\n            <App />\n        </Router>\n        </Provider>\n\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}