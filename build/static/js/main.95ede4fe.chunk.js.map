{"version":3,"sources":["reportWebVitals.js","app/utils/validator.js","app/api/fake.api/professions.api.js","app/api/fake.api/user.api.js","app/api/fake.api/qualities.api.js","app/api/fake.api/comments.api.js","app/api/index.js","app/components/common/form/textField.jsx","app/components/common/form/selectField.jsx","app/components/common/form/radioField.jsx","app/components/common/form/multiSelectField.jsx","app/components/common/backButton.jsx","app/components/page/editUserPage/index.js","app/components/page/editUserPage/editUserPage.jsx","app/services/localStorage.service.js","app/services/http.service.js","app/services/user.service.js","app/hooks/useAuth.jsx","app/components/ui/userCard.jsx","app/services/quality.service.js","app/hooks/useQualities.jsx","app/components/ui/qualities/quality.jsx","app/components/ui/qualities/index.js","app/components/ui/qualities/qualitiesList.jsx","app/components/ui/qualitiesCard.jsx","app/components/ui/meetingsCard.jsx","app/utils/displayDate.js","app/hooks/useUsers.jsx","app/components/common/comments/comment.jsx","app/components/common/comments/commentsList.jsx","app/components/common/form/textAreaField.jsx","app/components/common/comments/addCommentForm.jsx","app/components/common/comments/index.js","app/services/comment.service.js","app/hooks/useComments.jsx","app/components/ui/comments.jsx","app/components/page/userPage/index.js","app/components/page/userPage/userPage.jsx","app/components/common/pagination.jsx","app/components/common/groupList.jsx","app/components/ui/searchStatus.jsx","app/components/common/bookmark.jsx","app/components/common/table/tableBody.jsx","app/components/common/table/tableHeader.jsx","app/components/common/table/index.js","app/components/common/table/table.jsx","app/services/profession.service.js","app/hooks/useProfession.jsx","app/components/ui/profession.jsx","app/components/ui/usersTable.jsx","app/components/page/usersListPage/index.js","app/components/page/usersListPage/usersListPage.jsx","app/utils/paginate.js","app/layouts/users.jsx","app/components/common/form/checkBoxField.jsx","app/components/ui/loginForm.jsx","app/components/ui/registerForm.jsx","app/layouts/login.jsx","app/utils/mockData.js","app/layouts/main.jsx","app/components/ui/navProfile.jsx","app/components/ui/navBar.jsx","app/layouts/logOut.jsx","app/components/common/protectedRoute.jsx","app/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","validator","data","config","errors","validate","validateMethod","statusValidate","trim","test","length","value","message","fieldName","error","professionsObject","doctor","_id","name","waiter","physics","engineer","actor","cook","fetchAll","Promise","resolve","window","setTimeout","qualities","tedious","color","strange","buller","alcoholic","handsome","uncertain","users","email","sex","profession","professions","completedMeetings","rate","bookmark","localStorage","getItem","setItem","JSON","stringify","parse","getById","id","find","user","update","userIndex","findIndex","u","comments","userId","pageId","content","created_at","API","fetchCommentsForUser","filter","c","add","newComment","Date","now","Math","random","toString","substr","push","remove","newComments","x","console","log","TextField","label","type","onChange","useState","showPassword","setShowPassword","className","htmlFor","target","onClick","prevState","defaultProps","SelectField","defaultOption","options","optionsArray","Array","isArray","Object","values","disabled","map","option","RadioField","handleChange","checked","MultiSelectField","defaultValue","isMulti","closeMenuOnSelect","classNamePrefix","BackHistoryButton","history","useHistory","goBack","EditUserPage","useParams","isLoading","setIsLoading","setData","setProfession","setQualities","setErrors","getProfessionById","prof","getQualities","elements","qualitiesArray","elem","quality","transformData","qual","useEffect","api","professionsList","keys","professionName","qualitiesList","optionName","validatorConfig","isRequired","isEmail","isValid","onSubmit","e","preventDefault","TOKEN_KEY","REFRESH_KEY","EXPIRES_KEY","USERID_KEY","setTokens","refreshToken","expiresIn","localId","idToken","expiresData","getTime","localStorageService","getAccessToken","getRefreshToken","getExpiresDate","getUserId","removeAuthData","removeItem","http","axios","create","baseURL","configFile","apiEndpoint","interceptors","request","use","a","isFireBase","containSlash","url","slice","expiresDate","httpAuth","post","grant_type","refresh_token","id_token","expires_in","user_id","accessToken","params","auth","reject","response","res","key","status","toast","httpService","get","put","delete","userEndpoint","userService","payload","getCurrentUser","process","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","currentUser","setUser","setError","setLoading","randomInt","min","max","floor","password","rest","returnSecureToken","createUser","image","substring","errorCatcher","code","getUserData","Error","Provider","signUp","signIn","logOut","UserCard","location","pathname","src","width","role","qualityService","QualitiesContext","useQualities","QualitiesProvider","getQuality","q","Quality","Qualities","QualitiesCard","MeetingsCard","displayDate","date","parseInt","dateNow","getFullYear","getDate","getHours","minutesDif","getMinutes","toLocaleString","month","getMonth","UserContext","useUser","UserProvider","setUsers","getUsers","getUserById","Comment","created","onRemove","alt","height","CommentsList","comment","TextAreaField","AddCommentForm","commentEndpoint","commentService","createComment","getComments","orderBy","equalTo","deleteComments","commentId","CommentsContext","CommentsnProvider","setComments","nanoid","removeComment","Comments","sortedComments","UserPage","Pagination","itemsCount","pageSize","onPageChange","currentPage","pageCount","ceil","pages","_","range","page","GroupList","items","valueProperty","contentProperty","onItemSelect","selectedItem","item","SearchStatus","number","lastOne","Number","indexOf","renderPhrase","BookMark","TableBody","columns","renderContent","column","component","path","TableHeader","onSort","selectedSort","rendeSortArrow","currentPath","order","undefined","scope","Table","professionService","ProfessionContext","useProfessions","ProfessionProvider","setProfessions","ProfessionService","getProfessionsList","getProfession","p","Profession","UserTable","onToggleBookMark","to","UsersListPage","professionsLoading","setCurrentPage","searchQuery","setSearchQuery","selectedProf","setSelectedProf","sortBy","setSortBy","filteredUsers","toLowerCase","count","usersCrop","pageNumber","startIndex","splice","paginate","placeholder","onDelete","newArray","pageIndex","Users","edit","CheckBoxField","LoginForm","stayOn","enterError","setEnterError","handleSubmit","state","from","RegisterForm","licence","isCapitalSymbol","isContainDigit","newData","Login","formType","setFormType","toggleFormType","useMockData","statusConsts","setStatus","progress","setProgress","setCount","summaryCount","incrementCount","newProgress","updateProgress","initialize","Main","NavProfile","isOpen","setOpen","NavBar","aria-current","LogOut","ProtectedRoute","Component","render","props","App","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95ede4fe.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","export function validator(data, config) {\n    const errors = {};\n    function validate(validateMethod, data, config) {\n        let statusValidate;\n        switch (validateMethod) {\n            case \"isRequired\": {\n                if (typeof data === \"boolean\") {\n                    statusValidate = !data;\n                } else {\n                    statusValidate = data.trim() === \"\";\n                }\n                break;\n            }\n            case \"isEmail\": {\n                const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\n                statusValidate = !emailRegExp.test(data);\n                break;\n            }\n            case \"isCapitalSymbol\": {\n                const capitalRegExp = /[A-Z]+/g;\n                statusValidate = !capitalRegExp.test(data);\n                break;\n            }\n            case \"isContainDigit\": {\n                const digitRegExp = /\\d+/g;\n                statusValidate = !digitRegExp.test(data);\n                break;\n            }\n            case \"min\": {\n                statusValidate = data.length < config.value;\n                break;\n            }\n            default:\n                break;\n        }\n        if (statusValidate) return config.message;\n    }\n    for (const fieldName in data) {\n        for (const validateMethod in config[fieldName]) {\n            const error = validate(\n                validateMethod,\n                data[fieldName],\n                config[fieldName][validateMethod]\n            );\n            if (error && !errors[fieldName]) {\n                errors[fieldName] = error;\n            }\n        }\n    }\n    return errors;\n}\n","export const professionsObject = {\n    doctor: { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\n    waiter: { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\n    physics: { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\n    engineer: { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\n    actor: { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\n    cook: { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\n};\nexport const professions = [\n    { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\n    { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\n    { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\n    { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\n    { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\n    { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\n];\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(professionsObject);\n        }, 2000);\n    });\n\nexport default {\n    fetchAll\n};\n","import { professionsObject as professions } from \"./professions.api\";\nconst qualities = {\n    tedious: {\n        _id: \"67rdca3eeb7f6fgeed471198\",\n        name: \"Нудила\",\n        color: \"primary\"\n    },\n    strange: {\n        _id: \"67rdca3eeb7f6fgeed471100\",\n        name: \"Странный\",\n        color: \"secondary\"\n    },\n    buller: {\n        _id: \"67rdca3eeb7f6fgeed4711012\",\n        name: \"Троль\",\n        color: \"success\"\n    },\n    alcoholic: {\n        _id: \"67rdca3eeb7f6fgeed471101\",\n        name: \"Алкоголик\",\n        color: \"danger\"\n    },\n    handsome: {\n        _id: \"67rdca3eeb7f6fgeed471102\",\n        name: \"Красавчик\",\n        color: \"info\"\n    },\n    uncertain: {\n        _id: \"67rdca3eeb7f6fgeed471103\",\n        name: \"Неуверенный\",\n        color: \"dark\"\n    }\n};\n\nconst users = [\n    {\n        _id: \"67rdca3eeb7f6fgeed471815\",\n        name: \"Джон Дориан\",\n        email: \"Jony7351@tw.com\",\n        sex: \"male\",\n        profession: professions.doctor,\n        qualities: [qualities.tedious, qualities.uncertain, qualities.strange],\n        completedMeetings: 36,\n        rate: 2.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471816\",\n        name: \"Кокс\",\n        email: \"white4571@twipet.com\",\n        sex: \"male\",\n        profession: professions.doctor,\n        qualities: [qualities.buller, qualities.handsome, qualities.alcoholic],\n        completedMeetings: 15,\n        rate: 2.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471817\",\n        name: \"Боб Келсо\",\n        email: \"bob007@tw.com\",\n        sex: \"male\",\n        profession: professions.doctor,\n        qualities: [qualities.buller],\n        completedMeetings: 247,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471818\",\n        name: \"Рэйчел Грин\",\n        email: \"green7311@fam.biz\",\n        sex: \"female\",\n        profession: professions.waiter,\n        qualities: [qualities.uncertain],\n        completedMeetings: 148,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471819\",\n        name: \"Шелдон Купер\",\n        email: \"mindgames6878@phis.tech\",\n        sex: \"male\",\n        profession: professions.physics,\n        qualities: [qualities.strange, qualities.tedious],\n        completedMeetings: 37,\n        rate: 4.6,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471820\",\n        name: \"Леонард Хофстедтер\",\n        email: \"mindes000@phis.tech\",\n        sex: \"male\",\n        profession: professions.physics,\n        qualities: [qualities.strange, qualities.uncertain],\n        completedMeetings: 147,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471821\",\n        name: \"Говард Воловиц\",\n        email: \"gov1903@phis.tech\",\n        sex: \"male\",\n        profession: professions.engineer,\n        qualities: [qualities.strange, qualities.tedious],\n        completedMeetings: 72,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471822\",\n        name: \"Никола Тесла\",\n        email: \"electro@underground.tech\",\n        sex: \"male\",\n        profession: professions.engineer,\n        qualities: [qualities.handsome],\n        completedMeetings: 72,\n        rate: 5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471823\",\n        name: \"Моника Геллер\",\n        email: \"mono@super.com\",\n        sex: \"female\",\n        profession: professions.cook,\n        qualities: [qualities.strange, qualities.uncertain],\n        completedMeetings: 17,\n        rate: 4.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471824\",\n        name: \"Рататуй\",\n        email: \"ratatatata@underground.com\",\n        sex: \"male\",\n        profession: professions.cook,\n        qualities: [qualities.handsome, qualities.buller],\n        completedMeetings: 17,\n        rate: 4.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed47181f\",\n        name: \"Джоуи Триббиани\",\n        email: \"joe@trib.com\",\n        sex: \"male\",\n        profession: professions.actor,\n        qualities: [qualities.uncertain, qualities.strange],\n        completedMeetings: 434,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed47181r\",\n        name: \"Брэд Питт\",\n        email: \"superstar@star.com\",\n        sex: \"male\",\n        profession: professions.actor,\n        qualities: [qualities.handsome],\n        completedMeetings: 434,\n        rate: 5,\n        bookmark: false\n    }\n];\nif (!localStorage.getItem(\"users\")) {\n    localStorage.setItem(\"users\", JSON.stringify(users));\n}\n\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(JSON.parse(localStorage.getItem(\"users\")));\n        }, 2000);\n    });\nconst update = (id, data) =>\n    new Promise((resolve) => {\n        const users = JSON.parse(localStorage.getItem(\"users\"));\n        const userIndex = users.findIndex((u) => u._id === id);\n        users[userIndex] = { ...users[userIndex], ...data };\n        localStorage.setItem(\"users\", JSON.stringify(users));\n        resolve(users[userIndex]);\n    });\n\nconst getById = (id) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(\n                JSON.parse(localStorage.getItem(\"users\")).find(\n                    (user) => user._id === id\n                )\n            );\n        }, 1000);\n    });\nexport default {\n    fetchAll,\n    getById,\n    update\n};\n","const qualities = {\n    tedious: {\n        _id: \"67rdca3eeb7f6fgeed471198\",\n        name: \"Нудила\",\n        color: \"primary\"\n    },\n    strange: {\n        _id: \"67rdca3eeb7f6fgeed471100\",\n        name: \"Странный\",\n        color: \"secondary\"\n    },\n    buller: {\n        _id: \"67rdca3eeb7f6fgeed4711012\",\n        name: \"Троль\",\n        color: \"success\"\n    },\n    alcoholic: {\n        _id: \"67rdca3eeb7f6fgeed471101\",\n        name: \"Алкоголик\",\n        color: \"danger\"\n    },\n    handsome: {\n        _id: \"67rdca3eeb7f6fgeed471102\",\n        name: \"Красавчик\",\n        color: \"info\"\n    },\n    uncertain: {\n        _id: \"67rdca3eeb7f6fgeed471103\",\n        name: \"Неуверенный\",\n        color: \"dark\"\n    }\n};\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(qualities);\n        }, 2000);\n    });\n\nexport default {\n    fetchAll\n};\n","const comments = [\n    {\n        _id: \"67rdca3eeb7f6fg\",\n        userId: \"67rdca3eeb7f6fgeed471815\",\n        pageId: \"67rdca3eeb7f6fgeed471815\",\n        content: \"Lorem ipsum dolor\",\n        created_at: \"1633576399367\"\n    },\n    {\n        _id: \"67rdca3eeb7f6fgdasd\",\n        pageId: \"67rdca3eeb7f6fgeed471815\",\n        userId: \"67rdca3eeb7f6fgeed471815\",\n        content: \"Lorem ipsum dolor and etc\",\n        created_at: \"1633573058520\"\n    },\n    {\n        _id: \"67rdca3eeb7f6fgdaasd\",\n        pageId: \"67rdca3eeb7f6fgeed471817\",\n        userId: \"67rdca3eeb7f6fgeed471815\",\n        content: \"Lorem ipsum dolor and etc\",\n        created_at: \"1633573058520\"\n    }\n];\nif (!localStorage.getItem(\"comments\")) {\n    localStorage.setItem(\"comments\", JSON.stringify(comments));\n}\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(comments);\n        }, 200);\n    });\n\nconst fetchCommentsForUser = (userId) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(\n                JSON.parse(localStorage.getItem(\"comments\")).filter(\n                    (c) => c.pageId === userId\n                )\n            );\n        }, 200);\n    });\nconst add = (data) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            const comments = JSON.parse(localStorage.getItem(\"comments\"));\n            const newComment = {\n                ...data,\n                created_at: Date.now(),\n                _id: Math.random().toString(36).substr(2, 9)\n            };\n            comments.push(newComment);\n            localStorage.setItem(\"comments\", JSON.stringify(comments));\n            resolve(newComment);\n        }, 200);\n    });\n\nconst remove = (id) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            const comments = JSON.parse(localStorage.getItem(\"comments\"));\n            const newComments = comments.filter((x) => x._id !== id);\n            console.log(id);\n            console.log(newComments);\n            localStorage.setItem(\"comments\", JSON.stringify(newComments));\n            resolve(id);\n        }, 200);\n    });\nexport default {\n    fetchAll,\n    fetchCommentsForUser,\n    add,\n    remove\n};\n","import users from \"./fake.api/user.api\";\nimport professions from \"./fake.api/professions.api\";\nimport qualities from \"./fake.api/qualities.api\";\nimport comments from \"./fake.api/comments.api\";\nconst API = {\n    users,\n    professions,\n    qualities,\n    comments\n};\nexport default API;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextField = ({ label, type, name, value, onChange, error }) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\n    };\n    const toggleShowPassword = () => {\n        setShowPassword((prevState) => !prevState);\n    };\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name}>{label}</label>\n            <div className=\"input-group has-validation\">\n                <input\n                    type={showPassword ? \"text\" : type}\n                    id={name}\n                    name={name}\n                    value={value}\n                    onChange={handleChange}\n                    className={getInputClasses()}\n                />\n                {type === \"password\" && (\n                    <button\n                        className=\"btn btn-outline-secondary\"\n                        type=\"button\"\n                        onClick={toggleShowPassword}\n                    >\n                        <i\n                            className={\n                                \"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")\n                            }\n                        ></i>\n                    </button>\n                )}\n                {error && <div className=\"invalid-feedback\">{error}</div>}\n            </div>\n        </div>\n    );\n};\nTextField.defaultProps = {\n    type: \"text\"\n};\nTextField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string\n};\n\nexport default TextField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SelectField = ({\n    label,\n    value,\n    onChange,\n    defaultOption,\n    options,\n    error,\n    name\n}) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-select\" + (error ? \" is-invalid\" : \"\");\n    };\n\n    const optionsArray =\n        !Array.isArray(options) && typeof options === \"object\"\n            ? Object.values(options)\n            : options;\n\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name} className=\"form-label\">\n                {label}\n            </label>\n            <select\n                className={getInputClasses()}\n                id={name}\n                name={name}\n                value={value}\n                onChange={handleChange}\n            >\n                <option disabled value=\"\">\n                    {defaultOption}\n                </option>\n                {optionsArray.length > 0 &&\n                    optionsArray.map((option) => (\n                        <option value={option.value} key={option.value}>\n                            {option.label}\n                        </option>\n                    ))}\n            </select>\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\n\nSelectField.propTypes = {\n    defaultOption: PropTypes.string,\n    label: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string,\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    name: PropTypes.string\n};\n\nexport default SelectField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst RadioField = ({ options, name, onChange, value, label }) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    return (\n        <div className=\"mb-4\">\n            <label className=\"form-label\">{label}</label>\n            <div>\n                {options.map((option) => (\n                    <div\n                        key={option.name + \"_\" + option.value}\n                        className=\"form-check form-check-inline\"\n                    >\n                        <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name={name}\n                            id={option.name + \"_\" + option.value}\n                            checked={option.value === value}\n                            value={option.value}\n                            onChange={handleChange}\n                        />\n                        <label\n                            className=\"form-check-label\"\n                            htmlFor={option.name + \"_\" + option.value}\n                        >\n                            {option.name}\n                        </label>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nRadioField.propTypes = {\n    options: PropTypes.array,\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n    label: PropTypes.string\n};\n\nexport default RadioField;\n","import React from \"react\";\nimport Select from \"react-select\";\nimport PropTypes from \"prop-types\";\n\nconst MultiSelectField = ({ options, onChange, name, label, defaultValue }) => {\n    const optionsArray =\n        !Array.isArray(options) && typeof options === \"object\"\n            ? Object.values(options)\n            : options;\n\n    const handleChange = (value) => {\n        onChange({ name: name, value });\n    };\n    return (\n        <div className=\"mb-4\">\n            <label className=\"form-label\">{label}</label>\n            <Select\n                isMulti\n                closeMenuOnSelect={false}\n                defaultValue={defaultValue}\n                options={optionsArray}\n                className=\"basic-multi-select\"\n                classNamePrefix=\"select\"\n                onChange={handleChange}\n                name={name}\n            />\n        </div>\n    );\n};\nMultiSelectField.propTypes = {\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n    label: PropTypes.string,\n    defaultValue: PropTypes.array\n};\n\nexport default MultiSelectField;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nconst BackHistoryButton = () => {\n    const history = useHistory();\n    return (\n        <button className=\"btn btn-primary\" onClick={() => history.goBack()}>\n            <i className=\"bi bi-caret-left\"></i>\n            Назад\n        </button>\n    );\n};\n\nexport default BackHistoryButton;\n","import EditUserPage from \"./editUserPage\";\nexport default EditUserPage;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { validator } from \"../../../utils/validator\";\nimport api from \"../../../api\";\nimport TextField from \"../../common/form/textField\";\nimport SelectField from \"../../common/form/selectField\";\nimport RadioField from \"../../common/form/radioField\";\nimport MultiSelectField from \"../../common/form/multiSelectField\";\nimport BackHistoryButton from \"../../common/backButton\";\n\nconst EditUserPage = () => {\n    const { userId } = useParams();\n    const history = useHistory();\n    const [isLoading, setIsLoading] = useState(false);\n    const [data, setData] = useState({\n        name: \"\",\n        email: \"\",\n        profession: \"\",\n        sex: \"male\",\n        qualities: []\n    });\n    const [professions, setProfession] = useState([]);\n    const [qualities, setQualities] = useState([]);\n    const [errors, setErrors] = useState({});\n    const getProfessionById = (id) => {\n        for (const prof of professions) {\n            if (prof.value === id) {\n                return { _id: prof.value, name: prof.label };\n            }\n        }\n    };\n    const getQualities = (elements) => {\n        const qualitiesArray = [];\n        for (const elem of elements) {\n            for (const quality in qualities) {\n                if (elem.value === qualities[quality].value) {\n                    qualitiesArray.push({\n                        _id: qualities[quality].value,\n                        name: qualities[quality].label,\n                        color: qualities[quality].color\n                    });\n                }\n            }\n        }\n        return qualitiesArray;\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        const { profession, qualities } = data;\n        api.users\n            .update(userId, {\n                ...data,\n                profession: getProfessionById(profession),\n                qualities: getQualities(qualities)\n            })\n            .then((data) => history.push(`/users/${data._id}`));\n        console.log({\n            ...data,\n            profession: getProfessionById(profession),\n            qualities: getQualities(qualities)\n        });\n    };\n    const transformData = (data) => {\n        return data.map((qual) => ({ label: qual.name, value: qual._id }));\n    };\n    useEffect(() => {\n        setIsLoading(true);\n        api.users.getById(userId).then(({ profession, qualities, ...data }) =>\n            setData((prevState) => ({\n                ...prevState,\n                ...data,\n                qualities: transformData(qualities),\n                profession: profession._id\n            }))\n        );\n        api.professions.fetchAll().then((data) => {\n            const professionsList = Object.keys(data).map((professionName) => ({\n                label: data[professionName].name,\n                value: data[professionName]._id\n            }));\n            setProfession(professionsList);\n        });\n        api.qualities.fetchAll().then((data) => {\n            const qualitiesList = Object.keys(data).map((optionName) => ({\n                value: data[optionName]._id,\n                label: data[optionName].name,\n                color: data[optionName].color\n            }));\n            setQualities(qualitiesList);\n        });\n    }, []);\n    useEffect(() => {\n        if (data._id) setIsLoading(false);\n    }, [data]);\n\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n        name: {\n            isRequired: {\n                message: \"Введите ваше имя\"\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n    return (\n        <div className=\"container mt-5\">\n            <BackHistoryButton />\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\n                    {!isLoading && Object.keys(professions).length > 0 ? (\n                        <form onSubmit={handleSubmit}>\n                            <TextField\n                                label=\"Имя\"\n                                name=\"name\"\n                                value={data.name}\n                                onChange={handleChange}\n                                error={errors.name}\n                            />\n                            <TextField\n                                label=\"Электронная почта\"\n                                name=\"email\"\n                                value={data.email}\n                                onChange={handleChange}\n                                error={errors.email}\n                            />\n                            <SelectField\n                                label=\"Выбери свою профессию\"\n                                defaultOption=\"Choose...\"\n                                options={professions}\n                                name=\"profession\"\n                                onChange={handleChange}\n                                value={data.profession}\n                                error={errors.profession}\n                            />\n                            <RadioField\n                                options={[\n                                    { name: \"Male\", value: \"male\" },\n                                    { name: \"Female\", value: \"female\" },\n                                    { name: \"Other\", value: \"other\" }\n                                ]}\n                                value={data.sex}\n                                name=\"sex\"\n                                onChange={handleChange}\n                                label=\"Выберите ваш пол\"\n                            />\n                            <MultiSelectField\n                                defaultValue={data.qualities}\n                                options={qualities}\n                                onChange={handleChange}\n                                name=\"qualities\"\n                                label=\"Выберите ваши качества\"\n                            />\n                            <button\n                                type=\"submit\"\n                                disabled={!isValid}\n                                className=\"btn btn-primary w-100 mx-auto\"\n                            >\n                                Обновить\n                            </button>\n                        </form>\n                    ) : (\n                        \"Loading...\"\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default EditUserPage;\n","\nconst TOKEN_KEY = \"jwt-token\";\nconst REFRESH_KEY = \"jwt-refresh-token\";\nconst EXPIRES_KEY = \"jwt-expires\";\nconst USERID_KEY = \"user-local-id\";\n\nexport function setTokens({ refreshToken, expiresIn = 3600, localId, idToken }) {\n        const expiresData = new Date().getTime() + expiresIn * 1000;\n        localStorage.setItem(USERID_KEY, localId);\n        localStorage.setItem(TOKEN_KEY, idToken);\n        localStorage.setItem(REFRESH_KEY, refreshToken);\n        localStorage.setItem(EXPIRES_KEY, expiresData);\n    }\nexport function getAccessToken() {\n   return localStorage.getItem(TOKEN_KEY);\n}\nexport function getRefreshToken() {\n    return localStorage.getItem(REFRESH_KEY);\n}\nexport function getExpiresDate() {\n    return localStorage.getItem(EXPIRES_KEY);\n}\nexport function getUserId() {\n    return localStorage.getItem(USERID_KEY);\n}\nexport function removeAuthData() {\n    localStorage.removeItem(USERID_KEY);\n        localStorage.removeItem(TOKEN_KEY);\n        localStorage.removeItem(REFRESH_KEY);\n        localStorage.removeItem(EXPIRES_KEY);\n}\n\n    const localStorageService = {\n        setTokens,\n        getAccessToken,\n        getRefreshToken,\n        getExpiresDate,\n        getUserId,\n        removeAuthData\n    };\n\n    export default localStorageService;\n","import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport configFile from \"../config.json\";\nimport { httpAuth } from \"../hooks/useAuth\";\nimport localStorageService from \"./localStorage.service\";\n\nconst http = axios.create({\n    baseURL: configFile.apiEndpoint\n});\n\nhttp.interceptors.request.use(\n    async function (config) {\n        if (configFile.isFireBase) {\n            const containSlash = /\\/$/gi.test(config.url);\n            config.url =\n                (containSlash ? config.url.slice(0, -1) : config.url) + \".json\";\n                const expiresDate = localStorageService.getExpiresDate();\n                const refreshToken = localStorageService.getRefreshToken();\n                if (refreshToken && expiresDate < Date.now()) {\n                    const { data } = await httpAuth.post(\"token\", {\n                        grant_type: \"refresh_token\",\n                        refresh_token: refreshToken\n                    });\n\n                    localStorageService.setTokens({\n                        refreshToken: data.refresh_token,\n                         idToken: data.id_token,\n                          expiresIn: data.expires_in,\n                           localId: data.user_id\n                         });\n                }\n                const accessToken = localStorageService.getAccessToken();\n                if (accessToken) {\n                    config.params = { ...config.params, auth: accessToken };\n                }\n        }\n        return config;\n    },\n    function (error) {\n        return Promise.reject(error);\n    }\n);\nfunction transformData(data) {\n    return data && !data._id\n        ? Object.keys(data).map((key) => ({\n              ...data[key]\n          }))\n        : data;\n}\nhttp.interceptors.response.use(\n    (res) => {\n        if (configFile.isFireBase) {\n            res.data = { content: transformData(res.data) };\n        }\n        return res;\n    },\n    function (error) {\n        const expectedErrors =\n            error.response &&\n            error.response.status >= 400 &&\n            error.response.status < 500;\n\n        if (!expectedErrors) {\n            console.log(error);\n            toast.error(\"Something was wrong. Try it later\");\n        }\n        return Promise.reject(error);\n    }\n);\nconst httpService = {\n    get: http.get,\n    post: http.post,\n    put: http.put,\n    delete: http.delete\n};\nexport default httpService;\n","import httpService from \"./http.service\";\nimport localStorageService from \"./localStorage.service\";\n\nconst userEndpoint = \"user/\";\n\nconst userService = {\n    get: async () => {\n        const { data } = await httpService.get(userEndpoint);\n        return data;\n    },\n    create: async (payload) => {\n        const { data } = await httpService.put(\n            userEndpoint + payload._id,\n             payload\n             );\n        return data;\n    },\n    getCurrentUser: async () => {\n        const { data } = await httpService.get(\n            userEndpoint + localStorageService.getUserId()\n        );\n        return data;\n    }\n};\nexport default userService;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport userService from \"../services/user.service\";\nimport { toast } from \"react-toastify\";\nimport localStorageService, { setTokens } from \"../services/localStorage.service\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const httpAuth = axios.create({\n    baseURL: \"https://identitytoolkit.googleapis.com/v1/\",\n    params: {\n        key: process.env.REACT_APP_FIREBASE_KEY\n    }\n});\nconst AuthContext = React.createContext();\n\nexport const useAuth = () => {\n    return useContext(AuthContext);\n};\n\nexport const AuthProvider = ({ children }) => {\n    const [currentUser, setUser] = useState();\n      const [error, setError] = useState(null);\n      const [isLoading, setLoading] = useState(true);\n      const history = useHistory();\n\n      function randomInt(min, max) {\n        return Math.floor(Math.random() * (max - min + 1) + min);\n      }\n\n   async function signUp({ email, password, ...rest }) {\n    try {\n         const { data } = await httpAuth.post(`accounts:signUp`, { email, password, returnSecureToken: true });\n         setTokens(data);\n     await createUser({\n _id: data.localId,\n         email,\n          rate: randomInt(1, 5),\n           completedMeetings: randomInt(0, 200),\n           image: `https://avatars.dicebear.com/api/avataaars/${(\n                                    Math.random() + 1\n                                )\n                                    .toString(36)\n                                    .substring(7)}.svg`,\n            ...rest\n});\n    } catch (error) {\n        errorCatcher(error);\n        const { code, message } = error.response.data.error;\n        if (code === 400) {\n            if (message === \"EMAIL_EXISTS\") {\n                const errorObject = { email: \"Пользователь с таким email уже существует\" };\n                throw errorObject;\n            }\n        }\n    }\n};\nasync function signIn({ email, password }) {\n    try {\n        const { data } = await httpAuth.post(`accounts:signInWithPassword`, { email, password, returnSecureToken: true });\n        setTokens(data);\n        await getUserData();\n    } catch (error) {\n        errorCatcher(error);\n        const { code, message } = error.response.data.error;\n                console.log(code, message);\n                  if (code === 400) {\n                    switch (message) {\n                        case \"INVALID_PASSWORD\":\n                            throw new Error(\"Неверно введены email или пароль\");\n\n                        default:\n                            throw new Error(\"Слишком много попыток вхождения, попробуйте позже\");\n                    }\n        }\n    }\n}\nasync function logOut() {\n    localStorageService.removeAuthData();\n    setUser(null);\n    history.push(\"/\");\n}\n\nasync function createUser(data) {\n    try {\n        const { content } = await userService.create(data);\nsetUser(content);\n    } catch (error) {\n       errorCatcher(error);\n    }\n}\n function errorCatcher(error) {\n        const { message } = error.response.data;\n        setError(message);\n    }\n    async function getUserData() {\n        try {\n             const { content } = await userService.getCurrentUser();\n             setUser(content);\n        } catch (error) {\n            errorCatcher(error);\n        } finally {\n            setLoading(false);\n        }\n    }\n    useEffect(() => {\n        if (localStorageService.getAccessToken()) {\n           getUserData();\n        } else {\n            setLoading(false);\n        }\n    }, []);\n    useEffect(() => {\n        if (error !== null) {\n            toast(error);\n            setError(null);\n        }\n    }, [error]);\n\n    return (\n        <AuthContext.Provider value={{ signUp, signIn, logOut, currentUser }}>\n            { !isLoading ? children : \"Loading\"}\n        </AuthContext.Provider>\n    );\n};\n\nAuthProvider.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n\nexport default AuthProvider;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAuth } from \"../../hooks/useAuth\";\nconst UserCard = ({ user }) => {\n    const history = useHistory();\n    const { currentUser } = useAuth();\n    const handleClick = () => {\n        history.push(history.location.pathname + \"/edit\");\n    };\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-body\">\n               {currentUser._id === user._id && <button\n                    className=\"position-absolute top-0 end-0 btn btn-light btn-sm\"\n                    onClick={handleClick}\n                >\n                    <i className=\"bi bi-gear\"></i>\n                </button>}\n                <div className=\"d-flex flex-column align-items-center text-center position-relative\">\n                    <img\n                        src={`https://avatars.dicebear.com/api/avataaars/${(\n                            Math.random() + 1\n                        )\n                            .toString(36)\n                            .substring(7)}.svg`}\n                        className=\"rounded-circle\"\n                        width=\"150\"\n                    />\n                    <div className=\"mt-3\">\n                        <h4>{user.name}</h4>\n                        <p className=\"text-secondary mb-1\">\n                            {user.profession.name}\n                        </p>\n                        <div className=\"text-muted\">\n                            <i\n                                className=\"bi bi-caret-down-fill text-primary\"\n                                role=\"button\"\n                            ></i>\n                            <i\n                                className=\"bi bi-caret-up text-secondary\"\n                                role=\"button\"\n                            ></i>\n                            <span className=\"ms-2\">{user.rate}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\nUserCard.propTypes = {\n    user: PropTypes.object\n};\n\nexport default UserCard;\n","import httpService from \"./http.service\";\nconst qualityEndpoint = \"quality/\";\n\nconst qualityService = {\n    fetchAll: async () => {\n        const { data } = await httpService.get(qualityEndpoint);\n        return data;\n    }\n};\nexport default qualityService;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport PropTypes from \"prop-types\";\nimport qualityService from \"../services/quality.service\";\n\nconst QualitiesContext = React.createContext();\n\nexport const useQualities = () => {\n    return useContext(QualitiesContext);\n};\n\nexport const QualitiesProvider = ({ children }) => {\n    const [qualities, setQualities] = useState([]);\n    const [error, setError] = useState(null);\n    const [isLoading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const getQualities = async () => {\n            try {\n                const { content } = await qualityService.fetchAll();\n                setQualities(content);\n                setLoading(false);\n            } catch (error) {\n                errorCatcher(error);\n            }\n        };\n        getQualities();\n    }, []);\n    const getQuality = (id) => {\n        return qualities.find((q) => q._id === id);\n    };\n\n    function errorCatcher(error) {\n        const { message } = error.response.data;\n        setError(message);\n    }\n    useEffect(() => {\n        if (error !== null) {\n            toast(error);\n            setError(null);\n        }\n    }, [error]);\n\n    return (\n        <QualitiesContext.Provider\n            value={{\n                qualities,\n                getQuality,\n                isLoading\n            }}\n        >\n            {children}\n        </QualitiesContext.Provider>\n    );\n};\n\nQualitiesProvider.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useQualities } from \"../../../hooks/useQualities\";\nconst Quality = ({ id }) => {\n    const { getQuality } = useQualities();\n    const { color, name } = getQuality(id);\n    return (\n        <span className={\"badge m-1 bg-\" + color}>\n            {name}\n        </span>\n    );\n};\nQuality.propTypes = {\n    id: PropTypes.string.isRequired\n};\n\nexport default Quality;\n","import Qualities from \"./qualitiesList\";\nexport default Qualities;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Quality from \"./quality\";\nimport { useQualities } from \"../../../hooks/useQualities\";\n\nconst QualitiesList = ({ qualities }) => {\n    const { isLoading } = useQualities();\n    if (isLoading) return \"Loading...\";\n    return (\n        <>\n            {qualities.map((qual) => (\n                <Quality key={qual} id={qual} />\n            ))}\n        </>\n    );\n};\n\nQualitiesList.propTypes = {\n    qualities: PropTypes.array\n};\n\nexport default QualitiesList;\n","import React from \"react\";\nimport Qualities from \"./qualities\";\nimport PropTypes from \"prop-types\";\n\nconst QualitiesCard = ({ data }) => {\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-body d-flex flex-column justify-content-center text-center\">\n                <h5 className=\"card-title\">\n                    <span>Qualities</span>\n                </h5>\n                <p className=\"card-text\">\n                    <Qualities qualities={data} />\n                </p>\n            </div>\n        </div>\n    );\n};\nQualitiesCard.propTypes = {\n    data: PropTypes.array\n};\n\nexport default QualitiesCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst MeetingsCard = ({ value }) => {\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-body d-flex flex-column justify-content-center text-center\">\n                <h5 className=\"card-title\">\n                    <span>Completed meetings</span>\n                </h5>\n\n                <h1 className=\"display-1\">{value}</h1>\n            </div>\n        </div>\n    );\n};\nMeetingsCard.propTypes = {\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\n\nexport default MeetingsCard;\n","export function displayDate(data) {\n    const date = new Date(parseInt(data));\n    const dateNow = new Date();\n    const yearDif = dateNow.getFullYear() - date.getFullYear();\n    if (yearDif === 0) {\n        const dayDif = dateNow.getDate() - date.getDate();\n        if (dayDif === 0) {\n            const hourDif = dateNow.getHours() - date.getHours();\n            if (hourDif === 0) {\n                const minutesDif = dateNow.getMinutes() - date.getMinutes();\n\n                if (minutesDif >= 0 && minutesDif < 5) return \"1 минуту назад\";\n                if (minutesDif >= 5 && minutesDif < 10) return \"5 минут назад\";\n                if (minutesDif >= 10 && minutesDif < 30) {\n                    return \"10 минут назад\";\n                }\n                return \"30 минут назад\";\n            }\n            return `${date.getHours()}:${date.getMinutes()}`;\n        }\n\n        return `${date.getDate()} ${date.toLocaleString(\"default\", {\n            month: \"long\"\n        })}`;\n    }\n    return (\n        date.getFullYear() + \".\" + (date.getMonth() + 1) + \"_\" + date.getDate()\n    );\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport userService from \"../services/user.service\";\nimport { toast } from \"react-toastify\";\n\nconst UserContext = React.createContext();\n\nexport const useUser = () => {\n    return useContext(UserContext);\n};\n\nconst UserProvider = ({ children }) => {\n    const [users, setUsers] = useState([]);\n    const [isLoading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    useEffect(() => {\n        getUsers();\n    }, []);\n    useEffect(() => {\n        if (error !== null) {\n            toast(error);\n            setError(null);\n        }\n    }, [error]);\n    async function getUsers() {\n        try {\n            const { content } = await userService.get();\n            setUsers(content);\n            setLoading(false);\n        } catch (error) {\n            errorCatcher(error);\n        }\n    }\n    function errorCatcher(error) {\n        const { message } = error.response.data;\n        setError(message);\n        setLoading(false);\n    }\n    function getUserById(userId) {\n        return users.find((user) => user._id === userId);\n    }\n    return (\n        <UserContext.Provider value={{ users, getUserById }}>\n            {!isLoading ? children : \"Loading...\"}\n        </UserContext.Provider>\n    );\n};\n\nUserProvider.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n\nexport default UserProvider;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { displayDate } from \"../../../utils/displayDate\";\nimport { useUser } from \"../../../hooks/useUsers\";\nimport { useAuth } from \"../../../hooks/useAuth\";\n\nconst Comment = ({\n    content,\n    created_at: created,\n    _id: id,\n    userId,\n    onRemove\n}) => {\n    const { getUserById } = useUser();\n    const user = getUserById(userId);\n    const { currentUser } = useAuth();\n\n    return (\n        <div className=\"bg-light card-body  mb-3\">\n            <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"d-flex flex-start \">\n                            <img\n                                src={user.image}\n                                className=\"rounded-circle shadow-1-strong me-3\"\n                                alt=\"avatar\"\n                                width=\"65\"\n                                height=\"65\"\n                            />\n                            <div className=\"flex-grow-1 flex-shrink-1\">\n                                <div className=\"mb-4\">\n                                    <div className=\"d-flex justify-content-between align-items-center\">\n                                        <p className=\"mb-1 \">\n                                            {user && user.name}{\" \"}\n                                            <span className=\"small\">\n                                                - {displayDate(created)}\n                                            </span>\n                                        </p>\n                                        {currentUser._id === userId &&\n                                        <button\n                                            className=\"btn btn-sm text-primary d-flex align-items-center\"\n                                            onClick={() => onRemove(id)}\n                                        >\n                                            <i className=\"bi bi-x-lg\"></i>\n                                        </button>}\n                                    </div>\n                                    <p className=\"small mb-0\">{content}</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n            </div>\n        </div>\n    );\n};\nComment.propTypes = {\n    content: PropTypes.string,\n    edited_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    created_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    userId: PropTypes.string,\n    onRemove: PropTypes.func,\n    _id: PropTypes.string\n};\n\nexport default Comment;\n","import React from \"react\";\nimport Comment from \"./comment\";\nimport PropTypes from \"prop-types\";\n\nconst CommentsList = ({ comments, onRemove }) => {\n    return comments.map((comment) => (\n        <Comment key={comment._id} {...comment} onRemove={onRemove} />\n    ));\n};\nCommentsList.propTypes = {\n    comment: PropTypes.array,\n    onRemove: PropTypes.func\n};\n\nexport default CommentsList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextAreaField = ({ label, name, value, onChange, error }) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\n    };\n\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name}> {label}</label>\n            <div className=\"input-group has-validation\">\n                <textarea\n                    id={name}\n                    name={name}\n                    value={value}\n                    onChange={handleChange}\n                    className={getInputClasses()}\n                />\n\n                {error && <div className=\"invalid-feedback \">{error}</div>}\n            </div>\n        </div>\n    );\n};\nTextAreaField.defaultProps = {\n    type: \"text\"\n};\nTextAreaField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string\n};\n\nexport default TextAreaField;\n","import React, { useState } from \"react\";\nimport TextAreaField from \"../form/textAreaField\";\nimport { validator } from \"../../../utils/validator\";\nimport PropTypes from \"prop-types\";\n\nconst AddCommentForm = ({ onSubmit }) => {\n    const [data, setData] = useState({});\n    const [errors, setErrors] = useState({});\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfig = {\n\n        content: {\n            isRequired: {\n                message: \"Сообщение не может быть пустым\"\n            }\n        }\n    };\n\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n\n    const clearForm = () => {\n        setData({});\n        setErrors({});\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        onSubmit(data);\n        clearForm();\n    };\n\n    return (\n        <div>\n            <h2>New comment</h2>\n            <form onSubmit={handleSubmit}>\n\n                <TextAreaField\n                    value={data.content || \"\"}\n                    onChange={handleChange}\n                    name=\"content\"\n                    label=\"Сообщение\"\n                    error={errors.content}\n                />\n                <div className=\"d-flex justify-content-end\">\n                    <button className=\"btn btn-primary\">Опубликовать</button>\n                </div>\n            </form>\n        </div>\n    );\n};\nAddCommentForm.propTypes = {\n    onSubmit: PropTypes.func\n};\n\nexport default AddCommentForm;\n","import CommentsList from \"./commentsList\";\nimport AddCommentForm from \"./addCommentForm\";\nexport default CommentsList;\nexport { AddCommentForm };\n","import httpService from \"./http.service\";\nconst commentEndpoint = \"comment/\";\n\nconst commentService = {\n    createComment: async (payload) => {\n        const { data } = await httpService.put(commentEndpoint + payload._id, payload);\n        return data;\n    },\n    getComments: async (pageId) => {\n        const { data } = await httpService.get(commentEndpoint, {\n            params: {\n                orderBy: '\"pageId\"',\n                equalTo: `\"${pageId}\"`\n            }\n        });\n        return data;\n    },\n    deleteComments: async (commentId) => {\n       const { data } = await httpService.delete(commentEndpoint + commentId);\n       return data;\n    }\n};\nexport default commentService;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useParams } from \"react-router-dom\";\nimport { useAuth } from \"./useAuth\";\nimport { nanoid } from \"nanoid\";\nimport commentService from \"../services/comment.service\";\nimport { toast } from \"react-toastify\";\n\nconst CommentsContext = React.createContext();\n\nexport const useComments = () => {\n    return useContext(CommentsContext);\n};\n\nexport const CommentsnProvider = ({ children }) => {\n    const [isLoading, setLoading] = useState(true);\n    const [comments, setComments] = useState([]);\n    const { userId } = useParams();\n    const { currentUser } = useAuth();\n    const [error, setError] = useState(null);\n    useEffect(() => {\n        getComments();\n    }, [userId]);\n      useEffect(() => {\n        if (error !== null) {\n            toast(error);\n            setError(null);\n        }\n    }, [error]);\n     function errorCatcher(error) {\n        const { message } = error.response.data;\n        setError(message);\n    }\n\n    async function createComment(data) {\n        const comment = {\n            ...data,\n            _id: nanoid(),\n            pageId: userId,\n            created_at: Date.now(),\n            userId: currentUser._id\n\n        };\n        try {\n            const { content } = await commentService.createComment(comment);\n            setComments((prevState) => [...prevState, content]);\n        } catch (error) {\n            errorCatcher(error);\n        }\n    }\n    async function removeComment(id) {\n        try {\n            const { content } = await commentService.deleteComments(id);\n            if (content === null) {\n                setComments((prevState) => prevState.filter((c) => c._id !== id));\n            }\n        } catch (error) {\n            errorCatcher(error);\n        }\n    }\n\n    async function getComments() {\n        try {\n            const { content } = await commentService.getComments(userId);\n            setComments(content);\n        } catch (error) {\n              errorCatcher(error);\n        } finally {\n            setLoading(false);\n        }\n    }\n    return (\n        <CommentsContext.Provider\n            value={{ comments, createComment, isLoading, getComments, removeComment }}\n        >\n            {children}\n        </CommentsContext.Provider>\n    );\n};\n\nCommentsnProvider.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n","import { orderBy } from \"lodash\";\nimport React from \"react\";\n\nimport CommentsList, { AddCommentForm } from \"../common/comments\";\nimport { useComments } from \"../../hooks/useComments\";\n\nconst Comments = () => {\n    const { createComment, removeComment, comments } = useComments();\n\n    const handleSubmit = (data) => {\n        createComment(data);\n        // api.comments\n        //     .add({ ...data, pageId: userId })\n        //     .then((data) => setComments([...comments, data]));\n    };\n    const handleRemoveComment = (id) => {\n        removeComment(id);\n        // api.comments.remove(id).then((id) => {\n        //     setComments(comments.filter((x) => x._id !== id));\n        // });\n    };\n    const sortedComments = orderBy(comments, [\"created_at\"], [\"desc\"]);\n    return (\n        <>\n            <div className=\"card mb-2\">\n                {\" \"}\n                <div className=\"card-body \">\n                    <AddCommentForm onSubmit={handleSubmit} />\n                </div>\n            </div>\n            {sortedComments.length > 0 && (\n                <div className=\"card mb-3\">\n                    <div className=\"card-body \">\n                        <h2>Comments</h2>\n                        <hr />\n                        <CommentsList\n                            comments={sortedComments}\n                            onRemove={handleRemoveComment}\n                        />\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default Comments;\n","import UserPage from \"./userPage\";\nexport default UserPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport UserCard from \"../../ui/userCard\";\nimport QualitiesCard from \"../../ui/qualitiesCard\";\nimport MeetingsCard from \"../../ui/meetingsCard\";\nimport Comments from \"../../ui/comments\";\nimport { useUser } from \"../../../hooks/useUsers\";\nimport { CommentsnProvider } from \"../../../hooks/useComments\";\n\nconst UserPage = ({ userId }) => {\n   const { getUserById } = useUser();\n   const user = getUserById(userId);\n    if (user) {\n        return (\n            <div className=\"container\">\n                <div className=\"row gutters-sm\">\n                    <div className=\"col-md-4 mb-3\">\n                        <UserCard user={user} />\n                        <QualitiesCard data={user.qualities} />\n                        <MeetingsCard value={user.completedMeetings} />\n                    </div>\n                    <div className=\"col-md-8\">\n                        <CommentsnProvider>\n                            <Comments />\n                        </CommentsnProvider>\n\n                    </div>\n                </div>\n            </div>\n        );\n    } else {\n        return <h1>Loading</h1>;\n    }\n};\n\nUserPage.propTypes = {\n    userId: PropTypes.string.isRequired\n};\n\nexport default UserPage;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\n    const pageCount = Math.ceil(itemsCount / pageSize);\n    if (pageCount === 1) return null;\n    const pages = _.range(1, pageCount + 1);\n    return (\n        <nav>\n            <ul className=\"pagination\">\n                {pages.map((page) => (\n                    <li\n                        className={\n                            \"page-item\" +\n                            (page === currentPage ? \" active\" : \"\")\n                        }\n                        key={\"page_\" + page}\n                    >\n                        <button\n                            className=\"page-link\"\n                            onClick={() => onPageChange(page)}\n                        >\n                            {page}\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    );\n};\nPagination.propTypes = {\n    itemsCount: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired,\n    currentPage: PropTypes.number.isRequired\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst GroupList = ({\n    items,\n    valueProperty,\n    contentProperty,\n    onItemSelect,\n    selectedItem\n}) => {\n    if (!Array.isArray(items)) {\n        return (\n            <ul className=\"list-group\">\n                {Object.keys(items).map((item) => (\n                    <li\n                        key={items[item][valueProperty]}\n                        className={\n                            \"list-group-item\" +\n                            (items[item] === selectedItem ? \" active\" : \"\")\n                        }\n                        onClick={() => onItemSelect(items[item])}\n                        role=\"button\"\n                    >\n                        {items[item][contentProperty]}\n                    </li>\n                ))}\n            </ul>\n        );\n    }\n    return (\n        <ul className=\"list-group\">\n            {items.map((item) => (\n                <li\n                    key={item[valueProperty]}\n                    className={\n                        \"list-group-item\" +\n                        (item === selectedItem ? \" active\" : \"\")\n                    }\n                    onClick={() => onItemSelect(item)}\n                    role=\"button\"\n                >\n                    {item[contentProperty]}\n                </li>\n            ))}\n        </ul>\n    );\n};\nGroupList.defaultProps = {\n    valueProperty: \"_id\",\n    contentProperty: \"name\"\n};\nGroupList.propTypes = {\n    items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    valueProperty: PropTypes.string.isRequired,\n    contentProperty: PropTypes.string.isRequired,\n    onItemSelect: PropTypes.func,\n    selectedItem: PropTypes.object\n};\n\nexport default GroupList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst SearchStatus = ({ length }) => {\n    const renderPhrase = (number) => {\n        const lastOne = Number(number.toString().slice(-1));\n        if (number > 4 && number < 15) {\n            return \"человек тусанет\";\n        }\n        if (lastOne === 1) return \"человек тусанет\";\n        if ([2, 3, 4].indexOf(lastOne) >= 0) return \"человека тусанут\";\n        return \"человек тусанет\";\n    };\n    return (\n        <h2>\n            <span\n                className={\"badge \" + (length > 0 ? \"bg-primary\" : \"bg-danger\")}\n            >\n                {length > 0\n                    ? `${length + \" \" + renderPhrase(length)}   с тобой сегодня`\n                    : \"Никто с тобой не тусанет\"}\n            </span>\n        </h2>\n    );\n};\nSearchStatus.propTypes = {\n    length: PropTypes.number\n};\n\nexport default SearchStatus;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst BookMark = ({ status, ...rest }) => {\n    return (\n        <button {...rest}>\n            <i className={\"bi bi-bookmark\" + (status ? \"-heart-fill\" : \"\")}></i>\n        </button>\n    );\n};\nBookMark.propTypes = {\n    status: PropTypes.bool\n};\n\nexport default BookMark;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst TableBody = ({ data, columns }) => {\n    const renderContent = (item, column) => {\n        if (columns[column].component) {\n            const component = columns[column].component;\n            if (typeof component === \"function\") {\n                return component(item);\n            }\n            return component;\n        }\n        return _.get(item, columns[column].path);\n    };\n    return (\n        <tbody>\n            {data.map((item) => (\n                <tr key={item._id}>\n                    {Object.keys(columns).map((column) => (\n                        <td key={column}>{renderContent(item, column)}</td>\n                    ))}\n                </tr>\n            ))}\n        </tbody>\n    );\n};\n\nTableBody.propTypes = {\n    data: PropTypes.array.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableBody;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\n    const handleSort = (item) => {\n        if (selectedSort.path === item) {\n            onSort({\n                ...selectedSort,\n                order: selectedSort.order === \"asc\" ? \"desc\" : \"asc\"\n            });\n        } else {\n            onSort({ path: item, order: \"asc\" });\n        }\n    };\n    const rendeSortArrow = (selectedSort, currentPath) => {\n        if (selectedSort.path === currentPath) {\n            if (selectedSort.order === \"asc\") {\n                return <i className=\"bi bi-caret-down-fill\"></i>;\n            } else {\n                return <i className=\"bi bi-caret-up-fill\"></i>;\n            }\n        }\n        return null;\n    };\n\n    return (\n        <thead>\n            <tr>\n                {Object.keys(columns).map((column) => (\n                    <th\n                        key={column}\n                        onClick={\n                            columns[column].path\n                                ? () => handleSort(columns[column].path)\n                                : undefined\n                        }\n                        {...{ role: columns[column].path && \"button\" }}\n                        scope=\"col\"\n                    >\n                        {columns[column].name}{\" \"}\n                        {rendeSortArrow(selectedSort, columns[column].path)}\n                    </th>\n                ))}\n            </tr>\n        </thead>\n    );\n};\nTableHeader.propTypes = {\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableHeader;\n","import Table from \"./table\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\n\nexport default Table;\n\nexport { TableBody, TableHeader };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\n\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\n    return (\n        <table className=\"table\">\n            {children || (\n                <>\n                    <TableHeader {...{ onSort, selectedSort, columns }} />\n                    <TableBody {...{ columns, data }} />\n                </>\n            )}\n        </table>\n    );\n};\nTable.propTypes = {\n    onSort: PropTypes.func,\n    selectedSort: PropTypes.object,\n    columns: PropTypes.object,\n    data: PropTypes.array,\n    children: PropTypes.array\n};\n\nexport default Table;\n","import httpService from \"./http.service\";\n\nconst professionEndpoint = \"profession/\";\n\nconst professionService = {\n    get: async () => {\n        const { data } = await httpService.get(professionEndpoint);\n        return data;\n    }\n};\nexport default professionService;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ProfessionService from \"../services/profession.service\";\nimport { toast } from \"react-toastify\";\n\nconst ProfessionContext = React.createContext();\n\nexport const useProfessions = () => {\n    return useContext(ProfessionContext);\n};\n\nexport const ProfessionProvider = ({ children }) => {\n    const [isLoading, setLoading] = useState(true);\n    const [professions, setProfessions] = useState([]);\n    const [error, setError] = useState(null);\n    useEffect(() => {\n        if (error !== null) {\n            toast(error);\n            setError(null);\n        }\n    }, [error]);\n\n    useEffect(() => {\n        getProfessionsList();\n    }, []);\n    function errorCatcher(error) {\n        const { message } = error.response.data;\n        setError(message);\n    }\n    function getProfession(id) {\n        return professions.find((p) => p._id === id);\n    }\n\n    async function getProfessionsList() {\n        try {\n            const { content } = await ProfessionService.get();\n            setProfessions(content);\n            setLoading(false);\n        } catch (error) {\n            errorCatcher(error);\n        }\n    }\n\n    return (\n        <ProfessionContext.Provider\n            value={{ isLoading, professions, getProfession }}\n        >\n            {children}\n        </ProfessionContext.Provider>\n    );\n};\n\nProfessionProvider.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n","import React from \"react\";\nimport { useProfessions } from \"../../hooks/useProfession\";\nimport PropTypes from \"prop-types\";\n\nconst Profession = ({ id }) => {\n    const { isLoading, getProfession } = useProfessions();\n    const prof = getProfession(id);\n    if (!isLoading) {\n        return <p>{prof.name}</p>;\n    } else return \"Loading...\";\n};\nProfession.propTypes = {\n    id: PropTypes.string\n};\nexport default Profession;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport BookMark from \"../common/bookmark\";\nimport Qualities from \"./qualities\";\nimport Table from \"../common/table\";\nimport { Link } from \"react-router-dom\";\nimport Profession from \"./profession\";\n\nconst UserTable = ({\n    users,\n    onSort,\n    selectedSort,\n    onToggleBookMark,\n    // onDelete,\n    ...rest\n}) => {\n    const columns = {\n        name: {\n            path: \"name\",\n            name: \"Имя\",\n            component: (user) => (\n                <Link to={`/users/${user._id}`}>{user.name}</Link>\n            )\n        },\n        qualities: {\n            name: \"Качества\",\n            component: (user) => <Qualities qualities={user.qualities} />\n        },\n        professions: {\n            name: \"Профессия\",\n            component: (user) => <Profession id={user.profession} />\n        },\n        completedMeetings: {\n            path: \"completedMeetings\",\n            name: \"Встретился, раз\"\n        },\n        rate: { path: \"rate\", name: \"Оценка\" },\n        bookmark: {\n            path: \"bookmark\",\n            name: \"Избранное\",\n            component: (user) => (\n                <BookMark\n                    status={user.bookmark}\n                    onClick={() => onToggleBookMark(user._id)}\n                />\n            )\n        }\n        // delete: {\n        //     component: (user) => (\n        //         <button\n        //             onClick={() => onDelete(user._id)}\n        //             className=\"btn btn-danger\"\n        //         >\n        //             delete\n        //         </button>\n        //     )\n        // }\n    };\n    return (\n        <Table\n            onSort={onSort}\n            selectedSort={selectedSort}\n            columns={columns}\n            data={users}\n        />\n    );\n};\n\nUserTable.propTypes = {\n    users: PropTypes.array.isRequired,\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    onToggleBookMark: PropTypes.func.isRequired\n    // onDelete: PropTypes.func.isRequired\n};\n\nexport default UserTable;\n","import UsersListPage from \"./usersListPage\";\nexport default UsersListPage;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { paginate } from \"../../../utils/paginate\";\nimport Pagination from \"../../common/pagination\";\nimport GroupList from \"../../common/groupList\";\nimport SearchStatus from \"../../ui/searchStatus\";\nimport UserTable from \"../../ui/usersTable\";\nimport _ from \"lodash\";\nimport { useUser } from \"../../../hooks/useUsers\";\nimport { useProfessions } from \"../../../hooks/useProfession\";\nimport { useAuth } from \"../../../hooks/useAuth\";\nconst UsersListPage = () => {\n    const { users } = useUser();\n    const { currentUser } = useAuth();\n    const { isLoading: professionsLoading, professions } = useProfessions();\n    const [currentPage, setCurrentPage] = useState(1);\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [selectedProf, setSelectedProf] = useState();\n    const [sortBy, setSortBy] = useState({ path: \"name\", order: \"asc\" });\n    const pageSize = 8;\n\n    const handleDelete = (userId) => {\n        // setUsers(users.filter((user) => user._id !== userId));\n        console.log(userId);\n    };\n    const handleToggleBookMark = (id) => {\n        const newArray = users.map((user) => {\n            if (user._id === id) {\n                return { ...user, bookmark: !user.bookmark };\n            }\n            return user;\n        });\n        // setUsers(newArray);\n        console.log(newArray);\n    };\n\n    useEffect(() => {\n        setCurrentPage(1);\n    }, [selectedProf, searchQuery]);\n\n    const handleProfessionSelect = (item) => {\n        if (searchQuery !== \"\") setSearchQuery(\"\");\n        setSelectedProf(item);\n    };\n    const handleSearchQuery = ({ target }) => {\n        setSelectedProf(undefined);\n        setSearchQuery(target.value);\n    };\n\n    const handlePageChange = (pageIndex) => {\n        setCurrentPage(pageIndex);\n    };\n    const handleSort = (item) => {\n        setSortBy(item);\n    };\n\n    if (users) {\n            function filterUsers(data) {\n             const filteredUsers = searchQuery\n            ? data.filter(\n                  (user) =>\n                      user.name\n                          .toLowerCase()\n                          .indexOf(searchQuery.toLowerCase()) !== -1\n              )\n            : selectedProf\n            ? data.filter(\n                  (user) =>\n                      JSON.stringify(user.profession) ===\n                      JSON.stringify(selectedProf)\n              )\n            : data;\n            return filteredUsers.filter((u) => u._id !== currentUser._id\n            );\n            }\n            const filteredUsers = filterUsers(users);\n\n        const count = filteredUsers.length;\n        const sortedUsers = _.orderBy(\n            filteredUsers,\n            [sortBy.path],\n            [sortBy.order]\n        );\n        const usersCrop = paginate(sortedUsers, currentPage, pageSize);\n        const clearFilter = () => {\n            setSelectedProf();\n        };\n\n        return (\n            <div className=\"d-flex\">\n                {professions && !professionsLoading && (\n                    <div className=\"d-flex flex-column flex-shrink-0 p-3\">\n                        <GroupList\n                            selectedItem={selectedProf}\n                            items={professions}\n                            onItemSelect={handleProfessionSelect}\n                        />\n                        <button\n                            className=\"btn btn-secondary mt-2\"\n                            onClick={clearFilter}\n                        >\n                            {\" \"}\n                            Очистить\n                        </button>\n                    </div>\n                )}\n                <div className=\"d-flex flex-column\">\n                    <SearchStatus length={count} />\n                    <input\n                        type=\"text\"\n                        name=\"searchQuery\"\n                        placeholder=\"Search...\"\n                        onChange={handleSearchQuery}\n                        value={searchQuery}\n                    />\n                    {count > 0 && (\n                        <UserTable\n                            users={usersCrop}\n                            onSort={handleSort}\n                            selectedSort={sortBy}\n                            onDelete={handleDelete}\n                            onToggleBookMark={handleToggleBookMark}\n                        />\n                    )}\n                    <div className=\"d-flex justify-content-center\">\n                        <Pagination\n                            itemsCount={count}\n                            pageSize={pageSize}\n                            currentPage={currentPage}\n                            onPageChange={handlePageChange}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    return \"loading...\";\n};\nUsersListPage.propTypes = {\n    users: PropTypes.array\n};\n\nexport default UsersListPage;\n","export function paginate(items, pageNumber, pageSize) {\n    const startIndex = (pageNumber - 1) * pageSize;\n    return [...items].splice(startIndex, pageSize);\n}\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport EditUserPage from \"../components/page/editUserPage\";\nimport UserPage from \"../components/page/userPage\";\nimport UsersListPage from \"../components/page/usersListPage\";\nimport UserProvider from \"../hooks/useUsers\";\nconst Users = () => {\n    const params = useParams();\n    const { userId, edit } = params;\n    return (\n        <>\n            <UserProvider>\n                {userId ? (\n                    edit ? (\n                        <EditUserPage />\n                    ) : (\n                        <UserPage userId={userId} />\n                    )\n                ) : (\n                    <UsersListPage />\n                )}\n            </UserProvider>\n        </>\n    );\n};\n\nexport default Users;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst CheckBoxField = ({ name, value, onChange, children, error }) => {\n    const handleChange = () => {\n        onChange({ name: name, value: !value });\n    };\n    const getInputClasses = () => {\n        return \"form-check-input\" + (error ? \" is-invalid\" : \"\");\n    };\n    return (\n        <div className=\"form-check mb-4\">\n            <input\n                className={getInputClasses()}\n                type=\"checkbox\"\n                value=\"\"\n                id={name}\n                onChange={handleChange}\n                checked={value}\n            />\n            <label className=\"form-check-label\" htmlFor={name}>\n                {children}\n            </label>\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\nCheckBoxField.propTypes = {\n    name: PropTypes.string,\n    value: PropTypes.bool,\n    onChange: PropTypes.func,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]),\n    error: PropTypes.string\n};\n\nexport default CheckBoxField;\n","import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useHistory } from \"react-router-dom\";\n\nconst LoginForm = () => {\n     const history = useHistory();\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        stayOn: false\n    });\n    const { signIn } = useAuth();\n    const [errors, setErrors] = useState({});\n    const [enterError, setEnterError] = useState(null);\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n        setEnterError(null);\n    };\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязателен для заполнения\"\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        try {\n          await signIn(data);\n          history.push(history.location.state ? history.location.state.from.pathname : \"/\");\n        } catch (error) {\n            setEnterError(error.message);\n        }\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <CheckBoxField\n                value={data.stayOn}\n                onChange={handleChange}\n                name=\"stayOn\"\n            >\n                Оставаться в системе\n            </CheckBoxField>\n            {enterError && <p className='text-danger'>{enterError}</p>}\n            <button\n                className=\"btn btn-primary w-100 mx-auto\"\n                type=\"submit\"\n                disabled={!isValid || enterError}\n            >\n                Submit\n            </button>\n        </form>\n    );\n};\n\nexport default LoginForm;\n","import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport SelectField from \"../common/form/selectField\";\nimport RadioField from \"../common/form/radioField\";\nimport MultiSelectField from \"../common/form/multiSelectField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useQualities } from \"../../hooks/useQualities\";\nimport { useProfessions } from \"../../hooks/useProfession\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useHistory } from \"react-router-dom\";\n\nconst RegisterForm = () => {\n    const history = useHistory();\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        profession: \"\",\n        sex: \"male\",\n        name: \"\",\n        qualities: [],\n        licence: false\n    });\n    const { signUp } = useAuth();\n    const { qualities } = useQualities();\n     const qualitiesList = qualities.map(q => ({ label: q.name, value: q._id }));\n    const { professions } = useProfessions();\n     const professionsList = professions.map(p => ({ label: p.name, value: p._id }));\n    const [errors, setErrors] = useState({});\n\n    // const getProfessionById = (id) => {\n    //     for (const prof of professions) {\n    //         if (prof.value === id) {\n    //             return { _id: prof.value, name: prof.label };\n    //         }\n    //     }\n    // };\n    // const getQualities = (elements) => {\n    //     const qualitiesArray = [];\n    //     for (const elem of elements) {\n    //         for (const quality in qualities) {\n    //             if (elem.value === qualities[quality].value) {\n    //                 qualitiesArray.push({\n    //                     _id: qualities[quality].value,\n    //                     name: qualities[quality].label,\n    //                     color: qualities[quality].color\n    //                 });\n    //             }\n    //         }\n    //     }\n    //     return qualitiesArray;\n    // };\n\n    // useEffect(() => {\n    //     api.professions.fetchAll().then((data) => {\n    //         const professionsList = Object.keys(data).map((professionName) => ({\n    //             label: data[professionName].name,\n    //             value: data[professionName]._id\n    //         }));\n    //         setProfession(professionsList);\n    //     });\n    //     api.qualities.fetchAll().then((data) => {\n    //         const qualitiesList = Object.keys(data).map((optionName) => ({\n    //             value: data[optionName]._id,\n    //             label: data[optionName].name,\n    //             color: data[optionName].color\n    //         }));\n    //         setQualities(qualitiesList);\n    //     });\n    // }, []);\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n          name: {\n            isRequired: {\n                message: \"Имя обязательно для заполнения\"\n            },\n           isCapitalSymbol: {\n                message: \"Имя должно содержать хотя бы одну заглавную букву\"\n            },\n             min: {\n                message: \"Имя должно состоять минимум из 2 символовов\",\n                value: 2\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязателен для заполнения\"\n            },\n            isCapitalSymbol: {\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n            },\n            isContainDigit: {\n                message: \"Пароль должен содержать хотя бы одно число\"\n            },\n            min: {\n                message: \"Пароль должен состоять минимум из 8 символов\",\n                value: 8\n            }\n        },\n        profession: {\n            isRequired: {\n                message: \"Обязательно выберите вашу профессию\"\n            }\n        },\n        licence: {\n            isRequired: {\n                message:\n                    \"Вы не можете использовать наш сервис без подтверждения лицензионного соглашения\"\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        const newData = { ...data, qualities: data.qualities.map((q) => q.value) };\n        console.log(newData);\n        try {\n          await signUp(newData);\n          history.push(\"/\");\n        } catch (error) {\n            setErrors(error);\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Name\"\n                name=\"name\"\n                value={data.name}\n                onChange={handleChange}\n                error={errors.name}\n            />\n            <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <SelectField\n                label=\"Выбери свою профессию\"\n                defaultOption=\"Choose...\"\n                options={professionsList}\n                name=\"profession\"\n                onChange={handleChange}\n                value={data.profession}\n                error={errors.profession}\n            />\n            <RadioField\n                options={[\n                    { name: \"Male\", value: \"male\" },\n                    { name: \"Female\", value: \"female\" },\n                    { name: \"Other\", value: \"other\" }\n                ]}\n                value={data.sex}\n                name=\"sex\"\n                onChange={handleChange}\n                label=\"Выберите ваш пол\"\n            />\n            <MultiSelectField\n                options={qualitiesList}\n                onChange={handleChange}\n                defaultValue={data.qualities}\n                name=\"qualities\"\n                label=\"Выберите ваши качества\"\n            />\n            <CheckBoxField\n                value={data.licence}\n                onChange={handleChange}\n                name=\"licence\"\n                error={errors.licence}\n            >\n                Подтвердить <a>лицензионное соглашение</a>\n            </CheckBoxField>\n            <button\n                className=\"btn btn-primary w-100 mx-auto\"\n                type=\"submit\"\n                disabled={!isValid}\n            >\n                Submit\n            </button>\n        </form>\n    );\n};\n\nexport default RegisterForm;\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport LoginForm from \"../components/ui/loginForm\";\nimport RegisterForm from \"../components/ui/registerForm\";\n\nconst Login = () => {\n    const { type } = useParams();\n    const [formType, setFormType] = useState(\n        type === \"register\" ? type : \"login\"\n    );\n    const toggleFormType = (params) => {\n        setFormType((prevState) =>\n            prevState === \"register\" ? \"login\" : \"register\"\n        );\n    };\n\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\n                    {formType === \"register\" ? (\n                        <>\n                            <h3 className=\"mb-4\">Register</h3>\n                            <RegisterForm />\n                            <p>\n                                Already have account?{\" \"}\n                                <a role=\"button\" onClick={toggleFormType}>\n                                    {\" \"}\n                                    Sign In\n                                </a>\n                            </p>\n                        </>\n                    ) : (\n                        <>\n                            <h3 className=\"mb-4\">Login</h3>\n                            <LoginForm />\n                            <p>\n                                Dont have account?{\" \"}\n                                <a role=\"button\" onClick={toggleFormType}>\n                                    {\" \"}\n                                    Sign Up\n                                </a>\n                            </p>\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n","import { useEffect, useState } from \"react\";\nimport professions from \"../mockData/professions.json\";\nimport qualities from \"../mockData/qualities.json\";\nimport users from \"../mockData/users.json\";\nimport httpService from \"../services/http.service\";\n\nconst useMockData = () => {\n    const statusConsts = {\n        idle: \"Not Started\",\n        pending: \"In Process\",\n        successed: \"Ready\",\n        error: \"Error occurred\"\n    };\n    const [error, setError] = useState(null);\n    const [status, setStatus] = useState(statusConsts.idle);\n    const [progress, setProgress] = useState(0);\n    const [count, setCount] = useState(0);\n    const summaryCount = professions.length + qualities.length + users.length;\n    const incrementCount = () => {\n        setCount((prevState) => prevState + 1);\n    };\n    const updateProgress = () => {\n        if (count !== 0 && status === statusConsts.idle) {\n            setStatus(statusConsts.pending);\n        }\n        const newProgress = Math.floor((count / summaryCount) * 100);\n        if (progress < newProgress) {\n            setProgress(() => newProgress);\n        }\n        if (newProgress === 100) {\n            setStatus(statusConsts.successed);\n        }\n    };\n\n    useEffect(() => {\n        updateProgress();\n    }, [count]);\n    async function initialize() {\n        try {\n            for (const prof of professions) {\n                await httpService.put(\"profession/\" + prof._id, prof);\n                incrementCount();\n            }\n            for (const user of users) {\n                await httpService.put(\"user/\" + user._id, user);\n                incrementCount();\n            }\n            for (const qual of qualities) {\n                await httpService.put(\"quality/\" + qual._id, qual);\n                incrementCount();\n            }\n        } catch (error) {\n            setError(error);\n            setStatus(statusConsts.error);\n        }\n    }\n\n    return { error, initialize, progress, status };\n};\n\nexport default useMockData;\n","import React from \"react\";\nimport useMockData from \"../utils/mockData\";\n\nconst Main = () => {\n    const { error, initialize, progress, status } = useMockData();\n    const handleClick = () => {\n        initialize();\n    };\n    return (\n        <div className=\"container mt-5\">\n            <h1> Main Page</h1>\n            <h3>Инициализация данных в FireBase</h3>\n            <ul>\n                <li>Status: {status}</li>\n                <li>Progress: {progress}%</li>\n                {error && <li>Error: {error}</li>}\n            </ul>\n            <button className=\"btn btn-primary\" onClick={handleClick}>\n                {\" \"}\n                Инициализировать\n            </button>\n        </div>\n    );\n};\n\nexport default Main;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../../hooks/useAuth\";\n\nconst NavProfile = () => {\n    const { currentUser } = useAuth();\n    const [isOpen, setOpen] = useState(false);\n    const toggleMenu = () => {\n        setOpen(prevState => !prevState);\n    };\n    return <div className=\"dropdown\" onClick={toggleMenu}>\n        <div className=\"btn dropdown-toggle d-flex align-items-center\">\n            <div className=\"me-2\">{currentUser.name}</div>\n            <img\n                                src={currentUser.image}\n                                className=\"rounded-circle shadow-1-strong me-3\"\n                                alt=\"avatar\"\n                                width=\"65\"\n                                height=\"65\"\n                            />\n        </div>\n        <div className={\"w-100 dropdown-menu\" + (isOpen ? \" show\" : \"\")}>\n            <Link to={`users/${currentUser._id}`} className='dropdown-item'>Profile</Link>\n            <Link to=\"/logout\" className='dropdown-item'>Log Out</Link>\n        </div>\n    </div>;\n};\n\nexport default NavProfile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport NavProfile from \"./navProfile\";\nconst NavBar = () => {\n    const { currentUser } = useAuth();\n    return (\n        <nav className=\"navbar bg-light mb-2\">\n            <div className=\"container-fluid\">\n                <ul className=\"nav\">\n            <li className=\"nav-item\">\n                <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">\n                    Main\n                </Link>\n            </li>\n            {currentUser && (\n                 <li className=\"nav-item\">\n                <Link className=\"nav-link \" aria-current=\"page\" to=\"/users\">\n                    Users\n                </Link>\n            </li>\n            )}\n\n                 </ul>\n                 <div className=\"d-flex\">\n                    {currentUser ? (<NavProfile/>)\n                     : (<Link className=\"nav-link \" aria-current=\"page\" to=\"/login\">\n                    Login\n                </Link>)}\n\n                 </div>\n\n            </div>\n\n        </nav>\n\n    );\n};\n\nexport default NavBar;\n","import React, { useEffect } from \"react\";\nimport { useAuth } from \"../hooks/useAuth\";\nconst LogOut = () => {\n    const { logOut } = useAuth();\n    useEffect(() => {\n        logOut();\n    }, []);\n    return (<h1>Loading</h1>);\n};\n\nexport default LogOut;\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport PropTypes from \"prop-types\";\nconst ProtectedRoute = ({ component: Component, children, ...rest }) => {\n    const { currentUser } = useAuth();\n    return (<Route {...rest} render={(props) => {\n        if (!currentUser) {\n           return <Redirect to={{\n pathname: \"/login\",\nstate: {\n            from: props.location\n           }\n}}/>;\n        }\n        return Component ? <Component {...props}/> : children;\n    }}/>);\n};\n\nProtectedRoute.propTypes = {\n    component: PropTypes.func,\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n    location: PropTypes.object\n};\n\nexport default ProtectedRoute;\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Users from \"./layouts/users\";\nimport Login from \"./layouts/login\";\nimport Main from \"./layouts/main\";\nimport NavBar from \"./components/ui/navBar\";\nimport { ProfessionProvider } from \"./hooks/useProfession\";\nimport { QualitiesProvider } from \"./hooks/useQualities\";\nimport LogOut from \"./layouts/logOut\";\nimport { AuthProvider } from \"./hooks/useAuth\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\n\nfunction App() {\n    return (\n        <div>\n            <AuthProvider>\n            <NavBar />\n\n            <QualitiesProvider>\n                <ProfessionProvider>\n                    <Switch>\n                        <ProtectedRoute\n                            path=\"/users/:userId?/:edit?\"\n                            component={Users}\n                        />\n                        <Route path=\"/login/:type?\" component={Login} />\n                        <Route path='/logout' component={LogOut}/>\n                        <Route path=\"/\" exact component={Main} />\n                        <Redirect to=\"/\" />\n                    </Switch>\n                </ProfessionProvider>\n            </QualitiesProvider>\n\n            <ToastContainer />\n\n            </AuthProvider>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./app/App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}