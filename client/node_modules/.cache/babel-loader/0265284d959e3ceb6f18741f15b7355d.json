{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport qualityService from \"../services/quality.service\";\nconst qualitiesSlice = createSlice({\n  name: \"qualities\",\n  initialState: {\n    entities: null,\n    isLoading: true,\n    error: null,\n    lastFetch: null\n  },\n  reducers: {\n    qualitiesRequested: state => {\n      state.isLoading = true;\n    },\n    qualitiesReceved: (state, action) => {\n      state.entities = action.payload;\n      state.lastFetch = Date.now();\n      state.isLoading = false;\n    },\n    qualitiesRequestFiled: (state, action) => {\n      state.error = action.payload;\n      state.isLoading = false;\n    }\n  }\n});\nconst {\n  actions,\n  reducer: qualitiesReducer\n} = qualitiesSlice;\nconst {\n  qualitiesRequested,\n  qualitiesReceved,\n  qualitiesRequestFiled\n} = actions;\nexport function isOutdated(date) {\n  if (Date.now() - date > 10 * 60 * 1000) {\n    return true;\n  }\n  return false;\n}\nexport const loadQualitiesList = () => async (dispatch, getState) => {\n  const {\n    lastFetch\n  } = getState().qualities;\n  if (isOutdated(lastFetch)) {\n    dispatch(qualitiesRequested());\n    try {\n      const {\n        content\n      } = await qualityService.fetchAll();\n      dispatch(qualitiesReceved(content));\n    } catch (error) {\n      dispatch(qualitiesRequestFiled(error.message));\n    }\n  }\n};\nexport const getQualities = () => state => state.qualities.entities;\nexport const getQualitiesLoadingStatus = () => state => state.qualities.isLoading;\nexport const getQualitiesByIds = qualitiesIds => state => {\n  if (state.qualities.entities) {\n    const newQualitiesArray = [];\n    for (const qualId of qualitiesIds) {\n      for (const quality of state.qualities.entities) {\n        if (quality._id === qualId) {\n          newQualitiesArray.push(quality);\n          break;\n        }\n      }\n    }\n    return newQualitiesArray;\n  }\n};\nexport default qualitiesReducer;","map":{"version":3,"names":["createSlice","qualityService","qualitiesSlice","name","initialState","entities","isLoading","error","lastFetch","reducers","qualitiesRequested","state","qualitiesReceved","action","payload","Date","now","qualitiesRequestFiled","actions","reducer","qualitiesReducer","isOutdated","date","loadQualitiesList","dispatch","getState","qualities","content","fetchAll","message","getQualities","getQualitiesLoadingStatus","getQualitiesByIds","qualitiesIds","newQualitiesArray","qualId","quality","_id","push"],"sources":["/Users/sikollineu-iandeulei/Desktop/Userslist/usersList/client/src/app/store/qualities.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport qualityService from \"../services/quality.service\";\n\n  const qualitiesSlice = createSlice({\n    name: \"qualities\",\n    initialState: {\n        entities: null,\n        isLoading: true,\n        error: null,\n        lastFetch: null\n    },\n    reducers: {\n        qualitiesRequested: (state) => {\n            state.isLoading = true;\n        },\n        qualitiesReceved: (state, action) => {\n            state.entities = action.payload;\n            state.lastFetch = Date.now();\n            state.isLoading = false;\n        },\n        qualitiesRequestFiled: (state, action) => {\n            state.error = action.payload;\n            state.isLoading = false;\n        }\n    }\n});\n\nconst { actions, reducer: qualitiesReducer } = qualitiesSlice;\nconst { qualitiesRequested, qualitiesReceved, qualitiesRequestFiled } = actions;\n\nexport function isOutdated(date) {\n    if (Date.now() - date > 10 * 60 * 1000) {\n        return true;\n    }\n    return false;\n}\n\nexport const loadQualitiesList = () => async (dispatch, getState) => {\n    const { lastFetch } = getState().qualities;\n    if (isOutdated(lastFetch)) {\ndispatch(qualitiesRequested());\n        try {\n           const { content } = await qualityService.fetchAll();\n           dispatch(qualitiesReceved(content));\n        } catch (error) {\n            dispatch(qualitiesRequestFiled(error.message));\n        }\n    }\n};\n\nexport const getQualities = () => (state) => state.qualities.entities;\n\nexport const getQualitiesLoadingStatus = () => (state) => state.qualities.isLoading;\nexport const getQualitiesByIds = (qualitiesIds) => (state) => {\n if (state.qualities.entities) {\n    const newQualitiesArray = [];\n    for (const qualId of qualitiesIds) {\n        for (const quality of state.qualities.entities) {\n            if (quality._id === qualId) {\n                newQualitiesArray.push(quality);\n                break;\n            }\n        }\n    }\n    return newQualitiesArray;\n }\n};\n\nexport default qualitiesReducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,cAAc,MAAM,6BAA6B;AAEtD,MAAMC,cAAc,GAAGF,WAAW,CAAC;EACjCG,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAE;IACVC,QAAQ,EAAE,IAAI;IACdC,SAAS,EAAE,IAAI;IACfC,KAAK,EAAE,IAAI;IACXC,SAAS,EAAE;EACf,CAAC;EACDC,QAAQ,EAAE;IACNC,kBAAkB,EAAGC,KAAK,IAAK;MAC3BA,KAAK,CAACL,SAAS,GAAG,IAAI;IAC1B,CAAC;IACDM,gBAAgB,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACjCF,KAAK,CAACN,QAAQ,GAAGQ,MAAM,CAACC,OAAO;MAC/BH,KAAK,CAACH,SAAS,GAAGO,IAAI,CAACC,GAAG,EAAE;MAC5BL,KAAK,CAACL,SAAS,GAAG,KAAK;IAC3B,CAAC;IACDW,qBAAqB,EAAE,CAACN,KAAK,EAAEE,MAAM,KAAK;MACtCF,KAAK,CAACJ,KAAK,GAAGM,MAAM,CAACC,OAAO;MAC5BH,KAAK,CAACL,SAAS,GAAG,KAAK;IAC3B;EACJ;AACJ,CAAC,CAAC;AAEF,MAAM;EAAEY,OAAO;EAAEC,OAAO,EAAEC;AAAiB,CAAC,GAAGlB,cAAc;AAC7D,MAAM;EAAEQ,kBAAkB;EAAEE,gBAAgB;EAAEK;AAAsB,CAAC,GAAGC,OAAO;AAE/E,OAAO,SAASG,UAAU,CAACC,IAAI,EAAE;EAC7B,IAAIP,IAAI,CAACC,GAAG,EAAE,GAAGM,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,EAAE;IACpC,OAAO,IAAI;EACf;EACA,OAAO,KAAK;AAChB;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAM,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACjE,MAAM;IAAEjB;EAAU,CAAC,GAAGiB,QAAQ,EAAE,CAACC,SAAS;EAC1C,IAAIL,UAAU,CAACb,SAAS,CAAC,EAAE;IAC/BgB,QAAQ,CAACd,kBAAkB,EAAE,CAAC;IACtB,IAAI;MACD,MAAM;QAAEiB;MAAQ,CAAC,GAAG,MAAM1B,cAAc,CAAC2B,QAAQ,EAAE;MACnDJ,QAAQ,CAACZ,gBAAgB,CAACe,OAAO,CAAC,CAAC;IACtC,CAAC,CAAC,OAAOpB,KAAK,EAAE;MACZiB,QAAQ,CAACP,qBAAqB,CAACV,KAAK,CAACsB,OAAO,CAAC,CAAC;IAClD;EACJ;AACJ,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,MAAOnB,KAAK,IAAKA,KAAK,CAACe,SAAS,CAACrB,QAAQ;AAErE,OAAO,MAAM0B,yBAAyB,GAAG,MAAOpB,KAAK,IAAKA,KAAK,CAACe,SAAS,CAACpB,SAAS;AACnF,OAAO,MAAM0B,iBAAiB,GAAIC,YAAY,IAAMtB,KAAK,IAAK;EAC7D,IAAIA,KAAK,CAACe,SAAS,CAACrB,QAAQ,EAAE;IAC3B,MAAM6B,iBAAiB,GAAG,EAAE;IAC5B,KAAK,MAAMC,MAAM,IAAIF,YAAY,EAAE;MAC/B,KAAK,MAAMG,OAAO,IAAIzB,KAAK,CAACe,SAAS,CAACrB,QAAQ,EAAE;QAC5C,IAAI+B,OAAO,CAACC,GAAG,KAAKF,MAAM,EAAE;UACxBD,iBAAiB,CAACI,IAAI,CAACF,OAAO,CAAC;UAC/B;QACJ;MACJ;IACJ;IACA,OAAOF,iBAAiB;EAC3B;AACD,CAAC;AAED,eAAed,gBAAgB"},"metadata":{},"sourceType":"module"}