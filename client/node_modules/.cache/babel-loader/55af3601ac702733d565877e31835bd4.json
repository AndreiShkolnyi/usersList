{"ast":null,"code":"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport configFile from \"../config.json\";\nimport authService from \"./auth.service\";\nimport localStorageService from \"./localStorage.service\";\nconst http = axios.create({\n  baseURL: configFile.apiEndpoint\n});\nhttp.interceptors.request.use(async function (config) {\n  const expiresDate = localStorageService.getExpiresDate();\n  const refreshToken = localStorageService.getRefreshToken();\n  const isExpired = refreshToken && expiresDate < Date.now();\n  if (configFile.isFireBase) {\n    const containSlash = /\\/$/gi.test(config.url);\n    config.url = (containSlash ? config.url.slice(0, -1) : config.url) + \".json\";\n    if (isExpired) {\n      const data = await authService.refresh();\n      localStorageService.setTokens({\n        refreshToken: data.refresh_token,\n        idToken: data.id_token,\n        expiresIn: data.expires_in,\n        localId: data.user_id\n      });\n    }\n    const accessToken = localStorageService.getAccessToken();\n    if (accessToken) {\n      config.params = {\n        ...config.params,\n        auth: accessToken\n      };\n    }\n  } else {\n    if (isExpired) {\n      const data = await authService.refresh();\n      localStorageService.setTokens({\n        refreshToken: data.refreshToken,\n        accessToken: data.accessToken,\n        expiresIn: data.expiresIn,\n        userId: data.userId\n      });\n    }\n    const accessToken = localStorageService.getAccessToken();\n    if (accessToken) {\n      config.headers = {\n        ...config.headers,\n        Authorization: `Bearer ${accessToken}`\n      };\n    }\n  }\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\nfunction transformData(data) {\n  return data && !data._id ? Object.keys(data).map(key => ({\n    ...data[key]\n  })) : data;\n}\nhttp.interceptors.response.use(res => {\n  if (configFile.isFireBase) {\n    res.data = {\n      content: transformData(res.data)\n    };\n  }\n  res.data = {\n    content: res.data\n  };\n  return res;\n}, function (error) {\n  const expectedErrors = error.response && error.response.status >= 400 && error.response.status < 500;\n  if (!expectedErrors) {\n    console.log(error);\n    toast.error(\"Something was wrong. Try it later\");\n  }\n  return Promise.reject(error);\n});\nconst httpService = {\n  get: http.get,\n  post: http.post,\n  put: http.put,\n  delete: http.delete,\n  patch: http.patch\n};\nexport default httpService;","map":{"version":3,"names":["axios","toast","configFile","authService","localStorageService","http","create","baseURL","apiEndpoint","interceptors","request","use","config","expiresDate","getExpiresDate","refreshToken","getRefreshToken","isExpired","Date","now","isFireBase","containSlash","test","url","slice","data","refresh","setTokens","refresh_token","idToken","id_token","expiresIn","expires_in","localId","user_id","accessToken","getAccessToken","params","auth","userId","headers","Authorization","error","Promise","reject","transformData","_id","Object","keys","map","key","response","res","content","expectedErrors","status","console","log","httpService","get","post","put","delete","patch"],"sources":["/Users/sikollineu-iandeulei/Desktop/Userslist/usersList/client/src/app/services/http.service.js"],"sourcesContent":["import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport configFile from \"../config.json\";\nimport authService from \"./auth.service\";\nimport localStorageService from \"./localStorage.service\";\n\nconst http = axios.create({\n    baseURL: configFile.apiEndpoint\n});\n\nhttp.interceptors.request.use(\n    async function (config) {\n        const expiresDate = localStorageService.getExpiresDate();\n        const refreshToken = localStorageService.getRefreshToken();\n        const isExpired = refreshToken && expiresDate < Date.now();\n\n        if (configFile.isFireBase) {\n            const containSlash = /\\/$/gi.test(config.url);\n            config.url =\n                (containSlash ? config.url.slice(0, -1) : config.url) + \".json\";\n            if (isExpired) {\n                const data = await authService.refresh();\n\n                localStorageService.setTokens({\n                    refreshToken: data.refresh_token,\n                    idToken: data.id_token,\n                    expiresIn: data.expires_in,\n                    localId: data.user_id\n                });\n            }\n            const accessToken = localStorageService.getAccessToken();\n            if (accessToken) {\n                config.params = { ...config.params, auth: accessToken };\n            }\n        } else {\n            if (isExpired) {\n                const data = await authService.refresh();\n\n                localStorageService.setTokens({\n                    refreshToken: data.refreshToken,\n                    accessToken: data.accessToken,\n                    expiresIn: data.expiresIn,\n                    userId: data.userId\n                });\n            }\n            const accessToken = localStorageService.getAccessToken();\n            if (accessToken) {\n                config.headers = {\n                    ...config.headers,\n                    Authorization: `Bearer ${accessToken}`\n                };\n            }\n        }\n        return config;\n    },\n    function (error) {\n        return Promise.reject(error);\n    }\n);\nfunction transformData(data) {\n    return data && !data._id\n        ? Object.keys(data).map((key) => ({\n              ...data[key]\n          }))\n        : data;\n}\nhttp.interceptors.response.use(\n    (res) => {\n        if (configFile.isFireBase) {\n            res.data = { content: transformData(res.data) };\n        }\n        res.data = { content: res.data };\n        return res;\n    },\n    function (error) {\n        const expectedErrors =\n            error.response &&\n            error.response.status >= 400 &&\n            error.response.status < 500;\n\n        if (!expectedErrors) {\n            console.log(error);\n            toast.error(\"Something was wrong. Try it later\");\n        }\n        return Promise.reject(error);\n    }\n);\nconst httpService = {\n    get: http.get,\n    post: http.post,\n    put: http.put,\n    delete: http.delete,\n    patch: http.patch\n};\nexport default httpService;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}