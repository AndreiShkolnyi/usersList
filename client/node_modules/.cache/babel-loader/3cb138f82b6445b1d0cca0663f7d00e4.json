{"ast":null,"code":"var _jsxFileName = \"/Users/sikollineu-iandeulei/Desktop/Userslist/usersList/client/src/app/components/common/form/textField.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextField = _ref => {\n  _s();\n  let {\n    label,\n    type,\n    name,\n    value,\n    onChange,\n    error\n  } = _ref;\n  const [showPassword, setShowPassword] = useState(false);\n  const handleChange = e => {\n    onChange({\n      name: e.target.name,\n      value: e.target.value\n    });\n  };\n  const getInputClasses = () => {\n    return \"form-control\" + (error ? \" is-invalid\" : \"\");\n  };\n  const toggleShowPassword = () => {\n    setShowPassword(prevState => !prevState);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: name,\n      children: [\" \", label]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group has-validation\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: showPassword ? \"text\" : type,\n        id: name,\n        name: name,\n        value: value,\n        onChange: handleChange,\n        className: getInputClasses()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), type === \"password\" && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-secondary\",\n        type: \"button\",\n        onClick: toggleShowPassword,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalid-feedback \",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(TextField, \"daguiRHWMFkqPgCh/ppD7CF5VuQ=\");\n_c = TextField;\nTextField.defaultProps = {\n  type: \"text\"\n};\nexport default TextField;\nvar _c;\n$RefreshReg$(_c, \"TextField\");","map":{"version":3,"names":["React","useState","TextField","label","type","name","value","onChange","error","showPassword","setShowPassword","handleChange","e","target","getInputClasses","toggleShowPassword","prevState","defaultProps"],"sources":["/Users/sikollineu-iandeulei/Desktop/Userslist/usersList/client/src/app/components/common/form/textField.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\ninterface TextFieldProps {\n    label: string;\n    type: string;\n    name: string;\n    value: string;\n    onChange: ({}) => void;\n    error: string;\n}\n\nconst TextField = ({\n    label,\n    type,\n    name,\n    value,\n    onChange,\n    error\n}: TextFieldProps) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    const handleChange = (e: React.SyntheticEvent<HTMLInputElement> | any) => {\n        onChange({ name: e.target.name, value: e.target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\n    };\n    const toggleShowPassword = () => {\n        setShowPassword((prevState) => !prevState);\n    };\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name}> {label}</label>\n            <div className=\"input-group has-validation\">\n                <input\n                    type={showPassword ? \"text\" : type}\n                    id={name}\n                    name={name}\n                    value={value}\n                    onChange={handleChange}\n                    className={getInputClasses()}\n                />\n\n                {type === \"password\" && (\n                    <button\n                        className=\"btn btn-outline-secondary\"\n                        type=\"button\"\n                        onClick={toggleShowPassword}\n                    >\n                        <i\n                            className={\n                                \"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")\n                            }\n                        ></i>\n                    </button>\n                )}\n                {error && <div className=\"invalid-feedback \">{error}</div>}\n            </div>\n        </div>\n    );\n};\nTextField.defaultProps = {\n    type: \"text\"\n};\n\nexport default TextField;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAYxC,MAAMC,SAAS,GAAG,QAOI;EAAA;EAAA,IAPH;IACfC,KAAK;IACLC,IAAI;IACJC,IAAI;IACJC,KAAK;IACLC,QAAQ;IACRC;EACY,CAAC;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMU,YAAY,GAAIC,CAA+C,IAAK;IACtEL,QAAQ,CAAC;MAAEF,IAAI,EAAEO,CAAC,CAACC,MAAM,CAACR,IAAI;MAAEC,KAAK,EAAEM,CAAC,CAACC,MAAM,CAACP;IAAM,CAAC,CAAC;EAC5D,CAAC;EACD,MAAMQ,eAAe,GAAG,MAAM;IAC1B,OAAO,cAAc,IAAIN,KAAK,GAAG,aAAa,GAAG,EAAE,CAAC;EACxD,CAAC;EACD,MAAMO,kBAAkB,GAAG,MAAM;IAC7BL,eAAe,CAAEM,SAAS,IAAK,CAACA,SAAS,CAAC;EAC9C,CAAC;EACD,oBACI;IAAK,SAAS,EAAC,MAAM;IAAA,wBACjB;MAAO,OAAO,EAAEX,IAAK;MAAA,gBAAGF,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAS,eACtC;MAAK,SAAS,EAAC,4BAA4B;MAAA,wBACvC;QACI,IAAI,EAAEM,YAAY,GAAG,MAAM,GAAGL,IAAK;QACnC,EAAE,EAAEC,IAAK;QACT,IAAI,EAAEA,IAAK;QACX,KAAK,EAAEC,KAAM;QACb,QAAQ,EAAEK,YAAa;QACvB,SAAS,EAAEG,eAAe;MAAG;QAAA;QAAA;QAAA;MAAA,QAC/B,EAEDV,IAAI,KAAK,UAAU,iBAChB;QACI,SAAS,EAAC,2BAA2B;QACrC,IAAI,EAAC,QAAQ;QACb,OAAO,EAAEW,kBAAmB;QAAA,uBAE5B;UACI,SAAS,EACL,WAAW,IAAIN,YAAY,GAAG,QAAQ,GAAG,EAAE;QAC9C;UAAA;UAAA;UAAA;QAAA;MACA;QAAA;QAAA;QAAA;MAAA,QAEZ,EACAD,KAAK,iBAAI;QAAK,SAAS,EAAC,mBAAmB;QAAA,UAAEA;MAAK;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QACxD;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAC,GAjDIN,SAAS;AAAA,KAATA,SAAS;AAkDfA,SAAS,CAACe,YAAY,GAAG;EACrBb,IAAI,EAAE;AACV,CAAC;AAED,eAAeF,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}