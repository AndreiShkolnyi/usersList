{"ast":null,"code":"var _jsxFileName = \"/Users/sikollineu-iandeulei/Desktop/Userslist/usersList/client/src/app/components/common/groupList.tsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupList = _ref => {\n  let {\n    items,\n    valueProperty,\n    contentProperty,\n    onItemSelect,\n    selectedItem\n  } = _ref;\n  if (!Array.isArray(items)) {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: Object.keys(items).map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\" + (items[item] === selectedItem ? \" active\" : \"\"),\n        onClick: () => onItemSelect(items[item]),\n        role: \"button\",\n        children: items[item][contentProperty]\n      }, items[item][valueProperty], false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"list-group\",\n    children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"list-group-item\" + (item === selectedItem ? \" active\" : \"\"),\n      onClick: () => onItemSelect(item),\n      role: \"button\",\n      children: item[contentProperty]\n    }, item[valueProperty], false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_c = GroupList;\nGroupList.defaultProps = {\n  valueProperty: \"_id\",\n  contentProperty: \"name\"\n};\nGroupList.propTypes = {\n  items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  valueProperty: PropTypes.string.isRequired,\n  contentProperty: PropTypes.string.isRequired,\n  onItemSelect: PropTypes.func,\n  selectedItem: PropTypes.object\n};\nexport default GroupList;\nvar _c;\n$RefreshReg$(_c, \"GroupList\");","map":{"version":3,"names":["React","PropTypes","GroupList","items","valueProperty","contentProperty","onItemSelect","selectedItem","Array","isArray","Object","keys","map","item","defaultProps","propTypes","oneOfType","object","array","string","isRequired","func"],"sources":["/Users/sikollineu-iandeulei/Desktop/Userslist/usersList/client/src/app/components/common/groupList.tsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IProfession } from \"../../types/types\";\n\ninterface GroupListProperty {\n    items: [IProfession] | { IProfession };\n    valueProperty: string;\n    contentProperty: string;\n    onItemSelect: (item) => void;\n    selectedItem: object | undefined | [];\n}\n\nconst GroupList = ({\n    items,\n    valueProperty,\n    contentProperty,\n    onItemSelect,\n    selectedItem\n}: GroupListProperty) => {\n    if (!Array.isArray(items)) {\n        return (\n            <ul className=\"list-group\">\n                {Object.keys(items).map((item) => (\n                    <li\n                        key={items[item][valueProperty]}\n                        className={\n                            \"list-group-item\" +\n                            (items[item] === selectedItem ? \" active\" : \"\")\n                        }\n                        onClick={() => onItemSelect(items[item])}\n                        role=\"button\"\n                    >\n                        {items[item][contentProperty]}\n                    </li>\n                ))}\n            </ul>\n        );\n    }\n    return (\n        <ul className=\"list-group\">\n            {items.map((item) => (\n                <li\n                    key={item[valueProperty]}\n                    className={\n                        \"list-group-item\" +\n                        (item === selectedItem ? \" active\" : \"\")\n                    }\n                    onClick={() => onItemSelect(item)}\n                    role=\"button\"\n                >\n                    {item[contentProperty]}\n                </li>\n            ))}\n        </ul>\n    );\n};\nGroupList.defaultProps = {\n    valueProperty: \"_id\",\n    contentProperty: \"name\"\n};\nGroupList.propTypes = {\n    items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    valueProperty: PropTypes.string.isRequired,\n    contentProperty: PropTypes.string.isRequired,\n    onItemSelect: PropTypes.func,\n    selectedItem: PropTypes.object\n};\n\nexport default GroupList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAAC;AAWnC,MAAMC,SAAS,GAAG,QAMO;EAAA,IANN;IACfC,KAAK;IACLC,aAAa;IACbC,eAAe;IACfC,YAAY;IACZC;EACe,CAAC;EAChB,IAAI,CAACC,KAAK,CAACC,OAAO,CAACN,KAAK,CAAC,EAAE;IACvB,oBACI;MAAI,SAAS,EAAC,YAAY;MAAA,UACrBO,MAAM,CAACC,IAAI,CAACR,KAAK,CAAC,CAACS,GAAG,CAAEC,IAAI,iBACzB;QAEI,SAAS,EACL,iBAAiB,IAChBV,KAAK,CAACU,IAAI,CAAC,KAAKN,YAAY,GAAG,SAAS,GAAG,EAAE,CACjD;QACD,OAAO,EAAE,MAAMD,YAAY,CAACH,KAAK,CAACU,IAAI,CAAC,CAAE;QACzC,IAAI,EAAC,QAAQ;QAAA,UAEZV,KAAK,CAACU,IAAI,CAAC,CAACR,eAAe;MAAC,GARxBF,KAAK,CAACU,IAAI,CAAC,CAACT,aAAa,CAAC;QAAA;QAAA;QAAA;MAAA,QAUtC;IAAC;MAAA;MAAA;MAAA;IAAA,QACD;EAEb;EACA,oBACI;IAAI,SAAS,EAAC,YAAY;IAAA,UACrBD,KAAK,CAACS,GAAG,CAAEC,IAAI,iBACZ;MAEI,SAAS,EACL,iBAAiB,IAChBA,IAAI,KAAKN,YAAY,GAAG,SAAS,GAAG,EAAE,CAC1C;MACD,OAAO,EAAE,MAAMD,YAAY,CAACO,IAAI,CAAE;MAClC,IAAI,EAAC,QAAQ;MAAA,UAEZA,IAAI,CAACR,eAAe;IAAC,GARjBQ,IAAI,CAACT,aAAa,CAAC;MAAA;MAAA;MAAA;IAAA,QAU/B;EAAC;IAAA;IAAA;IAAA;EAAA,QACD;AAEb,CAAC;AAAC,KA3CIF,SAAS;AA4CfA,SAAS,CAACY,YAAY,GAAG;EACrBV,aAAa,EAAE,KAAK;EACpBC,eAAe,EAAE;AACrB,CAAC;AACDH,SAAS,CAACa,SAAS,GAAG;EAClBZ,KAAK,EAAEF,SAAS,CAACe,SAAS,CAAC,CAACf,SAAS,CAACgB,MAAM,EAAEhB,SAAS,CAACiB,KAAK,CAAC,CAAC;EAC/Dd,aAAa,EAAEH,SAAS,CAACkB,MAAM,CAACC,UAAU;EAC1Cf,eAAe,EAAEJ,SAAS,CAACkB,MAAM,CAACC,UAAU;EAC5Cd,YAAY,EAAEL,SAAS,CAACoB,IAAI;EAC5Bd,YAAY,EAAEN,SAAS,CAACgB;AAC5B,CAAC;AAED,eAAef,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}