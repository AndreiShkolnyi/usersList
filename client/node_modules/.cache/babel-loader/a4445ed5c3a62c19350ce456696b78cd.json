{"ast":null,"code":"var _jsxFileName = \"/Users/sikollineu-iandeulei/Desktop/Userslist/usersList/client/src/app/components/page/usersListPage/usersListPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { paginate } from \"../../../utils/paginate\";\nimport Pagination from \"../../common/pagination\";\nimport GroupList from \"../../common/groupList\";\nimport SearchStatus from \"../../ui/searchStatus\";\nimport UserTable from \"../../ui/usersTable\";\nimport _ from \"lodash\";\nimport { useSelector } from \"react-redux\";\nimport { getProfessions, getProfessionsLoadingStatus } from \"../../../store/professions\";\nimport { getCurrentUserId, getUsersList } from \"../../../store/users\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UsersListPage = () => {\n  _s();\n  const users = useSelector(getUsersList());\n  const currentUserId = useSelector(getCurrentUserId());\n  const professionsLoading = useSelector(getProfessionsLoadingStatus);\n  const professions = useSelector(getProfessions());\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [selectedProf, setSelectedProf] = useState();\n  const [sortBy, setSortBy] = useState({\n    path: \"name\",\n    order: \"asc\"\n  });\n  const pageSize = 8;\n  const handleDelete = userId => {\n    // setUsers(users.filter((user) => user._id !== userId));\n    console.log(userId);\n  };\n  const handleToggleBookMark = id => {\n    const newArray = users.map(user => {\n      if (user._id === id) {\n        return {\n          ...user,\n          bookmark: !user.bookmark\n        };\n      }\n      return user;\n    });\n    // setUsers(newArray);\n    console.log(newArray);\n  };\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [selectedProf, searchQuery]);\n  const handleProfessionSelect = item => {\n    if (searchQuery !== \"\") setSearchQuery(\"\");\n    setSelectedProf(item);\n  };\n  const handleSearchQuery = _ref => {\n    let {\n      target\n    } = _ref;\n    setSelectedProf(undefined);\n    setSearchQuery(target.value);\n  };\n  const handlePageChange = pageIndex => {\n    setCurrentPage(pageIndex);\n  };\n  const handleSort = item => {\n    setSortBy(item);\n  };\n  if (users) {\n    function filterUsers(data) {\n      const filteredUsers = searchQuery ? data.filter(user => user.name.toLowerCase().indexOf(searchQuery.toLowerCase()) !== -1) : selectedProf ? data.filter(user => JSON.stringify(user.profession) === JSON.stringify(selectedProf)) : data;\n      return filteredUsers.filter(u => u._id !== currentUserId);\n    }\n    const filteredUsers = filterUsers(users);\n    const count = filteredUsers.length;\n    const sortedUsers = _.orderBy(filteredUsers, [sortBy.path], [sortBy.order]);\n    const usersCrop = paginate(sortedUsers, currentPage, pageSize);\n    const clearFilter = () => {\n      setSelectedProf();\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex\",\n      children: [professions && !professionsLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column flex-shrink-0 p-3\",\n        children: [/*#__PURE__*/_jsxDEV(GroupList, {\n          selectedItem: selectedProf,\n          items: professions,\n          onItemSelect: handleProfessionSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary mt-2\",\n          onClick: clearFilter,\n          children: [\" \", \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(SearchStatus, {\n          length: count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"searchQuery\",\n          placeholder: \"Search...\",\n          onChange: handleSearchQuery,\n          value: searchQuery\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), count > 0 && /*#__PURE__*/_jsxDEV(UserTable, {\n          users: usersCrop,\n          onSort: handleSort,\n          selectedSort: sortBy,\n          onDelete: handleDelete,\n          onToggleBookMark: handleToggleBookMark\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsCount: count,\n            pageSize: pageSize,\n            currentPage: currentPage,\n            onPageChange: handlePageChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this);\n  }\n  return \"loading...\";\n};\n_s(UsersListPage, \"vYOHH2Z2OPpbeFEoa4cRGvSL93c=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector];\n});\n_c = UsersListPage;\nUsersListPage.propTypes = {\n  users: PropTypes.array\n};\nexport default UsersListPage;\nvar _c;\n$RefreshReg$(_c, \"UsersListPage\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","paginate","Pagination","GroupList","SearchStatus","UserTable","_","useSelector","getProfessions","getProfessionsLoadingStatus","getCurrentUserId","getUsersList","UsersListPage","users","currentUserId","professionsLoading","professions","currentPage","setCurrentPage","searchQuery","setSearchQuery","selectedProf","setSelectedProf","sortBy","setSortBy","path","order","pageSize","handleDelete","userId","console","log","handleToggleBookMark","id","newArray","map","user","_id","bookmark","handleProfessionSelect","item","handleSearchQuery","target","undefined","value","handlePageChange","pageIndex","handleSort","filterUsers","data","filteredUsers","filter","name","toLowerCase","indexOf","JSON","stringify","profession","u","count","length","sortedUsers","orderBy","usersCrop","clearFilter","propTypes","array"],"sources":["/Users/sikollineu-iandeulei/Desktop/Userslist/usersList/client/src/app/components/page/usersListPage/usersListPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { paginate } from \"../../../utils/paginate\";\nimport Pagination from \"../../common/pagination\";\nimport GroupList from \"../../common/groupList\";\nimport SearchStatus from \"../../ui/searchStatus\";\nimport UserTable from \"../../ui/usersTable\";\nimport _ from \"lodash\";\nimport { useSelector } from \"react-redux\";\nimport { getProfessions, getProfessionsLoadingStatus } from \"../../../store/professions\";\nimport { getCurrentUserId, getUsersList } from \"../../../store/users\";\nconst UsersListPage = () => {\n    const users = useSelector(getUsersList());\n    const currentUserId = useSelector(getCurrentUserId());\n     const professionsLoading = useSelector(getProfessionsLoadingStatus);\n    const professions = useSelector(getProfessions());\n    const [currentPage, setCurrentPage] = useState(1);\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [selectedProf, setSelectedProf] = useState();\n    const [sortBy, setSortBy] = useState({ path: \"name\", order: \"asc\" });\n    const pageSize = 8;\n\n    const handleDelete = (userId) => {\n        // setUsers(users.filter((user) => user._id !== userId));\n        console.log(userId);\n    };\n    const handleToggleBookMark = (id) => {\n        const newArray = users.map((user) => {\n            if (user._id === id) {\n                return { ...user, bookmark: !user.bookmark };\n            }\n            return user;\n        });\n        // setUsers(newArray);\n        console.log(newArray);\n    };\n\n    useEffect(() => {\n        setCurrentPage(1);\n    }, [selectedProf, searchQuery]);\n\n    const handleProfessionSelect = (item) => {\n        if (searchQuery !== \"\") setSearchQuery(\"\");\n        setSelectedProf(item);\n    };\n    const handleSearchQuery = ({ target }) => {\n        setSelectedProf(undefined);\n        setSearchQuery(target.value);\n    };\n\n    const handlePageChange = (pageIndex) => {\n        setCurrentPage(pageIndex);\n    };\n    const handleSort = (item) => {\n        setSortBy(item);\n    };\n\n    if (users) {\n            function filterUsers(data) {\n             const filteredUsers = searchQuery\n            ? data.filter(\n                  (user) =>\n                      user.name\n                          .toLowerCase()\n                          .indexOf(searchQuery.toLowerCase()) !== -1\n              )\n            : selectedProf\n            ? data.filter(\n                  (user) =>\n                      JSON.stringify(user.profession) ===\n                      JSON.stringify(selectedProf)\n              )\n            : data;\n            return filteredUsers.filter((u) => u._id !== currentUserId\n            );\n            }\n            const filteredUsers = filterUsers(users);\n\n        const count = filteredUsers.length;\n        const sortedUsers = _.orderBy(\n            filteredUsers,\n            [sortBy.path],\n            [sortBy.order]\n        );\n        const usersCrop = paginate(sortedUsers, currentPage, pageSize);\n        const clearFilter = () => {\n            setSelectedProf();\n        };\n\n        return (\n            <div className=\"d-flex\">\n                {professions && !professionsLoading && (\n                    <div className=\"d-flex flex-column flex-shrink-0 p-3\">\n                        <GroupList\n                            selectedItem={selectedProf}\n                            items={professions}\n                            onItemSelect={handleProfessionSelect}\n                        />\n                        <button\n                            className=\"btn btn-secondary mt-2\"\n                            onClick={clearFilter}\n                        >\n                            {\" \"}\n                            Очистить\n                        </button>\n                    </div>\n                )}\n                <div className=\"d-flex flex-column\">\n                    <SearchStatus length={count} />\n                    <input\n                        type=\"text\"\n                        name=\"searchQuery\"\n                        placeholder=\"Search...\"\n                        onChange={handleSearchQuery}\n                        value={searchQuery}\n                    />\n                    {count > 0 && (\n                        <UserTable\n                            users={usersCrop}\n                            onSort={handleSort}\n                            selectedSort={sortBy}\n                            onDelete={handleDelete}\n                            onToggleBookMark={handleToggleBookMark}\n                        />\n                    )}\n                    <div className=\"d-flex justify-content-center\">\n                        <Pagination\n                            itemsCount={count}\n                            pageSize={pageSize}\n                            currentPage={currentPage}\n                            onPageChange={handlePageChange}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    return \"loading...\";\n};\nUsersListPage.propTypes = {\n    users: PropTypes.array\n};\n\nexport default UsersListPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}