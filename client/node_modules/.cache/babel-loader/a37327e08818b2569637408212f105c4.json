{"ast":null,"code":"var _jsxFileName = \"/Users/sikollineu-iandeulei/Desktop/Userslist/usersList/client/src/app/hooks/useComments.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useParams } from \"react-router-dom\";\nimport { nanoid } from \"nanoid\";\nimport commentService from \"../services/comment.service\";\nimport { toast } from \"react-toastify\";\nimport { useSelector } from \"react-redux\";\nimport { getCurrentUserId } from \"../store/users\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentsContext = /*#__PURE__*/React.createContext();\nexport const useComments = () => {\n  _s();\n  return useContext(CommentsContext);\n};\n_s(useComments, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CommentsnProvider = _ref => {\n  _s2();\n  let {\n    children\n  } = _ref;\n  const [isLoading, setLoading] = useState(true);\n  const [comments, setComments] = useState([]);\n  const {\n    userId\n  } = useParams();\n  const currentUserId = useSelector(getCurrentUserId());\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    getComments();\n  }, [userId]);\n  useEffect(() => {\n    if (error !== null) {\n      toast(error);\n      setError(null);\n    }\n  }, [error]);\n  function errorCatcher(error) {\n    const {\n      message\n    } = error.response.data;\n    setError(message);\n  }\n  async function createComment(data) {\n    const comment = {\n      ...data,\n      _id: nanoid(),\n      pageId: userId,\n      created_at: Date.now(),\n      userId: currentUserId\n    };\n    try {\n      const {\n        content\n      } = await commentService.createComment(comment);\n      setComments(prevState => [...prevState, content]);\n    } catch (error) {\n      errorCatcher(error);\n    }\n  }\n  async function removeComment(id) {\n    try {\n      const {\n        content\n      } = await commentService.deleteComments(id);\n      if (content === null) {\n        setComments(prevState => prevState.filter(c => c._id !== id));\n      }\n    } catch (error) {\n      errorCatcher(error);\n    }\n  }\n  async function getComments() {\n    try {\n      const {\n        content\n      } = await commentService.getComments(userId);\n      setComments(content);\n    } catch (error) {\n      errorCatcher(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(CommentsContext.Provider, {\n    value: {\n      comments,\n      createComment,\n      isLoading,\n      getComments,\n      removeComment\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s2(CommentsnProvider, \"TpxIJCA3mGWY23746uNrO3ElnFY=\", false, function () {\n  return [useParams, useSelector];\n});\n_c = CommentsnProvider;\nCommentsnProvider.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\n};\nvar _c;\n$RefreshReg$(_c, \"CommentsnProvider\");","map":{"version":3,"names":["React","useContext","useEffect","useState","PropTypes","useParams","nanoid","commentService","toast","useSelector","getCurrentUserId","CommentsContext","createContext","useComments","CommentsnProvider","children","isLoading","setLoading","comments","setComments","userId","currentUserId","error","setError","getComments","errorCatcher","message","response","data","createComment","comment","_id","pageId","created_at","Date","now","content","prevState","removeComment","id","deleteComments","filter","c","propTypes","oneOfType","arrayOf","node"],"sources":["/Users/sikollineu-iandeulei/Desktop/Userslist/usersList/client/src/app/hooks/useComments.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useParams } from \"react-router-dom\";\nimport { nanoid } from \"nanoid\";\nimport commentService from \"../services/comment.service\";\nimport { toast } from \"react-toastify\";\nimport { useSelector } from \"react-redux\";\nimport { getCurrentUserId } from \"../store/users\";\n\nconst CommentsContext = React.createContext();\n\nexport const useComments = () => {\n    return useContext(CommentsContext);\n};\n\nexport const CommentsnProvider = ({ children }) => {\n    const [isLoading, setLoading] = useState(true);\n    const [comments, setComments] = useState([]);\n    const { userId } = useParams();\n    const currentUserId = useSelector(getCurrentUserId());\n    const [error, setError] = useState(null);\n    useEffect(() => {\n        getComments();\n    }, [userId]);\n      useEffect(() => {\n        if (error !== null) {\n            toast(error);\n            setError(null);\n        }\n    }, [error]);\n     function errorCatcher(error) {\n        const { message } = error.response.data;\n        setError(message);\n    }\n\n    async function createComment(data) {\n        const comment = {\n            ...data,\n            _id: nanoid(),\n            pageId: userId,\n            created_at: Date.now(),\n            userId: currentUserId\n\n        };\n        try {\n            const { content } = await commentService.createComment(comment);\n            setComments((prevState) => [...prevState, content]);\n        } catch (error) {\n            errorCatcher(error);\n        }\n    }\n    async function removeComment(id) {\n        try {\n            const { content } = await commentService.deleteComments(id);\n            if (content === null) {\n                setComments((prevState) => prevState.filter((c) => c._id !== id));\n            }\n        } catch (error) {\n            errorCatcher(error);\n        }\n    }\n\n    async function getComments() {\n        try {\n            const { content } = await commentService.getComments(userId);\n            setComments(content);\n        } catch (error) {\n              errorCatcher(error);\n        } finally {\n            setLoading(false);\n        }\n    }\n    return (\n        <CommentsContext.Provider\n            value={{ comments, createComment, isLoading, getComments, removeComment }}\n        >\n            {children}\n        </CommentsContext.Provider>\n    );\n};\n\nCommentsnProvider.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}