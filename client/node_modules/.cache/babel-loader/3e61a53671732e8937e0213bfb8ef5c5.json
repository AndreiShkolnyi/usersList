{"ast":null,"code":"import _objectSpread from\"/Users/sikollineu-iandeulei/Desktop/Userslist/usersList/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useEffect}from\"react\";import Quality from\"./quality\";import{getQualitiesLoadingStatus,getQulitiesByIds,loadQualitiesList}from\"../../../store/qualities\";import{useDispatch,useSelector}from\"react-redux\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var QualitiesList=function QualitiesList(_ref){var qualities=_ref.qualities;var dispatch=useDispatch();var isLoading=useSelector(getQualitiesLoadingStatus());var qualitiesList=useSelector(getQulitiesByIds(qualities));useEffect(function(){dispatch(loadQualitiesList());},[]);if(isLoading)return\"Loadind ...\";return/*#__PURE__*/_jsx(_Fragment,{children:qualitiesList.map(function(qual){return/*#__PURE__*/_jsx(Quality,_objectSpread({},qual),qual._id);})});};export default QualitiesList;","map":{"version":3,"names":["React","useEffect","Quality","getQualitiesLoadingStatus","getQulitiesByIds","loadQualitiesList","useDispatch","useSelector","QualitiesList","qualities","dispatch","isLoading","qualitiesList","map","qual","_id"],"sources":["/Users/sikollineu-iandeulei/Desktop/Userslist/usersList/client/src/app/components/ui/qualities/qualitiesList.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Quality from \"./quality\";\nimport {\n    getQualitiesLoadingStatus,\n    getQulitiesByIds,\n    loadQualitiesList\n} from \"../../../store/qualities\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst QualitiesList = ({ qualities }) => {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(getQualitiesLoadingStatus());\n    const qualitiesList = useSelector(getQulitiesByIds(qualities));\n    useEffect(() => {\n        dispatch(loadQualitiesList());\n    }, []);\n\n    if (isLoading) return \"Loadind ...\";\n\n    return (\n        <>\n            {qualitiesList.map((qual) => (\n                <Quality key={qual._id} {...qual} />\n            ))}\n        </>\n    );\n};\n\nQualitiesList.propTypes = {\n    qualities: PropTypes.array\n};\n\nexport default QualitiesList;\n"],"mappings":"oLAAA,MAAOA,MAAK,EAAIC,SAAS,KAAQ,OAAO,CAExC,MAAOC,QAAO,KAAM,WAAW,CAC/B,OACIC,yBAAyB,CACzBC,gBAAgB,CAChBC,iBAAiB,KACd,0BAA0B,CACjC,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CAAC,gGAEvD,GAAMC,cAAa,CAAG,QAAhBA,cAAa,MAAsB,IAAhBC,UAAS,MAATA,SAAS,CAC9B,GAAMC,SAAQ,CAAGJ,WAAW,EAAE,CAC9B,GAAMK,UAAS,CAAGJ,WAAW,CAACJ,yBAAyB,EAAE,CAAC,CAC1D,GAAMS,cAAa,CAAGL,WAAW,CAACH,gBAAgB,CAACK,SAAS,CAAC,CAAC,CAC9DR,SAAS,CAAC,UAAM,CACZS,QAAQ,CAACL,iBAAiB,EAAE,CAAC,CACjC,CAAC,CAAE,EAAE,CAAC,CAEN,GAAIM,SAAS,CAAE,MAAO,aAAa,CAEnC,mBACI,yBACKC,aAAa,CAACC,GAAG,CAAC,SAACC,IAAI,qBACpB,KAAC,OAAO,kBAAoBA,IAAI,EAAlBA,IAAI,CAACC,GAAG,CAAc,EACvC,CAAC,EACH,CAEX,CAAC,CAMD,cAAeP,cAAa"},"metadata":{},"sourceType":"module"}