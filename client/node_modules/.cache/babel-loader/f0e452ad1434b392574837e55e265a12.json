{"ast":null,"code":"var _jsxFileName = \"/Users/sikollineu-iandeulei/Desktop/Userslist/usersList/client/src/app/components/ui/registerForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport SelectField from \"../common/form/selectField\";\nimport RadioField from \"../common/form/radioField\";\nimport MultiSelectField from \"../common/form/multiSelectField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getQualities } from \"../../store/qualities\";\nimport { getProfessions } from \"../../store/professions\";\nimport { signUp } from \"../../store/users\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterForm = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [data, setData] = useState({\n    email: \"\",\n    password: \"\",\n    profession: \"\",\n    sex: \"male\",\n    name: \"\",\n    qualities: [],\n    licence: false\n  });\n  const qualities = useSelector(getQualities());\n  const qualitiesList = qualities.map(q => ({\n    label: q.name,\n    value: q._id\n  }));\n  const professions = useSelector(getProfessions());\n  const professionsList = professions.map(p => ({\n    label: p.name,\n    value: p._id\n  }));\n  const [errors, setErrors] = useState({});\n  const handleChange = target => {\n    setData(prevState => ({\n      ...prevState,\n      [target.name]: target.value\n    }));\n  };\n  const validatorConfig = {\n    email: {\n      isRequired: {\n        message: \"Электронная почта обязательна для заполнения\"\n      },\n      isEmail: {\n        message: \"Email введен некорректно\"\n      }\n    },\n    name: {\n      isRequired: {\n        message: \"Имя обязательно для заполнения\"\n      },\n      isCapitalSymbol: {\n        message: \"Имя должно содержать хотя бы одну заглавную букву\"\n      },\n      min: {\n        message: \"Имя должно состоять минимум из 2 символовов\",\n        value: 2\n      }\n    },\n    password: {\n      isRequired: {\n        message: \"Пароль обязателен для заполнения\"\n      },\n      isCapitalSymbol: {\n        message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n      },\n      isContainDigit: {\n        message: \"Пароль должен содержать хотя бы одно число\"\n      },\n      min: {\n        message: \"Пароль должен состоять минимум из 8 символов\",\n        value: 8\n      }\n    },\n    profession: {\n      isRequired: {\n        message: \"Обязательно выберите вашу профессию\"\n      }\n    },\n    licence: {\n      isRequired: {\n        message: \"Вы не можете использовать наш сервис без подтверждения лицензионного соглашения\"\n      }\n    }\n  };\n  useEffect(() => {\n    validate();\n  }, [data]);\n  const validate = () => {\n    const errors = validator(data, validatorConfig);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n  const isValid = Object.keys(errors).length === 0;\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n    const newData = {\n      ...data,\n      qualities: data.qualities.map(q => q.value)\n    };\n    dispatch(signUp(newData));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Name\",\n      name: \"name\",\n      value: data.name,\n      onChange: handleChange,\n      error: errors.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"\\u042D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0430\\u044F \\u043F\\u043E\\u0447\\u0442\\u0430\",\n      name: \"email\",\n      value: data.email,\n      onChange: handleChange,\n      error: errors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n      type: \"password\",\n      name: \"password\",\n      value: data.password,\n      onChange: handleChange,\n      error: errors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n      label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438 \\u0441\\u0432\\u043E\\u044E \\u043F\\u0440\\u043E\\u0444\\u0435\\u0441\\u0441\\u0438\\u044E\",\n      defaultOption: \"Choose...\",\n      options: professionsList,\n      name: \"profession\",\n      onChange: handleChange,\n      value: data.profession,\n      error: errors.profession\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RadioField, {\n      options: [{\n        name: \"Male\",\n        value: \"male\"\n      }, {\n        name: \"Female\",\n        value: \"female\"\n      }, {\n        name: \"Other\",\n        value: \"other\"\n      }],\n      value: data.sex,\n      name: \"sex\",\n      onChange: handleChange,\n      label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 \\u043F\\u043E\\u043B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MultiSelectField, {\n      options: qualitiesList,\n      onChange: handleChange,\n      defaultValue: data.qualities,\n      name: \"qualities\",\n      label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448\\u0438 \\u043A\\u0430\\u0447\\u0435\\u0441\\u0442\\u0432\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CheckBoxField, {\n      value: data.licence,\n      onChange: handleChange,\n      name: \"licence\",\n      error: errors.licence,\n      children: [\"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u044C \", /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"\\u043B\\u0438\\u0446\\u0435\\u043D\\u0437\\u0438\\u043E\\u043D\\u043D\\u043E\\u0435 \\u0441\\u043E\\u0433\\u043B\\u0430\\u0448\\u0435\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary w-100 mx-auto\",\n      type: \"submit\",\n      disabled: !isValid,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterForm, \"FkA5G4OIGodLcg61INAXIUCvsTM=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useEffect","useState","validator","TextField","SelectField","RadioField","MultiSelectField","CheckBoxField","useSelector","useDispatch","getQualities","getProfessions","signUp","RegisterForm","dispatch","data","setData","email","password","profession","sex","name","qualities","licence","qualitiesList","map","q","label","value","_id","professions","professionsList","p","errors","setErrors","handleChange","target","prevState","validatorConfig","isRequired","message","isEmail","isCapitalSymbol","min","isContainDigit","validate","Object","keys","length","isValid","handleSubmit","e","preventDefault","newData"],"sources":["/Users/sikollineu-iandeulei/Desktop/Userslist/usersList/client/src/app/components/ui/registerForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport SelectField from \"../common/form/selectField\";\nimport RadioField from \"../common/form/radioField\";\nimport MultiSelectField from \"../common/form/multiSelectField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getQualities } from \"../../store/qualities\";\nimport { getProfessions } from \"../../store/professions\";\nimport { signUp } from \"../../store/users\";\n\nconst RegisterForm = () => {\n    const dispatch = useDispatch();\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        profession: \"\",\n        sex: \"male\",\n        name: \"\",\n        qualities: [],\n        licence: false\n    });\n\n    const qualities = useSelector(getQualities());\n     const qualitiesList = qualities.map(q => ({ label: q.name, value: q._id }));\n    const professions = useSelector(getProfessions());\n     const professionsList = professions.map(p => ({ label: p.name, value: p._id }));\n    const [errors, setErrors] = useState({});\n\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n          name: {\n            isRequired: {\n                message: \"Имя обязательно для заполнения\"\n            },\n           isCapitalSymbol: {\n                message: \"Имя должно содержать хотя бы одну заглавную букву\"\n            },\n             min: {\n                message: \"Имя должно состоять минимум из 2 символовов\",\n                value: 2\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязателен для заполнения\"\n            },\n            isCapitalSymbol: {\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n            },\n            isContainDigit: {\n                message: \"Пароль должен содержать хотя бы одно число\"\n            },\n            min: {\n                message: \"Пароль должен состоять минимум из 8 символов\",\n                value: 8\n            }\n        },\n        profession: {\n            isRequired: {\n                message: \"Обязательно выберите вашу профессию\"\n            }\n        },\n        licence: {\n            isRequired: {\n                message:\n                    \"Вы не можете использовать наш сервис без подтверждения лицензионного соглашения\"\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        const newData = { ...data, qualities: data.qualities.map((q) => q.value) };\n        dispatch(signUp(newData));\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Name\"\n                name=\"name\"\n                value={data.name}\n                onChange={handleChange}\n                error={errors.name}\n            />\n            <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <SelectField\n                label=\"Выбери свою профессию\"\n                defaultOption=\"Choose...\"\n                options={professionsList}\n                name=\"profession\"\n                onChange={handleChange}\n                value={data.profession}\n                error={errors.profession}\n            />\n            <RadioField\n                options={[\n                    { name: \"Male\", value: \"male\" },\n                    { name: \"Female\", value: \"female\" },\n                    { name: \"Other\", value: \"other\" }\n                ]}\n                value={data.sex}\n                name=\"sex\"\n                onChange={handleChange}\n                label=\"Выберите ваш пол\"\n            />\n            <MultiSelectField\n                options={qualitiesList}\n                onChange={handleChange}\n                defaultValue={data.qualities}\n                name=\"qualities\"\n                label=\"Выберите ваши качества\"\n            />\n            <CheckBoxField\n                value={data.licence}\n                onChange={handleChange}\n                name=\"licence\"\n                error={errors.licence}\n            >\n                Подтвердить <a>лицензионное соглашение</a>\n            </CheckBoxField>\n            <button\n                className=\"btn btn-primary w-100 mx-auto\"\n                type=\"submit\"\n                disabled={!isValid}\n            >\n                Submit\n            </button>\n        </form>\n    );\n};\n\nexport default RegisterForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}