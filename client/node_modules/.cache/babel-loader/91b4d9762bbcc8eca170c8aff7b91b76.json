{"ast":null,"code":"import { createAction, createSlice } from \"@reduxjs/toolkit\";\nimport authService from \"../services/auth.service\";\nimport localStorageService from \"../services/localStorage.service\";\nimport userService from \"../services/user.service\";\nimport { generetaAuthError } from \"../utils/generateAuthError\";\nimport history from \"../utils/history\";\nconst initialState = localStorageService.getAccessToken() ? {\n  entities: null,\n  isLoading: true,\n  error: null,\n  auth: {\n    userId: localStorageService.getUserId()\n  },\n  isLoggedIn: true,\n  dataLoaded: false\n} : {\n  entities: null,\n  isLoading: false,\n  error: null,\n  auth: null,\n  isLoggedIn: false,\n  dataLoaded: false\n};\nconst usersSlice = createSlice({\n  name: \"users\",\n  initialState,\n  reducers: {\n    usersRequested: state => {\n      state.isLoading = true;\n    },\n    usersReceved: (state, action) => {\n      state.entities = action.payload;\n      state.dataLoaded = true;\n      state.isLoading = false;\n    },\n    usersRequestFiled: (state, action) => {\n      state.error = action.payload;\n      state.isLoading = false;\n    },\n    authRequestSuccess: (state, action) => {\n      state.auth = action.payload;\n      state.isLoggedIn = true;\n    },\n    authRequestFailed: (state, action) => {\n      state.error = action.payload;\n    },\n    userCreated: (state, action) => {\n      state.entities.push(action.payload);\n    },\n    userLoggedOut: state => {\n      state.entities = null;\n      state.isLoggedIn = false;\n      state.auth = null;\n      state.dataLoaded = false;\n    },\n    userUpdateSuccessed: (state, action) => {\n      state.entities[state.entities.findIndex(u => u._id === action.payload._id)] = action.payload;\n    },\n    authRequested: state => {\n      state.error = null;\n    }\n  }\n});\nconst {\n  reducer: usersReducer,\n  actions\n} = usersSlice;\nconst {\n  usersRequested,\n  usersReceved,\n  usersRequestFiled,\n  authRequestFailed,\n  authRequestSuccess,\n  userLoggedOut,\n  userUpdateSuccessed\n} = actions;\nconst authRequested = createAction(\"users/authRequested\");\nconst userUpdateFailed = createAction(\"users/userUpdateFailed\");\nconst userUpdateRequested = createAction(\"users/userUpdateRequested\");\nexport const login = _ref => {\n  let {\n    payload,\n    redirect\n  } = _ref;\n  return async dispatch => {\n    const {\n      email,\n      password\n    } = payload;\n    dispatch(authRequested());\n    try {\n      const data = await authService.login({\n        email,\n        password\n      });\n      localStorageService.setTokens(data);\n      dispatch(authRequestSuccess({\n        userId: data.userId\n      }));\n      history.push(redirect);\n    } catch (error) {\n      const {\n        code,\n        message\n      } = error.response.data.error;\n      if (code === 400) {\n        const errorMessage = generetaAuthError(message);\n        dispatch(authRequestFailed(errorMessage));\n      } else {\n        dispatch(authRequestFailed(error.message));\n      }\n    }\n  };\n};\nexport const signUp = payload => async dispatch => {\n  dispatch(authRequested());\n  try {\n    const data = await authService.register(payload);\n    localStorageService.setTokens(data);\n    dispatch(authRequestSuccess({\n      userId: data.userId\n    }));\n    history.push(\"/users\");\n  } catch (error) {\n    dispatch(authRequestFailed(error.message));\n  }\n};\nexport const logOut = () => dispatch => {\n  localStorageService.removeAuthData();\n  dispatch(userLoggedOut());\n  history.push(\"/\");\n};\nexport const loadUsersList = () => async dispatch => {\n  dispatch(usersRequested());\n  try {\n    const {\n      content\n    } = await userService.get();\n    dispatch(usersReceved(content));\n  } catch (error) {\n    dispatch(usersRequestFiled(error.message));\n  }\n};\nexport const updateUser = payload => async dispatch => {\n  dispatch(userUpdateRequested());\n  try {\n    const {\n      content\n    } = await userService.update(payload);\n    dispatch(userUpdateSuccessed(content));\n    history.push(`/users/${content._id}`);\n  } catch (error) {\n    // dispatch(userUpdateFailed(error));\n  }\n};\nexport const getUsersList = () => state => state.users.entities;\nexport const getCurrentUserData = () => state => {\n  return state.users.entities ? state.users.entities.find(u => u._id === state.users.auth.userId) : null;\n};\nexport const getUserById = userId => state => {\n  if (state.users.entities) {\n    return state.users.entities.find(u => u._id === userId);\n  }\n};\nexport const getIsLoggedIn = () => state => state.users.isLoggedIn;\nexport const getDataStatus = () => state => state.users.dataLoaded;\nexport const getUsersLoadingStatus = () => state => state.users.isLoading;\nexport const getCurrentUserId = () => state => state.users.auth.userId;\nexport const getAuthErrors = () => state => state.users.error;\nexport default usersReducer;","map":{"version":3,"names":["createAction","createSlice","authService","localStorageService","userService","generetaAuthError","history","initialState","getAccessToken","entities","isLoading","error","auth","userId","getUserId","isLoggedIn","dataLoaded","usersSlice","name","reducers","usersRequested","state","usersReceved","action","payload","usersRequestFiled","authRequestSuccess","authRequestFailed","userCreated","push","userLoggedOut","userUpdateSuccessed","findIndex","u","_id","authRequested","reducer","usersReducer","actions","userUpdateFailed","userUpdateRequested","login","redirect","dispatch","email","password","data","setTokens","code","message","response","errorMessage","signUp","register","logOut","removeAuthData","loadUsersList","content","get","updateUser","update","getUsersList","users","getCurrentUserData","find","getUserById","getIsLoggedIn","getDataStatus","getUsersLoadingStatus","getCurrentUserId","getAuthErrors"],"sources":["/Users/sikollineu-iandeulei/Desktop/Userslist/usersList/client/src/app/store/users.ts"],"sourcesContent":["import { IUser } from \"./../types/types\";\nimport { AppDispatch } from \"./createStore\";\nimport { createAction, createSlice } from \"@reduxjs/toolkit\";\nimport authService from \"../services/auth.service\";\nimport localStorageService from \"../services/localStorage.service\";\nimport userService from \"../services/user.service\";\nimport { generetaAuthError } from \"../utils/generateAuthError\";\nimport history from \"../utils/history\";\n\ninterface loginProps {\n    payload: any;\n    redirect: any;\n}\n\ninterface initialProps {\n    entities: null | any;\n    isLoading: boolean;\n    error: null | any;\n    auth: null | any;\n    isLoggedIn: boolean;\n    dataLoaded: boolean;\n}\n\nconst initialState: initialProps = localStorageService.getAccessToken()\n    ? {\n          entities: null,\n          isLoading: true,\n          error: null,\n          auth: { userId: localStorageService.getUserId() },\n          isLoggedIn: true,\n          dataLoaded: false\n      }\n    : {\n          entities: null,\n          isLoading: false,\n          error: null,\n          auth: null,\n          isLoggedIn: false,\n          dataLoaded: false\n      };\n\nconst usersSlice = createSlice({\n    name: \"users\",\n    initialState,\n    reducers: {\n        usersRequested: (state) => {\n            state.isLoading = true;\n        },\n        usersReceved: (state, action) => {\n            state.entities = action.payload;\n            state.dataLoaded = true;\n            state.isLoading = false;\n        },\n        usersRequestFiled: (state, action) => {\n            state.error = action.payload;\n            state.isLoading = false;\n        },\n        authRequestSuccess: (state, action) => {\n            state.auth = action.payload;\n            state.isLoggedIn = true;\n        },\n        authRequestFailed: (state, action) => {\n            state.error = action.payload;\n        },\n        userCreated: (state, action) => {\n            state.entities.push(action.payload);\n        },\n        userLoggedOut: (state) => {\n            state.entities = null;\n            state.isLoggedIn = false;\n            state.auth = null;\n            state.dataLoaded = false;\n        },\n        userUpdateSuccessed: (state, action) => {\n            state.entities[\n                state.entities.findIndex(\n                    (u: { _id: any }) => u._id === action.payload._id\n                )\n            ] = action.payload;\n        },\n        authRequested: (state) => {\n            state.error = null;\n        }\n    }\n});\n\nconst { reducer: usersReducer, actions } = usersSlice;\nconst {\n    usersRequested,\n    usersReceved,\n    usersRequestFiled,\n    authRequestFailed,\n    authRequestSuccess,\n    userLoggedOut,\n    userUpdateSuccessed\n} = actions;\n\nconst authRequested = createAction(\"users/authRequested\");\nconst userUpdateFailed = createAction(\"users/userUpdateFailed\");\nconst userUpdateRequested = createAction(\"users/userUpdateRequested\");\n\nexport const login =\n    ({ payload, redirect }: loginProps) =>\n    async (dispatch: AppDispatch) => {\n        const { email, password } = payload;\n        dispatch(authRequested());\n        try {\n            const data = await authService.login({ email, password });\n            localStorageService.setTokens(data);\n            dispatch(authRequestSuccess({ userId: data.userId }));\n            history.push(redirect);\n        } catch (error: any) {\n            const { code, message } = error.response.data.error;\n            if (code === 400) {\n                const errorMessage = generetaAuthError(message);\n                dispatch(authRequestFailed(errorMessage));\n            } else {\n                dispatch(authRequestFailed(error.message));\n            }\n        }\n    };\n\nexport const signUp = (payload: any) => async (dispatch: AppDispatch) => {\n    dispatch(authRequested());\n    try {\n        const data = await authService.register(payload);\n        localStorageService.setTokens(data);\n        dispatch(authRequestSuccess({ userId: data.userId }));\n        history.push(\"/users\");\n    } catch (error: any) {\n        dispatch(authRequestFailed(error.message));\n    }\n};\nexport const logOut = () => (dispatch: AppDispatch) => {\n    localStorageService.removeAuthData();\n    dispatch(userLoggedOut());\n    history.push(\"/\");\n};\nexport const loadUsersList = () => async (dispatch: AppDispatch) => {\n    dispatch(usersRequested());\n    try {\n        const { content } = await userService.get();\n        dispatch(usersReceved(content));\n    } catch (error: any) {\n        dispatch(usersRequestFiled(error.message));\n    }\n};\nexport const updateUser = (payload: any) => async (dispatch: AppDispatch) => {\n    dispatch(userUpdateRequested());\n    try {\n        const { content } = await userService.update(payload);\n        dispatch(userUpdateSuccessed(content));\n        history.push(`/users/${content._id}`);\n    } catch (error: any) {\n        // dispatch(userUpdateFailed(error));\n    }\n};\n\nexport const getUsersList = () => (state: any) => state.users.entities;\nexport const getCurrentUserData = () => (state: any) => {\n    return state.users.entities\n        ? state.users.entities.find(\n              (u: IUser) => u._id === state.users.auth.userId\n          )\n        : null;\n};\nexport const getUserById = (userId: string) => (state: any) => {\n    if (state.users.entities) {\n        return state.users.entities.find((u: IUser) => u._id === userId);\n    }\n};\n\nexport const getIsLoggedIn = () => (state: { users: { isLoggedIn: any } }) =>\n    state.users.isLoggedIn;\nexport const getDataStatus = () => (state: { users: { dataLoaded: any } }) =>\n    state.users.dataLoaded;\nexport const getUsersLoadingStatus =\n    () => (state: { users: { isLoading: any } }) =>\n        state.users.isLoading;\nexport const getCurrentUserId =\n    () => (state: { users: { auth: { userId: any } } }) =>\n        state.users.auth.userId;\nexport const getAuthErrors = () => (state: { users: { error: any } }) =>\n    state.users.error;\nexport default usersReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}