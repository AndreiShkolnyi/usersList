{"ast":null,"code":"var _jsxFileName = \"/Users/sikollineu-iandeulei/Desktop/Userslist/usersList/client/src/app/components/common/form/radioField.tsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RadioField = _ref => {\n  let {\n    options,\n    name,\n    onChange,\n    value,\n    label\n  } = _ref;\n  const handleChange = e => {\n    onChange({\n      name: target.name,\n      value: target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"form-label\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check form-check-inline\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"radio\",\n          name: name,\n          id: option.name + \"_\" + option.value,\n          checked: option.value === value,\n          value: option.value,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          htmlFor: option.name + \"_\" + option.value,\n          children: option.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)]\n      }, option.name + \"_\" + option.value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_c = RadioField;\nRadioField.propTypes = {\n  options: PropTypes.array,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n  label: PropTypes.string\n};\nexport default RadioField;\nvar _c;\n$RefreshReg$(_c, \"RadioField\");","map":{"version":3,"names":["React","PropTypes","RadioField","options","name","onChange","value","label","handleChange","e","target","map","option","propTypes","array","string","func"],"sources":["/Users/sikollineu-iandeulei/Desktop/Userslist/usersList/client/src/app/components/common/form/radioField.tsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\ninterface RadioFieldProps {\n    options: [];\n    name: string;\n    onChange: () => void;\n    value: string;\n    label: string;\n}\n\nconst RadioField = ({\n    options,\n    name,\n    onChange,\n    value,\n    label\n}: RadioFieldProps) => {\n    const handleChange = (e: React.SyntheticEvent<HTMLIFrameElement> | any) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    return (\n        <div className=\"mb-4\">\n            <label className=\"form-label\">{label}</label>\n            <div>\n                {options.map((option) => (\n                    <div\n                        key={option.name + \"_\" + option.value}\n                        className=\"form-check form-check-inline\"\n                    >\n                        <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name={name}\n                            id={option.name + \"_\" + option.value}\n                            checked={option.value === value}\n                            value={option.value}\n                            onChange={handleChange}\n                        />\n                        <label\n                            className=\"form-check-label\"\n                            htmlFor={option.name + \"_\" + option.value}\n                        >\n                            {option.name}\n                        </label>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nRadioField.propTypes = {\n    options: PropTypes.array,\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n    label: PropTypes.string\n};\n\nexport default RadioField;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAAC;AAUnC,MAAMC,UAAU,GAAG,QAMI;EAAA,IANH;IAChBC,OAAO;IACPC,IAAI;IACJC,QAAQ;IACRC,KAAK;IACLC;EACa,CAAC;EACd,MAAMC,YAAY,GAAIC,CAAgD,IAAK;IACvEJ,QAAQ,CAAC;MAAED,IAAI,EAAEM,MAAM,CAACN,IAAI;MAAEE,KAAK,EAAEI,MAAM,CAACJ;IAAM,CAAC,CAAC;EACxD,CAAC;EACD,oBACI;IAAK,SAAS,EAAC,MAAM;IAAA,wBACjB;MAAO,SAAS,EAAC,YAAY;MAAA,UAAEC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAS,eAC7C;MAAA,UACKJ,OAAO,CAACQ,GAAG,CAAEC,MAAM,iBAChB;QAEI,SAAS,EAAC,8BAA8B;QAAA,wBAExC;UACI,SAAS,EAAC,kBAAkB;UAC5B,IAAI,EAAC,OAAO;UACZ,IAAI,EAAER,IAAK;UACX,EAAE,EAAEQ,MAAM,CAACR,IAAI,GAAG,GAAG,GAAGQ,MAAM,CAACN,KAAM;UACrC,OAAO,EAAEM,MAAM,CAACN,KAAK,KAAKA,KAAM;UAChC,KAAK,EAAEM,MAAM,CAACN,KAAM;UACpB,QAAQ,EAAEE;QAAa;UAAA;UAAA;UAAA;QAAA,QACzB,eACF;UACI,SAAS,EAAC,kBAAkB;UAC5B,OAAO,EAAEI,MAAM,CAACR,IAAI,GAAG,GAAG,GAAGQ,MAAM,CAACN,KAAM;UAAA,UAEzCM,MAAM,CAACR;QAAI;UAAA;UAAA;UAAA;QAAA,QACR;MAAA,GAjBHQ,MAAM,CAACR,IAAI,GAAG,GAAG,GAAGQ,MAAM,CAACN,KAAK;QAAA;QAAA;QAAA;MAAA,QAmB5C;IAAC;MAAA;MAAA;MAAA;IAAA,QACA;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAC,KAvCIJ,UAAU;AAyChBA,UAAU,CAACW,SAAS,GAAG;EACnBV,OAAO,EAAEF,SAAS,CAACa,KAAK;EACxBV,IAAI,EAAEH,SAAS,CAACc,MAAM;EACtBV,QAAQ,EAAEJ,SAAS,CAACe,IAAI;EACxBV,KAAK,EAAEL,SAAS,CAACc,MAAM;EACvBR,KAAK,EAAEN,SAAS,CAACc;AACrB,CAAC;AAED,eAAeb,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module"}