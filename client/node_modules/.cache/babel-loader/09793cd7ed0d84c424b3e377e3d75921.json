{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport qualityService from \"../services/qaulity.service\";\nimport isOutdated from \"../utils/isOutdated\";\nconst initialState = {\n  entities: null,\n  isLoading: true,\n  error: null,\n  lastFetch: null\n};\nconst qualitiesSlice = createSlice({\n  name: \"qualities\",\n  initialState,\n  reducers: {\n    qualitiesRequested: state => {\n      state.isLoading = true;\n    },\n    qualitiesReceved: (state, action) => {\n      state.entities = action.payload;\n      state.lastFetch = Date.now();\n      state.isLoading = false;\n    },\n    qualitiesRequestFiled: (state, action) => {\n      state.error = action.payload;\n      state.isLoading = false;\n    }\n  }\n});\nconst {\n  reducer: qualitiesReducer,\n  actions\n} = qualitiesSlice;\nconst {\n  qualitiesRequested,\n  qualitiesReceved,\n  qualitiesRequestFiled\n} = actions;\nexport const loadQualitiesList = () => async (dispatch, getState) => {\n  const {\n    lastFetch\n  } = getState().qualities;\n  if (isOutdated(lastFetch)) {\n    dispatch(qualitiesRequested());\n    try {\n      const {\n        content\n      } = await qualityService.fetchAll();\n      dispatch(qualitiesReceved(content));\n    } catch (error) {\n      dispatch(qualitiesRequestFiled(error.message));\n    }\n  }\n};\nexport const getQualities = () => state => state.qualities.entities;\nexport const getQualitiesLoadingStatus = () => state => state.qualities.isLoading;\nexport const getQulitiesByIds = qualitiesIds => state => {\n  if (state.qualities.entities) {\n    const qualitiesArray = [];\n    for (const qualId of qualitiesIds) {\n      for (const quality of state.qualities.entities) {\n        if (quality._id === qualId) {\n          qualitiesArray.push(quality);\n          break;\n        }\n      }\n    }\n    return qualitiesArray;\n  }\n  return [];\n};\nexport default qualitiesReducer;","map":{"version":3,"names":["createSlice","qualityService","isOutdated","initialState","entities","isLoading","error","lastFetch","qualitiesSlice","name","reducers","qualitiesRequested","state","qualitiesReceved","action","payload","Date","now","qualitiesRequestFiled","reducer","qualitiesReducer","actions","loadQualitiesList","dispatch","getState","qualities","content","fetchAll","message","getQualities","getQualitiesLoadingStatus","getQulitiesByIds","qualitiesIds","qualitiesArray","qualId","quality","_id","push"],"sources":["/Users/sikollineu-iandeulei/Desktop/Userslist/usersList/client/src/app/store/qualities.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport qualityService from \"../services/qaulity.service\";\nimport isOutdated from \"../utils/isOutdated\";\n\ninterface QualitiesState {\n    entities: null;\n    isLoading: boolean;\n    error: null;\n    lastFetch: null;\n}\n\nconst initialState: QualitiesState = {\n    entities: null,\n    isLoading: true,\n    error: null,\n    lastFetch: null\n};\n\nconst qualitiesSlice = createSlice({\n    name: \"qualities\",\n    initialState,\n    reducers: {\n        qualitiesRequested: (state) => {\n            state.isLoading = true;\n        },\n        qualitiesReceved: (state, action) => {\n            state.entities = action.payload;\n            state.lastFetch = Date.now();\n            state.isLoading = false;\n        },\n        qualitiesRequestFiled: (state, action) => {\n            state.error = action.payload;\n            state.isLoading = false;\n        }\n    }\n});\n\nconst { reducer: qualitiesReducer, actions } = qualitiesSlice;\nconst { qualitiesRequested, qualitiesReceved, qualitiesRequestFiled } = actions;\n\nexport const loadQualitiesList = () => async (dispatch, getState) => {\n    const { lastFetch } = getState().qualities;\n    if (isOutdated(lastFetch)) {\n        dispatch(qualitiesRequested());\n        try {\n            const { content } = await qualityService.fetchAll();\n            dispatch(qualitiesReceved(content));\n        } catch (error) {\n            dispatch(qualitiesRequestFiled(error.message));\n        }\n    }\n};\n\nexport const getQualities = () => (state) => state.qualities.entities;\nexport const getQualitiesLoadingStatus = () => (state) =>\n    state.qualities.isLoading;\nexport const getQulitiesByIds = (qualitiesIds) => (state) => {\n    if (state.qualities.entities) {\n        const qualitiesArray = [];\n        for (const qualId of qualitiesIds) {\n            for (const quality of state.qualities.entities) {\n                if (quality._id === qualId) {\n                    qualitiesArray.push(quality);\n                    break;\n                }\n            }\n        }\n        return qualitiesArray;\n    }\n    return [];\n};\n\nexport default qualitiesReducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,UAAU,MAAM,qBAAqB;AAS5C,MAAMC,YAA4B,GAAG;EACjCC,QAAQ,EAAE,IAAI;EACdC,SAAS,EAAE,IAAI;EACfC,KAAK,EAAE,IAAI;EACXC,SAAS,EAAE;AACf,CAAC;AAED,MAAMC,cAAc,GAAGR,WAAW,CAAC;EAC/BS,IAAI,EAAE,WAAW;EACjBN,YAAY;EACZO,QAAQ,EAAE;IACNC,kBAAkB,EAAGC,KAAK,IAAK;MAC3BA,KAAK,CAACP,SAAS,GAAG,IAAI;IAC1B,CAAC;IACDQ,gBAAgB,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACjCF,KAAK,CAACR,QAAQ,GAAGU,MAAM,CAACC,OAAO;MAC/BH,KAAK,CAACL,SAAS,GAAGS,IAAI,CAACC,GAAG,EAAE;MAC5BL,KAAK,CAACP,SAAS,GAAG,KAAK;IAC3B,CAAC;IACDa,qBAAqB,EAAE,CAACN,KAAK,EAAEE,MAAM,KAAK;MACtCF,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACC,OAAO;MAC5BH,KAAK,CAACP,SAAS,GAAG,KAAK;IAC3B;EACJ;AACJ,CAAC,CAAC;AAEF,MAAM;EAAEc,OAAO,EAAEC,gBAAgB;EAAEC;AAAQ,CAAC,GAAGb,cAAc;AAC7D,MAAM;EAAEG,kBAAkB;EAAEE,gBAAgB;EAAEK;AAAsB,CAAC,GAAGG,OAAO;AAE/E,OAAO,MAAMC,iBAAiB,GAAG,MAAM,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACjE,MAAM;IAAEjB;EAAU,CAAC,GAAGiB,QAAQ,EAAE,CAACC,SAAS;EAC1C,IAAIvB,UAAU,CAACK,SAAS,CAAC,EAAE;IACvBgB,QAAQ,CAACZ,kBAAkB,EAAE,CAAC;IAC9B,IAAI;MACA,MAAM;QAAEe;MAAQ,CAAC,GAAG,MAAMzB,cAAc,CAAC0B,QAAQ,EAAE;MACnDJ,QAAQ,CAACV,gBAAgB,CAACa,OAAO,CAAC,CAAC;IACvC,CAAC,CAAC,OAAOpB,KAAK,EAAE;MACZiB,QAAQ,CAACL,qBAAqB,CAACZ,KAAK,CAACsB,OAAO,CAAC,CAAC;IAClD;EACJ;AACJ,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,MAAOjB,KAAK,IAAKA,KAAK,CAACa,SAAS,CAACrB,QAAQ;AACrE,OAAO,MAAM0B,yBAAyB,GAAG,MAAOlB,KAAK,IACjDA,KAAK,CAACa,SAAS,CAACpB,SAAS;AAC7B,OAAO,MAAM0B,gBAAgB,GAAIC,YAAY,IAAMpB,KAAK,IAAK;EACzD,IAAIA,KAAK,CAACa,SAAS,CAACrB,QAAQ,EAAE;IAC1B,MAAM6B,cAAc,GAAG,EAAE;IACzB,KAAK,MAAMC,MAAM,IAAIF,YAAY,EAAE;MAC/B,KAAK,MAAMG,OAAO,IAAIvB,KAAK,CAACa,SAAS,CAACrB,QAAQ,EAAE;QAC5C,IAAI+B,OAAO,CAACC,GAAG,KAAKF,MAAM,EAAE;UACxBD,cAAc,CAACI,IAAI,CAACF,OAAO,CAAC;UAC5B;QACJ;MACJ;IACJ;IACA,OAAOF,cAAc;EACzB;EACA,OAAO,EAAE;AACb,CAAC;AAED,eAAeb,gBAAgB"},"metadata":{},"sourceType":"module"}