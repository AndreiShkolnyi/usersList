{"ast":null,"code":"var _jsxFileName = \"/Users/sikollineu-iandeulei/Desktop/Userslist/usersList/client/src/app/components/common/protectedRoute.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { getIsLoggedIn } from \"../../store/users\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = _ref => {\n  _s();\n  let {\n    component: Component,\n    children,\n    ...rest\n  } = _ref;\n  const isLoggedIn = useSelector(getIsLoggedIn());\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    render: props => {\n      if (!isLoggedIn) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: \"/login\",\n            state: {\n              from: props.location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this);\n      }\n      return Component ? /*#__PURE__*/_jsxDEV(Component, {\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 36\n      }, this) : children;\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(ProtectedRoute, \"wwozkPYuXjHFfszlt2mcSB3o0is=\", false, function () {\n  return [useSelector];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Route","Redirect","useSelector","getIsLoggedIn","ProtectedRoute","component","Component","children","rest","isLoggedIn","props","pathname","state","from","location"],"sources":["/Users/sikollineu-iandeulei/Desktop/Userslist/usersList/client/src/app/components/common/protectedRoute.tsx"],"sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { getIsLoggedIn } from \"../../store/users\";\n\ninterface ProtectedRouteProps {\n    component: any;\n    children?: React.ReactNode;\n    path: string;\n}\n\nconst ProtectedRoute = ({\n    component: Component,\n    children,\n    ...rest\n}: ProtectedRouteProps) => {\n    const isLoggedIn = useSelector(getIsLoggedIn());\n\n    return (\n        <Route\n            {...rest}\n            render={(props) => {\n                if (!isLoggedIn) {\n                    return (\n                        <Redirect\n                            to={{\n                                pathname: \"/login\",\n                                state: {\n                                    from: props.location\n                                }\n                            }}\n                        />\n                    );\n                }\n                return Component ? <Component {...props} /> : children;\n            }}\n        />\n    );\n};\n\nexport default ProtectedRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAClD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,aAAa,QAAQ,mBAAmB;AAAC;AAQlD,MAAMC,cAAc,GAAG,QAII;EAAA;EAAA,IAJH;IACpBC,SAAS,EAAEC,SAAS;IACpBC,QAAQ;IACR,GAAGC;EACc,CAAC;EAClB,MAAMC,UAAU,GAAGP,WAAW,CAACC,aAAa,EAAE,CAAC;EAE/C,oBACI,QAAC,KAAK;IAAA,GACEK,IAAI;IACR,MAAM,EAAGE,KAAK,IAAK;MACf,IAAI,CAACD,UAAU,EAAE;QACb,oBACI,QAAC,QAAQ;UACL,EAAE,EAAE;YACAE,QAAQ,EAAE,QAAQ;YAClBC,KAAK,EAAE;cACHC,IAAI,EAAEH,KAAK,CAACI;YAChB;UACJ;QAAE;UAAA;UAAA;UAAA;QAAA,QACJ;MAEV;MACA,OAAOR,SAAS,gBAAG,QAAC,SAAS;QAAA,GAAKI;MAAK;QAAA;QAAA;QAAA;MAAA,QAAI,GAAGH,QAAQ;IAC1D;EAAE;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV,CAAC;AAAC,GA3BIH,cAAc;EAAA,QAKGF,WAAW;AAAA;AAAA,KAL5BE,cAAc;AA6BpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module"}