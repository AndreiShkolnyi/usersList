{"ast":null,"code":"const TOKEN_KEY = \"jwt-token\";\nconst REFRESH_KEY = \"jwt-refresh-token\";\nconst EXPIRES_KEY = \"jwt-expires\";\nconst USERID_KEY = \"user-local-id\";\nexport function setTokens(_ref) {\n  let {\n    refreshToken,\n    expiresIn = 3600,\n    userId,\n    accessToken\n  } = _ref;\n  const expiresData = new Date().getTime() + expiresIn * 1000;\n  localStorage.setItem(USERID_KEY, userId);\n  localStorage.setItem(TOKEN_KEY, accessToken);\n  localStorage.setItem(REFRESH_KEY, refreshToken);\n  localStorage.setItem(EXPIRES_KEY, expiresData);\n}\nexport function getAccessToken() {\n  return localStorage.getItem(TOKEN_KEY);\n}\nexport function getRefreshToken() {\n  return localStorage.getItem(REFRESH_KEY);\n}\nexport function getExpiresDate() {\n  return localStorage.getItem(EXPIRES_KEY);\n}\nexport function getUserId() {\n  return localStorage.getItem(USERID_KEY);\n}\nexport function removeAuthData() {\n  localStorage.removeItem(USERID_KEY);\n  localStorage.removeItem(TOKEN_KEY);\n  localStorage.removeItem(REFRESH_KEY);\n  localStorage.removeItem(EXPIRES_KEY);\n}\nconst localStorageService = {\n  setTokens,\n  getAccessToken,\n  getRefreshToken,\n  getExpiresDate,\n  getUserId,\n  removeAuthData\n};\nexport default localStorageService;","map":{"version":3,"names":["TOKEN_KEY","REFRESH_KEY","EXPIRES_KEY","USERID_KEY","setTokens","refreshToken","expiresIn","userId","accessToken","expiresData","Date","getTime","localStorage","setItem","getAccessToken","getItem","getRefreshToken","getExpiresDate","getUserId","removeAuthData","removeItem","localStorageService"],"sources":["/Users/sikollineu-iandeulei/Desktop/Userslist/usersList/client/src/app/services/localStorage.service.js"],"sourcesContent":["const TOKEN_KEY = \"jwt-token\";\nconst REFRESH_KEY = \"jwt-refresh-token\";\nconst EXPIRES_KEY = \"jwt-expires\";\nconst USERID_KEY = \"user-local-id\";\n\nexport function setTokens({\n    refreshToken,\n    expiresIn = 3600,\n    userId,\n    accessToken\n}) {\n    const expiresData = new Date().getTime() + expiresIn * 1000;\n    localStorage.setItem(USERID_KEY, userId);\n    localStorage.setItem(TOKEN_KEY, accessToken);\n    localStorage.setItem(REFRESH_KEY, refreshToken);\n    localStorage.setItem(EXPIRES_KEY, expiresData);\n}\nexport function getAccessToken() {\n    return localStorage.getItem(TOKEN_KEY);\n}\nexport function getRefreshToken() {\n    return localStorage.getItem(REFRESH_KEY);\n}\nexport function getExpiresDate() {\n    return localStorage.getItem(EXPIRES_KEY);\n}\nexport function getUserId() {\n    return localStorage.getItem(USERID_KEY);\n}\nexport function removeAuthData() {\n    localStorage.removeItem(USERID_KEY);\n    localStorage.removeItem(TOKEN_KEY);\n    localStorage.removeItem(REFRESH_KEY);\n    localStorage.removeItem(EXPIRES_KEY);\n}\n\nconst localStorageService = {\n    setTokens,\n    getAccessToken,\n    getRefreshToken,\n    getExpiresDate,\n    getUserId,\n    removeAuthData\n};\n\nexport default localStorageService;\n"],"mappings":"AAAA,MAAMA,SAAS,GAAG,WAAW;AAC7B,MAAMC,WAAW,GAAG,mBAAmB;AACvC,MAAMC,WAAW,GAAG,aAAa;AACjC,MAAMC,UAAU,GAAG,eAAe;AAElC,OAAO,SAASC,SAAS,OAKtB;EAAA,IALuB;IACtBC,YAAY;IACZC,SAAS,GAAG,IAAI;IAChBC,MAAM;IACNC;EACJ,CAAC;EACG,MAAMC,WAAW,GAAG,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE,GAAGL,SAAS,GAAG,IAAI;EAC3DM,YAAY,CAACC,OAAO,CAACV,UAAU,EAAEI,MAAM,CAAC;EACxCK,YAAY,CAACC,OAAO,CAACb,SAAS,EAAEQ,WAAW,CAAC;EAC5CI,YAAY,CAACC,OAAO,CAACZ,WAAW,EAAEI,YAAY,CAAC;EAC/CO,YAAY,CAACC,OAAO,CAACX,WAAW,EAAEO,WAAW,CAAC;AAClD;AACA,OAAO,SAASK,cAAc,GAAG;EAC7B,OAAOF,YAAY,CAACG,OAAO,CAACf,SAAS,CAAC;AAC1C;AACA,OAAO,SAASgB,eAAe,GAAG;EAC9B,OAAOJ,YAAY,CAACG,OAAO,CAACd,WAAW,CAAC;AAC5C;AACA,OAAO,SAASgB,cAAc,GAAG;EAC7B,OAAOL,YAAY,CAACG,OAAO,CAACb,WAAW,CAAC;AAC5C;AACA,OAAO,SAASgB,SAAS,GAAG;EACxB,OAAON,YAAY,CAACG,OAAO,CAACZ,UAAU,CAAC;AAC3C;AACA,OAAO,SAASgB,cAAc,GAAG;EAC7BP,YAAY,CAACQ,UAAU,CAACjB,UAAU,CAAC;EACnCS,YAAY,CAACQ,UAAU,CAACpB,SAAS,CAAC;EAClCY,YAAY,CAACQ,UAAU,CAACnB,WAAW,CAAC;EACpCW,YAAY,CAACQ,UAAU,CAAClB,WAAW,CAAC;AACxC;AAEA,MAAMmB,mBAAmB,GAAG;EACxBjB,SAAS;EACTU,cAAc;EACdE,eAAe;EACfC,cAAc;EACdC,SAAS;EACTC;AACJ,CAAC;AAED,eAAeE,mBAAmB"},"metadata":{},"sourceType":"module"}